

Microchip Technology PIC LITE Macro Assembler V1.45 build -152302408 
                                                                                               Fri Aug 31 13:27:30 2018

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	16LF1519
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	stringtext1,global,class=STRCODE,delta=2
     5                           	psect	stringtext2,global,class=STRCODE,delta=2
     6                           	psect	stringtext3,global,class=STRCODE,delta=2
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	bitbssBANK0,global,bit,class=BANK0,space=1,delta=1
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    11                           	psect	clrtext,global,class=CODE,delta=2
    12                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    13                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    15                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    16                           	psect	text1,local,class=CODE,merge=1,delta=2
    17                           	psect	text2,local,class=CODE,merge=1,delta=2
    18                           	psect	text3,local,class=CODE,merge=1,delta=2
    19                           	psect	text4,local,class=CODE,merge=1,delta=2
    20                           	psect	text5,local,class=CODE,merge=1,delta=2
    21                           	psect	text6,local,class=CODE,merge=1,delta=2
    22                           	psect	text7,local,class=CODE,merge=1,delta=2
    23                           	psect	text8,local,class=CODE,merge=1,delta=2
    24                           	psect	text9,local,class=CODE,merge=1,delta=2
    25                           	psect	text10,local,class=CODE,merge=1,delta=2
    26                           	psect	text11,local,class=CODE,merge=1,delta=2
    27                           	psect	text12,local,class=CODE,merge=1,delta=2
    28                           	psect	text13,local,class=CODE,merge=1,delta=2
    29                           	psect	text14,local,class=CODE,merge=1,delta=2
    30                           	psect	text15,local,class=CODE,merge=1,delta=2
    31                           	psect	text16,local,class=CODE,merge=1,delta=2
    32                           	psect	text17,local,class=CODE,merge=1,delta=2
    33                           	psect	text18,local,class=CODE,merge=1,delta=2
    34                           	psect	text19,local,class=CODE,merge=1,delta=2
    35                           	psect	text20,local,class=CODE,merge=1,delta=2
    36                           	psect	text21,local,class=CODE,merge=1,delta=2
    37                           	psect	intentry,global,class=CODE,delta=2
    38                           	psect	text23,local,class=CODE,merge=1,delta=2
    39                           	psect	text24,local,class=CODE,merge=1,delta=2
    40                           	psect	text25,local,class=CODE,merge=1,delta=2
    41                           	psect	text26,local,class=CODE,merge=1,delta=2
    42                           	psect	text27,local,class=CODE,merge=1,delta=2
    43                           	psect	text28,local,class=CODE,merge=1,delta=2
    44                           	psect	text29,local,class=CODE,merge=1,delta=2
    45                           	psect	text30,local,class=CODE,merge=1,delta=2
    46                           	psect	text31,local,class=CODE,merge=1,delta=2
    47                           	psect	text32,local,class=CODE,merge=1,delta=2
    48                           	psect	text33,local,class=CODE,merge=1,delta=2
    49                           	psect	text34,local,class=CODE,merge=1,delta=2
    50                           	psect	text35,local,class=CODE,merge=1,delta=2
    51                           	psect	text36,local,class=CODE,merge=1,delta=2
    52                           	psect	swtext1,local,class=CONST,delta=2
    53                           	psect	text37,local,class=CODE,merge=1,delta=2
    54                           	psect	text38,local,class=CODE,merge=1,delta=2
    55                           	psect	text39,local,class=CODE,merge=1,delta=2
    56                           	psect	text40,local,class=CODE,merge=1,delta=2
    57                           	psect	text41,local,class=CODE,merge=1,delta=2
    58                           	psect	text42,local,class=CODE,merge=1,delta=2
    59                           	psect	text43,local,class=CODE,merge=1,delta=2
    60                           	psect	text44,local,class=CODE,merge=1,delta=2
    61                           	psect	text45,local,class=CODE,merge=1,delta=2
    62                           	psect	text46,local,class=CODE,merge=1,delta=2
    63                           	psect	text47,local,class=CODE,merge=1,delta=2
    64                           	psect	text48,local,class=CODE,merge=1,delta=2
    65                           	psect	text49,local,class=CODE,merge=1,delta=2
    66                           	psect	text50,local,class=CODE,merge=1,delta=2
    67                           	psect	text51,local,class=CODE,merge=1,delta=2
    68                           	psect	text52,local,class=CODE,merge=1,delta=2
    69                           	psect	text53,local,class=CODE,merge=1,delta=2,group=1
    70                           	psect	text54,local,class=CODE,merge=1,delta=2,group=1
    71                           	psect	text55,local,class=CODE,merge=1,delta=2,group=1
    72                           	psect	text56,local,class=CODE,merge=1,delta=2,group=1
    73                           	psect	text57,local,class=CODE,merge=1,delta=2,group=1
    74                           	psect	text58,local,class=CODE,merge=1,delta=2,group=1
    75                           	psect	text59,local,class=CODE,merge=1,delta=2,group=1
    76                           	psect	text60,local,class=CODE,merge=1,delta=2,group=1
    77                           	psect	text61,local,class=CODE,merge=1,delta=2,group=1
    78                           	psect	text62,local,class=CODE,merge=1,delta=2,group=1
    79                           	psect	text63,local,class=CODE,merge=1,delta=2,group=1
    80                           	psect	text64,local,class=CODE,merge=1,delta=2,group=1
    81                           	psect	text65,local,class=CODE,merge=1,delta=2,group=1
    82                           	psect	text66,local,class=CODE,merge=1,delta=2,group=1
    83                           	psect	text67,local,class=CODE,merge=1,delta=2
    84                           	psect	text68,local,class=CODE,merge=1,delta=2
    85                           	psect	text69,local,class=CODE,merge=1,delta=2
    86                           	psect	text70,local,class=CODE,merge=1,delta=2
    87                           	psect	text71,local,class=CODE,merge=1,delta=2
    88                           	psect	text72,local,class=CODE,merge=1,delta=2
    89                           	psect	text73,local,class=CODE,merge=1,delta=2
    90                           	psect	text74,local,class=CODE,merge=1,delta=2
    91                           	psect	text75,local,class=CODE,merge=1,delta=2
    92                           	psect	text76,local,class=CODE,merge=1,delta=2
    93                           	psect	text77,local,class=CODE,merge=1,delta=2
    94                           	psect	text78,local,class=CODE,merge=1,delta=2
    95                           	psect	text79,local,class=CODE,merge=1,delta=2
    96                           	psect	text80,local,class=CODE,merge=1,delta=2
    97                           	psect	text81,local,class=CODE,merge=1,delta=2
    98                           	psect	text82,local,class=CODE,merge=1,delta=2
    99                           	psect	text83,local,class=CODE,merge=1,delta=2
   100                           	psect	text84,local,class=CODE,merge=1,delta=2
   101                           	psect	text85,local,class=CODE,merge=1,delta=2,group=1
   102                           	psect	text86,local,class=CODE,merge=1,delta=2,group=1
   103                           	psect	text87,local,class=CODE,merge=1,delta=2
   104                           	dabs	1,0x7E,2
   105  0000                     
   106                           ; Version 1.45 (B)
   107                           ; Generated 30/01/2018 GMT
   108                           ; 
   109                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
   110                           ; All rights reserved.
   111                           ; 
   112                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   113                           ; 
   114                           ; Redistribution and use in source and binary forms, with or without modification, are
   115                           ; permitted provided that the following conditions are met:
   116                           ; 
   117                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   118                           ;        conditions and the following disclaimer.
   119                           ; 
   120                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   121                           ;        of conditions and the following disclaimer in the documentation and/or other
   122                           ;        materials provided with the distribution.
   123                           ; 
   124                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   125                           ;        software without specific prior written permission.
   126                           ; 
   127                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   128                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   129                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   130                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   131                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   132                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   133                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   134                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   135                           ; 
   136                           ; 
   137                           ; Code-generator required, PIC16LF1519 Definitions
   138                           ; 
   139                           ; SFR Addresses
   140  0000                     	;# 
   141  0001                     	;# 
   142  0002                     	;# 
   143  0003                     	;# 
   144  0004                     	;# 
   145  0005                     	;# 
   146  0006                     	;# 
   147  0007                     	;# 
   148  0008                     	;# 
   149  0009                     	;# 
   150  000A                     	;# 
   151  000B                     	;# 
   152  000C                     	;# 
   153  000D                     	;# 
   154  000E                     	;# 
   155  000F                     	;# 
   156  0010                     	;# 
   157  0011                     	;# 
   158  0012                     	;# 
   159  0015                     	;# 
   160  0016                     	;# 
   161  0016                     	;# 
   162  0017                     	;# 
   163  0018                     	;# 
   164  0019                     	;# 
   165  001A                     	;# 
   166  001B                     	;# 
   167  001C                     	;# 
   168  008C                     	;# 
   169  008D                     	;# 
   170  008E                     	;# 
   171  008F                     	;# 
   172  0090                     	;# 
   173  0091                     	;# 
   174  0092                     	;# 
   175  0095                     	;# 
   176  0096                     	;# 
   177  0097                     	;# 
   178  0099                     	;# 
   179  009A                     	;# 
   180  009B                     	;# 
   181  009B                     	;# 
   182  009C                     	;# 
   183  009D                     	;# 
   184  009E                     	;# 
   185  010C                     	;# 
   186  010D                     	;# 
   187  010E                     	;# 
   188  010F                     	;# 
   189  0110                     	;# 
   190  0116                     	;# 
   191  0117                     	;# 
   192  011D                     	;# 
   193  018C                     	;# 
   194  018D                     	;# 
   195  018E                     	;# 
   196  018F                     	;# 
   197  0190                     	;# 
   198  0191                     	;# 
   199  0191                     	;# 
   200  0192                     	;# 
   201  0193                     	;# 
   202  0193                     	;# 
   203  0194                     	;# 
   204  0195                     	;# 
   205  0196                     	;# 
   206  0199                     	;# 
   207  019A                     	;# 
   208  019B                     	;# 
   209  019B                     	;# 
   210  019B                     	;# 
   211  019B                     	;# 
   212  019C                     	;# 
   213  019C                     	;# 
   214  019D                     	;# 
   215  019E                     	;# 
   216  019F                     	;# 
   217  020D                     	;# 
   218  0210                     	;# 
   219  0211                     	;# 
   220  0211                     	;# 
   221  0212                     	;# 
   222  0212                     	;# 
   223  0213                     	;# 
   224  0213                     	;# 
   225  0214                     	;# 
   226  0214                     	;# 
   227  0215                     	;# 
   228  0215                     	;# 
   229  0215                     	;# 
   230  0216                     	;# 
   231  0216                     	;# 
   232  0217                     	;# 
   233  0217                     	;# 
   234  0291                     	;# 
   235  0291                     	;# 
   236  0292                     	;# 
   237  0293                     	;# 
   238  0298                     	;# 
   239  0298                     	;# 
   240  0299                     	;# 
   241  029A                     	;# 
   242  0394                     	;# 
   243  0395                     	;# 
   244  0396                     	;# 
   245  0FE4                     	;# 
   246  0FE5                     	;# 
   247  0FE6                     	;# 
   248  0FE7                     	;# 
   249  0FE8                     	;# 
   250  0FE9                     	;# 
   251  0FEA                     	;# 
   252  0FEB                     	;# 
   253  0FED                     	;# 
   254  0FEE                     	;# 
   255  0FEF                     	;# 
   256  0000                     	;# 
   257  0001                     	;# 
   258  0002                     	;# 
   259  0003                     	;# 
   260  0004                     	;# 
   261  0005                     	;# 
   262  0006                     	;# 
   263  0007                     	;# 
   264  0008                     	;# 
   265  0009                     	;# 
   266  000A                     	;# 
   267  000B                     	;# 
   268  000C                     	;# 
   269  000D                     	;# 
   270  000E                     	;# 
   271  000F                     	;# 
   272  0010                     	;# 
   273  0011                     	;# 
   274  0012                     	;# 
   275  0015                     	;# 
   276  0016                     	;# 
   277  0016                     	;# 
   278  0017                     	;# 
   279  0018                     	;# 
   280  0019                     	;# 
   281  001A                     	;# 
   282  001B                     	;# 
   283  001C                     	;# 
   284  008C                     	;# 
   285  008D                     	;# 
   286  008E                     	;# 
   287  008F                     	;# 
   288  0090                     	;# 
   289  0091                     	;# 
   290  0092                     	;# 
   291  0095                     	;# 
   292  0096                     	;# 
   293  0097                     	;# 
   294  0099                     	;# 
   295  009A                     	;# 
   296  009B                     	;# 
   297  009B                     	;# 
   298  009C                     	;# 
   299  009D                     	;# 
   300  009E                     	;# 
   301  010C                     	;# 
   302  010D                     	;# 
   303  010E                     	;# 
   304  010F                     	;# 
   305  0110                     	;# 
   306  0116                     	;# 
   307  0117                     	;# 
   308  011D                     	;# 
   309  018C                     	;# 
   310  018D                     	;# 
   311  018E                     	;# 
   312  018F                     	;# 
   313  0190                     	;# 
   314  0191                     	;# 
   315  0191                     	;# 
   316  0192                     	;# 
   317  0193                     	;# 
   318  0193                     	;# 
   319  0194                     	;# 
   320  0195                     	;# 
   321  0196                     	;# 
   322  0199                     	;# 
   323  019A                     	;# 
   324  019B                     	;# 
   325  019B                     	;# 
   326  019B                     	;# 
   327  019B                     	;# 
   328  019C                     	;# 
   329  019C                     	;# 
   330  019D                     	;# 
   331  019E                     	;# 
   332  019F                     	;# 
   333  020D                     	;# 
   334  0210                     	;# 
   335  0211                     	;# 
   336  0211                     	;# 
   337  0212                     	;# 
   338  0212                     	;# 
   339  0213                     	;# 
   340  0213                     	;# 
   341  0214                     	;# 
   342  0214                     	;# 
   343  0215                     	;# 
   344  0215                     	;# 
   345  0215                     	;# 
   346  0216                     	;# 
   347  0216                     	;# 
   348  0217                     	;# 
   349  0217                     	;# 
   350  0291                     	;# 
   351  0291                     	;# 
   352  0292                     	;# 
   353  0293                     	;# 
   354  0298                     	;# 
   355  0298                     	;# 
   356  0299                     	;# 
   357  029A                     	;# 
   358  0394                     	;# 
   359  0395                     	;# 
   360  0396                     	;# 
   361  0FE4                     	;# 
   362  0FE5                     	;# 
   363  0FE6                     	;# 
   364  0FE7                     	;# 
   365  0FE8                     	;# 
   366  0FE9                     	;# 
   367  0FEA                     	;# 
   368  0FEB                     	;# 
   369  0FED                     	;# 
   370  0FEE                     	;# 
   371  0FEF                     	;# 
   372  0000                     	;# 
   373  0001                     	;# 
   374  0002                     	;# 
   375  0003                     	;# 
   376  0004                     	;# 
   377  0005                     	;# 
   378  0006                     	;# 
   379  0007                     	;# 
   380  0008                     	;# 
   381  0009                     	;# 
   382  000A                     	;# 
   383  000B                     	;# 
   384  000C                     	;# 
   385  000D                     	;# 
   386  000E                     	;# 
   387  000F                     	;# 
   388  0010                     	;# 
   389  0011                     	;# 
   390  0012                     	;# 
   391  0015                     	;# 
   392  0016                     	;# 
   393  0016                     	;# 
   394  0017                     	;# 
   395  0018                     	;# 
   396  0019                     	;# 
   397  001A                     	;# 
   398  001B                     	;# 
   399  001C                     	;# 
   400  008C                     	;# 
   401  008D                     	;# 
   402  008E                     	;# 
   403  008F                     	;# 
   404  0090                     	;# 
   405  0091                     	;# 
   406  0092                     	;# 
   407  0095                     	;# 
   408  0096                     	;# 
   409  0097                     	;# 
   410  0099                     	;# 
   411  009A                     	;# 
   412  009B                     	;# 
   413  009B                     	;# 
   414  009C                     	;# 
   415  009D                     	;# 
   416  009E                     	;# 
   417  010C                     	;# 
   418  010D                     	;# 
   419  010E                     	;# 
   420  010F                     	;# 
   421  0110                     	;# 
   422  0116                     	;# 
   423  0117                     	;# 
   424  011D                     	;# 
   425  018C                     	;# 
   426  018D                     	;# 
   427  018E                     	;# 
   428  018F                     	;# 
   429  0190                     	;# 
   430  0191                     	;# 
   431  0191                     	;# 
   432  0192                     	;# 
   433  0193                     	;# 
   434  0193                     	;# 
   435  0194                     	;# 
   436  0195                     	;# 
   437  0196                     	;# 
   438  0199                     	;# 
   439  019A                     	;# 
   440  019B                     	;# 
   441  019B                     	;# 
   442  019B                     	;# 
   443  019B                     	;# 
   444  019C                     	;# 
   445  019C                     	;# 
   446  019D                     	;# 
   447  019E                     	;# 
   448  019F                     	;# 
   449  020D                     	;# 
   450  0210                     	;# 
   451  0211                     	;# 
   452  0211                     	;# 
   453  0212                     	;# 
   454  0212                     	;# 
   455  0213                     	;# 
   456  0213                     	;# 
   457  0214                     	;# 
   458  0214                     	;# 
   459  0215                     	;# 
   460  0215                     	;# 
   461  0215                     	;# 
   462  0216                     	;# 
   463  0216                     	;# 
   464  0217                     	;# 
   465  0217                     	;# 
   466  0291                     	;# 
   467  0291                     	;# 
   468  0292                     	;# 
   469  0293                     	;# 
   470  0298                     	;# 
   471  0298                     	;# 
   472  0299                     	;# 
   473  029A                     	;# 
   474  0394                     	;# 
   475  0395                     	;# 
   476  0396                     	;# 
   477  0FE4                     	;# 
   478  0FE5                     	;# 
   479  0FE6                     	;# 
   480  0FE7                     	;# 
   481  0FE8                     	;# 
   482  0FE9                     	;# 
   483  0FEA                     	;# 
   484  0FEB                     	;# 
   485  0FED                     	;# 
   486  0FEE                     	;# 
   487  0FEF                     	;# 
   488  0000                     	;# 
   489  0001                     	;# 
   490  0002                     	;# 
   491  0003                     	;# 
   492  0004                     	;# 
   493  0005                     	;# 
   494  0006                     	;# 
   495  0007                     	;# 
   496  0008                     	;# 
   497  0009                     	;# 
   498  000A                     	;# 
   499  000B                     	;# 
   500  000C                     	;# 
   501  000D                     	;# 
   502  000E                     	;# 
   503  000F                     	;# 
   504  0010                     	;# 
   505  0011                     	;# 
   506  0012                     	;# 
   507  0015                     	;# 
   508  0016                     	;# 
   509  0016                     	;# 
   510  0017                     	;# 
   511  0018                     	;# 
   512  0019                     	;# 
   513  001A                     	;# 
   514  001B                     	;# 
   515  001C                     	;# 
   516  008C                     	;# 
   517  008D                     	;# 
   518  008E                     	;# 
   519  008F                     	;# 
   520  0090                     	;# 
   521  0091                     	;# 
   522  0092                     	;# 
   523  0095                     	;# 
   524  0096                     	;# 
   525  0097                     	;# 
   526  0099                     	;# 
   527  009A                     	;# 
   528  009B                     	;# 
   529  009B                     	;# 
   530  009C                     	;# 
   531  009D                     	;# 
   532  009E                     	;# 
   533  010C                     	;# 
   534  010D                     	;# 
   535  010E                     	;# 
   536  010F                     	;# 
   537  0110                     	;# 
   538  0116                     	;# 
   539  0117                     	;# 
   540  011D                     	;# 
   541  018C                     	;# 
   542  018D                     	;# 
   543  018E                     	;# 
   544  018F                     	;# 
   545  0190                     	;# 
   546  0191                     	;# 
   547  0191                     	;# 
   548  0192                     	;# 
   549  0193                     	;# 
   550  0193                     	;# 
   551  0194                     	;# 
   552  0195                     	;# 
   553  0196                     	;# 
   554  0199                     	;# 
   555  019A                     	;# 
   556  019B                     	;# 
   557  019B                     	;# 
   558  019B                     	;# 
   559  019B                     	;# 
   560  019C                     	;# 
   561  019C                     	;# 
   562  019D                     	;# 
   563  019E                     	;# 
   564  019F                     	;# 
   565  020D                     	;# 
   566  0210                     	;# 
   567  0211                     	;# 
   568  0211                     	;# 
   569  0212                     	;# 
   570  0212                     	;# 
   571  0213                     	;# 
   572  0213                     	;# 
   573  0214                     	;# 
   574  0214                     	;# 
   575  0215                     	;# 
   576  0215                     	;# 
   577  0215                     	;# 
   578  0216                     	;# 
   579  0216                     	;# 
   580  0217                     	;# 
   581  0217                     	;# 
   582  0291                     	;# 
   583  0291                     	;# 
   584  0292                     	;# 
   585  0293                     	;# 
   586  0298                     	;# 
   587  0298                     	;# 
   588  0299                     	;# 
   589  029A                     	;# 
   590  0394                     	;# 
   591  0395                     	;# 
   592  0396                     	;# 
   593  0FE4                     	;# 
   594  0FE5                     	;# 
   595  0FE6                     	;# 
   596  0FE7                     	;# 
   597  0FE8                     	;# 
   598  0FE9                     	;# 
   599  0FEA                     	;# 
   600  0FEB                     	;# 
   601  0FED                     	;# 
   602  0FEE                     	;# 
   603  0FEF                     	;# 
   604  0000                     	;# 
   605  0001                     	;# 
   606  0002                     	;# 
   607  0003                     	;# 
   608  0004                     	;# 
   609  0005                     	;# 
   610  0006                     	;# 
   611  0007                     	;# 
   612  0008                     	;# 
   613  0009                     	;# 
   614  000A                     	;# 
   615  000B                     	;# 
   616  000C                     	;# 
   617  000D                     	;# 
   618  000E                     	;# 
   619  000F                     	;# 
   620  0010                     	;# 
   621  0011                     	;# 
   622  0012                     	;# 
   623  0015                     	;# 
   624  0016                     	;# 
   625  0016                     	;# 
   626  0017                     	;# 
   627  0018                     	;# 
   628  0019                     	;# 
   629  001A                     	;# 
   630  001B                     	;# 
   631  001C                     	;# 
   632  008C                     	;# 
   633  008D                     	;# 
   634  008E                     	;# 
   635  008F                     	;# 
   636  0090                     	;# 
   637  0091                     	;# 
   638  0092                     	;# 
   639  0095                     	;# 
   640  0096                     	;# 
   641  0097                     	;# 
   642  0099                     	;# 
   643  009A                     	;# 
   644  009B                     	;# 
   645  009B                     	;# 
   646  009C                     	;# 
   647  009D                     	;# 
   648  009E                     	;# 
   649  010C                     	;# 
   650  010D                     	;# 
   651  010E                     	;# 
   652  010F                     	;# 
   653  0110                     	;# 
   654  0116                     	;# 
   655  0117                     	;# 
   656  011D                     	;# 
   657  018C                     	;# 
   658  018D                     	;# 
   659  018E                     	;# 
   660  018F                     	;# 
   661  0190                     	;# 
   662  0191                     	;# 
   663  0191                     	;# 
   664  0192                     	;# 
   665  0193                     	;# 
   666  0193                     	;# 
   667  0194                     	;# 
   668  0195                     	;# 
   669  0196                     	;# 
   670  0199                     	;# 
   671  019A                     	;# 
   672  019B                     	;# 
   673  019B                     	;# 
   674  019B                     	;# 
   675  019B                     	;# 
   676  019C                     	;# 
   677  019C                     	;# 
   678  019D                     	;# 
   679  019E                     	;# 
   680  019F                     	;# 
   681  020D                     	;# 
   682  0210                     	;# 
   683  0211                     	;# 
   684  0211                     	;# 
   685  0212                     	;# 
   686  0212                     	;# 
   687  0213                     	;# 
   688  0213                     	;# 
   689  0214                     	;# 
   690  0214                     	;# 
   691  0215                     	;# 
   692  0215                     	;# 
   693  0215                     	;# 
   694  0216                     	;# 
   695  0216                     	;# 
   696  0217                     	;# 
   697  0217                     	;# 
   698  0291                     	;# 
   699  0291                     	;# 
   700  0292                     	;# 
   701  0293                     	;# 
   702  0298                     	;# 
   703  0298                     	;# 
   704  0299                     	;# 
   705  029A                     	;# 
   706  0394                     	;# 
   707  0395                     	;# 
   708  0396                     	;# 
   709  0FE4                     	;# 
   710  0FE5                     	;# 
   711  0FE6                     	;# 
   712  0FE7                     	;# 
   713  0FE8                     	;# 
   714  0FE9                     	;# 
   715  0FEA                     	;# 
   716  0FEB                     	;# 
   717  0FED                     	;# 
   718  0FEE                     	;# 
   719  0FEF                     	;# 
   720  0000                     	;# 
   721  0001                     	;# 
   722  0002                     	;# 
   723  0003                     	;# 
   724  0004                     	;# 
   725  0005                     	;# 
   726  0006                     	;# 
   727  0007                     	;# 
   728  0008                     	;# 
   729  0009                     	;# 
   730  000A                     	;# 
   731  000B                     	;# 
   732  000C                     	;# 
   733  000D                     	;# 
   734  000E                     	;# 
   735  000F                     	;# 
   736  0010                     	;# 
   737  0011                     	;# 
   738  0012                     	;# 
   739  0015                     	;# 
   740  0016                     	;# 
   741  0016                     	;# 
   742  0017                     	;# 
   743  0018                     	;# 
   744  0019                     	;# 
   745  001A                     	;# 
   746  001B                     	;# 
   747  001C                     	;# 
   748  008C                     	;# 
   749  008D                     	;# 
   750  008E                     	;# 
   751  008F                     	;# 
   752  0090                     	;# 
   753  0091                     	;# 
   754  0092                     	;# 
   755  0095                     	;# 
   756  0096                     	;# 
   757  0097                     	;# 
   758  0099                     	;# 
   759  009A                     	;# 
   760  009B                     	;# 
   761  009B                     	;# 
   762  009C                     	;# 
   763  009D                     	;# 
   764  009E                     	;# 
   765  010C                     	;# 
   766  010D                     	;# 
   767  010E                     	;# 
   768  010F                     	;# 
   769  0110                     	;# 
   770  0116                     	;# 
   771  0117                     	;# 
   772  011D                     	;# 
   773  018C                     	;# 
   774  018D                     	;# 
   775  018E                     	;# 
   776  018F                     	;# 
   777  0190                     	;# 
   778  0191                     	;# 
   779  0191                     	;# 
   780  0192                     	;# 
   781  0193                     	;# 
   782  0193                     	;# 
   783  0194                     	;# 
   784  0195                     	;# 
   785  0196                     	;# 
   786  0199                     	;# 
   787  019A                     	;# 
   788  019B                     	;# 
   789  019B                     	;# 
   790  019B                     	;# 
   791  019B                     	;# 
   792  019C                     	;# 
   793  019C                     	;# 
   794  019D                     	;# 
   795  019E                     	;# 
   796  019F                     	;# 
   797  020D                     	;# 
   798  0210                     	;# 
   799  0211                     	;# 
   800  0211                     	;# 
   801  0212                     	;# 
   802  0212                     	;# 
   803  0213                     	;# 
   804  0213                     	;# 
   805  0214                     	;# 
   806  0214                     	;# 
   807  0215                     	;# 
   808  0215                     	;# 
   809  0215                     	;# 
   810  0216                     	;# 
   811  0216                     	;# 
   812  0217                     	;# 
   813  0217                     	;# 
   814  0291                     	;# 
   815  0291                     	;# 
   816  0292                     	;# 
   817  0293                     	;# 
   818  0298                     	;# 
   819  0298                     	;# 
   820  0299                     	;# 
   821  029A                     	;# 
   822  0394                     	;# 
   823  0395                     	;# 
   824  0396                     	;# 
   825  0FE4                     	;# 
   826  0FE5                     	;# 
   827  0FE6                     	;# 
   828  0FE7                     	;# 
   829  0FE8                     	;# 
   830  0FE9                     	;# 
   831  0FEA                     	;# 
   832  0FEB                     	;# 
   833  0FED                     	;# 
   834  0FEE                     	;# 
   835  0FEF                     	;# 
   836  0000                     	;# 
   837  0001                     	;# 
   838  0002                     	;# 
   839  0003                     	;# 
   840  0004                     	;# 
   841  0005                     	;# 
   842  0006                     	;# 
   843  0007                     	;# 
   844  0008                     	;# 
   845  0009                     	;# 
   846  000A                     	;# 
   847  000B                     	;# 
   848  000C                     	;# 
   849  000D                     	;# 
   850  000E                     	;# 
   851  000F                     	;# 
   852  0010                     	;# 
   853  0011                     	;# 
   854  0012                     	;# 
   855  0015                     	;# 
   856  0016                     	;# 
   857  0016                     	;# 
   858  0017                     	;# 
   859  0018                     	;# 
   860  0019                     	;# 
   861  001A                     	;# 
   862  001B                     	;# 
   863  001C                     	;# 
   864  008C                     	;# 
   865  008D                     	;# 
   866  008E                     	;# 
   867  008F                     	;# 
   868  0090                     	;# 
   869  0091                     	;# 
   870  0092                     	;# 
   871  0095                     	;# 
   872  0096                     	;# 
   873  0097                     	;# 
   874  0099                     	;# 
   875  009A                     	;# 
   876  009B                     	;# 
   877  009B                     	;# 
   878  009C                     	;# 
   879  009D                     	;# 
   880  009E                     	;# 
   881  010C                     	;# 
   882  010D                     	;# 
   883  010E                     	;# 
   884  010F                     	;# 
   885  0110                     	;# 
   886  0116                     	;# 
   887  0117                     	;# 
   888  011D                     	;# 
   889  018C                     	;# 
   890  018D                     	;# 
   891  018E                     	;# 
   892  018F                     	;# 
   893  0190                     	;# 
   894  0191                     	;# 
   895  0191                     	;# 
   896  0192                     	;# 
   897  0193                     	;# 
   898  0193                     	;# 
   899  0194                     	;# 
   900  0195                     	;# 
   901  0196                     	;# 
   902  0199                     	;# 
   903  019A                     	;# 
   904  019B                     	;# 
   905  019B                     	;# 
   906  019B                     	;# 
   907  019B                     	;# 
   908  019C                     	;# 
   909  019C                     	;# 
   910  019D                     	;# 
   911  019E                     	;# 
   912  019F                     	;# 
   913  020D                     	;# 
   914  0210                     	;# 
   915  0211                     	;# 
   916  0211                     	;# 
   917  0212                     	;# 
   918  0212                     	;# 
   919  0213                     	;# 
   920  0213                     	;# 
   921  0214                     	;# 
   922  0214                     	;# 
   923  0215                     	;# 
   924  0215                     	;# 
   925  0215                     	;# 
   926  0216                     	;# 
   927  0216                     	;# 
   928  0217                     	;# 
   929  0217                     	;# 
   930  0291                     	;# 
   931  0291                     	;# 
   932  0292                     	;# 
   933  0293                     	;# 
   934  0298                     	;# 
   935  0298                     	;# 
   936  0299                     	;# 
   937  029A                     	;# 
   938  0394                     	;# 
   939  0395                     	;# 
   940  0396                     	;# 
   941  0FE4                     	;# 
   942  0FE5                     	;# 
   943  0FE6                     	;# 
   944  0FE7                     	;# 
   945  0FE8                     	;# 
   946  0FE9                     	;# 
   947  0FEA                     	;# 
   948  0FEB                     	;# 
   949  0FED                     	;# 
   950  0FEE                     	;# 
   951  0FEF                     	;# 
   952  010F                     	;# 
   953  0000                     	;# 
   954  0001                     	;# 
   955  0002                     	;# 
   956  0003                     	;# 
   957  0004                     	;# 
   958  0005                     	;# 
   959  0006                     	;# 
   960  0007                     	;# 
   961  0008                     	;# 
   962  0009                     	;# 
   963  000A                     	;# 
   964  000B                     	;# 
   965  000C                     	;# 
   966  000D                     	;# 
   967  000E                     	;# 
   968  000F                     	;# 
   969  0010                     	;# 
   970  0011                     	;# 
   971  0012                     	;# 
   972  0015                     	;# 
   973  0016                     	;# 
   974  0016                     	;# 
   975  0017                     	;# 
   976  0018                     	;# 
   977  0019                     	;# 
   978  001A                     	;# 
   979  001B                     	;# 
   980  001C                     	;# 
   981  008C                     	;# 
   982  008D                     	;# 
   983  008E                     	;# 
   984  008F                     	;# 
   985  0090                     	;# 
   986  0091                     	;# 
   987  0092                     	;# 
   988  0095                     	;# 
   989  0096                     	;# 
   990  0097                     	;# 
   991  0099                     	;# 
   992  009A                     	;# 
   993  009B                     	;# 
   994  009B                     	;# 
   995  009C                     	;# 
   996  009D                     	;# 
   997  009E                     	;# 
   998  010C                     	;# 
   999  010D                     	;# 
  1000  010E                     	;# 
  1001  010F                     	;# 
  1002  0110                     	;# 
  1003  0116                     	;# 
  1004  0117                     	;# 
  1005  011D                     	;# 
  1006  018C                     	;# 
  1007  018D                     	;# 
  1008  018E                     	;# 
  1009  018F                     	;# 
  1010  0190                     	;# 
  1011  0191                     	;# 
  1012  0191                     	;# 
  1013  0192                     	;# 
  1014  0193                     	;# 
  1015  0193                     	;# 
  1016  0194                     	;# 
  1017  0195                     	;# 
  1018  0196                     	;# 
  1019  0199                     	;# 
  1020  019A                     	;# 
  1021  019B                     	;# 
  1022  019B                     	;# 
  1023  019B                     	;# 
  1024  019B                     	;# 
  1025  019C                     	;# 
  1026  019C                     	;# 
  1027  019D                     	;# 
  1028  019E                     	;# 
  1029  019F                     	;# 
  1030  020D                     	;# 
  1031  0210                     	;# 
  1032  0211                     	;# 
  1033  0211                     	;# 
  1034  0212                     	;# 
  1035  0212                     	;# 
  1036  0213                     	;# 
  1037  0213                     	;# 
  1038  0214                     	;# 
  1039  0214                     	;# 
  1040  0215                     	;# 
  1041  0215                     	;# 
  1042  0215                     	;# 
  1043  0216                     	;# 
  1044  0216                     	;# 
  1045  0217                     	;# 
  1046  0217                     	;# 
  1047  0291                     	;# 
  1048  0291                     	;# 
  1049  0292                     	;# 
  1050  0293                     	;# 
  1051  0298                     	;# 
  1052  0298                     	;# 
  1053  0299                     	;# 
  1054  029A                     	;# 
  1055  0394                     	;# 
  1056  0395                     	;# 
  1057  0396                     	;# 
  1058  0FE4                     	;# 
  1059  0FE5                     	;# 
  1060  0FE6                     	;# 
  1061  0FE7                     	;# 
  1062  0FE8                     	;# 
  1063  0FE9                     	;# 
  1064  0FEA                     	;# 
  1065  0FEB                     	;# 
  1066  0FED                     	;# 
  1067  0FEE                     	;# 
  1068  0FEF                     	;# 
  1069  010F                     	;# 
  1070  0000                     	;# 
  1071  0001                     	;# 
  1072  0002                     	;# 
  1073  0003                     	;# 
  1074  0004                     	;# 
  1075  0005                     	;# 
  1076  0006                     	;# 
  1077  0007                     	;# 
  1078  0008                     	;# 
  1079  0009                     	;# 
  1080  000A                     	;# 
  1081  000B                     	;# 
  1082  000C                     	;# 
  1083  000D                     	;# 
  1084  000E                     	;# 
  1085  000F                     	;# 
  1086  0010                     	;# 
  1087  0011                     	;# 
  1088  0012                     	;# 
  1089  0015                     	;# 
  1090  0016                     	;# 
  1091  0016                     	;# 
  1092  0017                     	;# 
  1093  0018                     	;# 
  1094  0019                     	;# 
  1095  001A                     	;# 
  1096  001B                     	;# 
  1097  001C                     	;# 
  1098  008C                     	;# 
  1099  008D                     	;# 
  1100  008E                     	;# 
  1101  008F                     	;# 
  1102  0090                     	;# 
  1103  0091                     	;# 
  1104  0092                     	;# 
  1105  0095                     	;# 
  1106  0096                     	;# 
  1107  0097                     	;# 
  1108  0099                     	;# 
  1109  009A                     	;# 
  1110  009B                     	;# 
  1111  009B                     	;# 
  1112  009C                     	;# 
  1113  009D                     	;# 
  1114  009E                     	;# 
  1115  010C                     	;# 
  1116  010D                     	;# 
  1117  010E                     	;# 
  1118  010F                     	;# 
  1119  0110                     	;# 
  1120  0116                     	;# 
  1121  0117                     	;# 
  1122  011D                     	;# 
  1123  018C                     	;# 
  1124  018D                     	;# 
  1125  018E                     	;# 
  1126  018F                     	;# 
  1127  0190                     	;# 
  1128  0191                     	;# 
  1129  0191                     	;# 
  1130  0192                     	;# 
  1131  0193                     	;# 
  1132  0193                     	;# 
  1133  0194                     	;# 
  1134  0195                     	;# 
  1135  0196                     	;# 
  1136  0199                     	;# 
  1137  019A                     	;# 
  1138  019B                     	;# 
  1139  019B                     	;# 
  1140  019B                     	;# 
  1141  019B                     	;# 
  1142  019C                     	;# 
  1143  019C                     	;# 
  1144  019D                     	;# 
  1145  019E                     	;# 
  1146  019F                     	;# 
  1147  020D                     	;# 
  1148  0210                     	;# 
  1149  0211                     	;# 
  1150  0211                     	;# 
  1151  0212                     	;# 
  1152  0212                     	;# 
  1153  0213                     	;# 
  1154  0213                     	;# 
  1155  0214                     	;# 
  1156  0214                     	;# 
  1157  0215                     	;# 
  1158  0215                     	;# 
  1159  0215                     	;# 
  1160  0216                     	;# 
  1161  0216                     	;# 
  1162  0217                     	;# 
  1163  0217                     	;# 
  1164  0291                     	;# 
  1165  0291                     	;# 
  1166  0292                     	;# 
  1167  0293                     	;# 
  1168  0298                     	;# 
  1169  0298                     	;# 
  1170  0299                     	;# 
  1171  029A                     	;# 
  1172  0394                     	;# 
  1173  0395                     	;# 
  1174  0396                     	;# 
  1175  0FE4                     	;# 
  1176  0FE5                     	;# 
  1177  0FE6                     	;# 
  1178  0FE7                     	;# 
  1179  0FE8                     	;# 
  1180  0FE9                     	;# 
  1181  0FEA                     	;# 
  1182  0FEB                     	;# 
  1183  0FED                     	;# 
  1184  0FEE                     	;# 
  1185  0FEF                     	;# 
  1186  010F                     	;# 
  1187                           
  1188                           	psect	stringtext1
  1189  1000                     __pstringtext1:	
  1190  1000                     _expected_user_ID:	
  1191  1000  344E               	retlw	78
  1192  1001  3400               	retlw	0
  1193  1002  3449               	retlw	73
  1194  1003  3400               	retlw	0
  1195  1004  3458               	retlw	88
  1196  1005  3400               	retlw	0
  1197  1006  3404               	retlw	4
  1198  1007  3400               	retlw	0
  1199  1008                     __end_of_expected_user_ID:	
  1200                           
  1201                           	psect	stringtext2
  1202  1008                     __pstringtext2:	
  1203  1008                     _extended_calibration:	
  1204  1008  34AD               	retlw	173
  1205  1009  3480               	retlw	128
  1206  100A  343F               	retlw	63
  1207  100B                     __end_of_extended_calibration:	
  1208                           
  1209                           	psect	stringtext3
  1210  100B                     __pstringtext3:	
  1211  100B                     _expected_device_ID:	
  1212  100B  34BF               	retlw	191
  1213  100C  3400               	retlw	0
  1214  100D                     __end_of_expected_device_ID:	
  1215  000D                     _PORTBbits	set	13
  1216  000E                     _PORTCbits	set	14
  1217  000C                     _PORTAbits	set	12
  1218  001C                     _T2CONbits	set	28
  1219  001A                     _TMR2	set	26
  1220  001B                     _PR2	set	27
  1221  001C                     _T2CON	set	28
  1222  0019                     _T1GCONbits	set	25
  1223  0018                     _T1CONbits	set	24
  1224  0011                     _PIR1bits	set	17
  1225  0016                     _TMR1L	set	22
  1226  0017                     _TMR1H	set	23
  1227  0019                     _T1GCON	set	25
  1228  0018                     _T1CON	set	24
  1229  000B                     _INTCONbits	set	11
  1230  0015                     _TMR0	set	21
  1231  00C2                     _nT1SYNC	set	194
  1232  0099                     _OSCCONbits	set	153
  1233  008C                     _TRISAbits	set	140
  1234  008D                     _TRISBbits	set	141
  1235  008E                     _TRISCbits	set	142
  1236  008F                     _TRISDbits	set	143
  1237  0090                     _TRISEbits	set	144
  1238  0095                     _OPTION_REGbits	set	149
  1239  008F                     _TRISD	set	143
  1240  008E                     _TRISC	set	142
  1241  008D                     _TRISB	set	141
  1242  008C                     _TRISA	set	140
  1243  0090                     _TRISE	set	144
  1244  0097                     _WDTCON	set	151
  1245  0099                     _OSCCON	set	153
  1246  0091                     _PIE1bits	set	145
  1247  0095                     _OPTION_REG	set	149
  1248  04D5                     _OSTS	set	1237
  1249  04D4                     _HFIOFR	set	1236
  1250  04D1                     _LFIOFR	set	1233
  1251  04AD                     _TMR0CS	set	1197
  1252  010F                     _ParallelPort	set	271
  1253  010F                     _LATDbits	set	271
  1254  010E                     _LATCbits	set	270
  1255  010C                     _LATAbits	set	268
  1256  0110                     _LATEbits	set	272
  1257  011D                     _APFCON	set	285
  1258  010E                     _LATC	set	270
  1259  010D                     _LATB	set	269
  1260  010C                     _LATA	set	268
  1261  010F                     _LATD	set	271
  1262  0110                     _LATE	set	272
  1263  0193                     _PMDATL	set	403
  1264  0194                     _PMDATH	set	404
  1265  0191                     _PMADRL	set	401
  1266  0192                     _PMADRH	set	402
  1267  018C                     _ANSELA	set	396
  1268  0190                     _ANSELE	set	400
  1269  018F                     _ANSELD	set	399
  1270  018D                     _ANSELB	set	397
  1271  018E                     _ANSELC	set	398
  1272  0CA8                     _RD	set	3240
  1273  0CAE                     _CFGS	set	3246
  1274  020D                     _WPUB	set	525
  1275  0210                     _WPUE	set	528
  1276  0394                     _IOCBPbits	set	916
  1277  0395                     _IOCBNbits	set	917
  1278  0396                     _IOCBFbits	set	918
  1279                           
  1280                           ; #config settings
  1281  004E                     
  1282                           	psect	cinit
  1283  0034                     start_initialization:	
  1284  0034                     __initialization:	
  1285                           
  1286                           ; Clear objects allocated to BITBANK0
  1287  0034  0020               	movlb	0	; select bank0
  1288  0035  01EE               	clrf	(__pbitbssBANK0/(0+8))& (0+127)
  1289                           
  1290                           ; Clear objects allocated to BANK0
  1291  0036  3057               	movlw	low __pbssBANK0
  1292  0037  0084               	movwf	4
  1293  0038  3000               	movlw	high __pbssBANK0
  1294  0039  0085               	movwf	5
  1295  003A  3017               	movlw	23
  1296  003B  318B  231F  3180   	fcall	clear_ram0
  1297                           
  1298                           ; Clear objects allocated to BANK1
  1299  003E  30A0               	movlw	low __pbssBANK1
  1300  003F  0084               	movwf	4
  1301  0040  3000               	movlw	high __pbssBANK1
  1302  0041  0085               	movwf	5
  1303  0042  3027               	movlw	39
  1304  0043  318B  231F         	fcall	clear_ram0
  1305  0045                     end_of_initialization:	
  1306                           ;End of C runtime variable initialization code
  1307                           
  1308  0045                     __end_of__initialization:	
  1309  0045  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  1310  0046  0020               	movlb	0
  1311  0047  3187  2F7F         	ljmp	_main	;jump to C main() function
  1312                           
  1313                           	psect	bitbssBANK0
  1314  0370                     __pbitbssBANK0:	
  1315  0370                     _asleep_flag:	
  1316  0370                     	ds	1
  1317                           
  1318                           	psect	bssBANK0
  1319  0057                     __pbssBANK0:	
  1320  0057                     _sleepy_seconds:	
  1321  0057                     	ds	3
  1322  005A                     _minutes_LSD:	
  1323  005A                     	ds	2
  1324  005C                     _seconds_MSD:	
  1325  005C                     	ds	2
  1326  005E                     _seconds_LSD:	
  1327  005E                     	ds	2
  1328  0060                     _display_hours:	
  1329  0060                     	ds	2
  1330  0062                     _hours:	
  1331  0062                     	ds	2
  1332  0064                     _minutes:	
  1333  0064                     	ds	2
  1334  0066                     _seconds:	
  1335  0066                     	ds	2
  1336  0068                     _mux_digit_compensated:	
  1337  0068                     	ds	2
  1338  006A                     _mux_digit:	
  1339  006A                     	ds	2
  1340  006C                     _IOCBF4_InterruptHandler:	
  1341  006C                     	ds	2
  1342                           
  1343                           	psect	bssBANK1
  1344  00A0                     __pbssBANK1:	
  1345  00A0                     _mux_numeral:	
  1346  00A0                     	ds	12
  1347  00AC                     _errno:	
  1348  00AC                     	ds	2
  1349  00AE                     _hours_MSD:	
  1350  00AE                     	ds	2
  1351  00B0                     _hours_LSD:	
  1352  00B0                     	ds	2
  1353  00B2                     _minutes_MSD:	
  1354  00B2                     	ds	2
  1355  00B4                     _IOCBF5_InterruptHandler:	
  1356  00B4                     	ds	2
  1357  00B6                     _IOCBF3_InterruptHandler:	
  1358  00B6                     	ds	2
  1359  00B8                     _IOCBF2_InterruptHandler:	
  1360  00B8                     	ds	2
  1361  00BA                     _IOCBF1_InterruptHandler:	
  1362  00BA                     	ds	2
  1363  00BC                     _IOCBF0_InterruptHandler:	
  1364  00BC                     	ds	2
  1365  00BE                     _TMR2_InterruptHandler:	
  1366  00BE                     	ds	2
  1367  00C0                     _TMR1_InterruptHandler:	
  1368  00C0                     	ds	2
  1369  00C2                     _timer1ReloadVal:	
  1370  00C2                     	ds	2
  1371  00C4                     _TMR0_InterruptHandler:	
  1372  00C4                     	ds	2
  1373  00C6                     _timer0ReloadVal:	
  1374  00C6                     	ds	1
  1375                           
  1376                           	psect	clrtext
  1377  0B1F                     clear_ram0:	
  1378                           ;	Called with FSR0 containing the base address, and
  1379                           ;	WREG with the size to clear
  1380                           
  1381  0B1F  0064               	clrwdt	;clear the watchdog before getting into this loop
  1382  0B20                     clrloop0:	
  1383  0B20  0180               	clrf	0	;clear RAM location pointed to by FSR
  1384  0B21  3101               	addfsr 0,1
  1385  0B22  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  1386  0B23  2B20               	goto	clrloop0	;have we reached the end yet?
  1387  0B24  3400               	retlw	0	;all done for this memory range, return
  1388                           
  1389                           	psect	cstackBANK1
  1390  00C7                     __pcstackBANK1:	
  1391  00C7                     ?_TMR0_SetInterruptHandler:	
  1392  00C7                     ?_TMR1_SetInterruptHandler:	
  1393                           ; 1 bytes @ 0x0
  1394                           
  1395  00C7                     ??_TMR1_StartTimer:	
  1396                           ; 1 bytes @ 0x0
  1397                           
  1398  00C7                     ?_TMR2_SetInterruptHandler:	
  1399                           ; 1 bytes @ 0x0
  1400                           
  1401  00C7                     ??_TMR2_StartTimer:	
  1402                           ; 1 bytes @ 0x0
  1403                           
  1404  00C7                     ??_OSCILLATOR_Initialize:	
  1405                           ; 1 bytes @ 0x0
  1406                           
  1407  00C7                     ??_WDT_Initialize:	
  1408                           ; 1 bytes @ 0x0
  1409                           
  1410  00C7                     ?_IOCBF0_SetInterruptHandler:	
  1411                           ; 1 bytes @ 0x0
  1412                           
  1413  00C7                     ?_IOCBF1_SetInterruptHandler:	
  1414                           ; 1 bytes @ 0x0
  1415                           
  1416  00C7                     ?_IOCBF2_SetInterruptHandler:	
  1417                           ; 1 bytes @ 0x0
  1418                           
  1419  00C7                     ?_IOCBF3_SetInterruptHandler:	
  1420                           ; 1 bytes @ 0x0
  1421                           
  1422  00C7                     ?_IOCBF4_SetInterruptHandler:	
  1423                           ; 1 bytes @ 0x0
  1424                           
  1425  00C7                     ?_IOCBF5_SetInterruptHandler:	
  1426                           ; 1 bytes @ 0x0
  1427                           
  1428  00C7                     ??_checkIDs:	
  1429                           ; 1 bytes @ 0x0
  1430                           
  1431  00C7                     ??_TMR2_StopTimer:	
  1432                           ; 1 bytes @ 0x0
  1433                           
  1434  00C7                     TMR0_SetInterruptHandler@InterruptHandler:	
  1435                           ; 1 bytes @ 0x0
  1436                           
  1437  00C7                     TMR1_SetInterruptHandler@InterruptHandler:	
  1438                           ; 2 bytes @ 0x0
  1439                           
  1440  00C7                     TMR2_SetInterruptHandler@InterruptHandler:	
  1441                           ; 2 bytes @ 0x0
  1442                           
  1443  00C7                     IOCBF0_SetInterruptHandler@InterruptHandler:	
  1444                           ; 2 bytes @ 0x0
  1445                           
  1446  00C7                     IOCBF1_SetInterruptHandler@InterruptHandler:	
  1447                           ; 2 bytes @ 0x0
  1448                           
  1449  00C7                     IOCBF2_SetInterruptHandler@InterruptHandler:	
  1450                           ; 2 bytes @ 0x0
  1451                           
  1452  00C7                     IOCBF3_SetInterruptHandler@InterruptHandler:	
  1453                           ; 2 bytes @ 0x0
  1454                           
  1455  00C7                     IOCBF4_SetInterruptHandler@InterruptHandler:	
  1456                           ; 2 bytes @ 0x0
  1457                           
  1458  00C7                     IOCBF5_SetInterruptHandler@InterruptHandler:	
  1459                           ; 2 bytes @ 0x0
  1460                           
  1461                           
  1462                           ; 2 bytes @ 0x0
  1463  00C7                     	ds	2
  1464  00C9                     ??_TMR0_SetInterruptHandler:	
  1465  00C9                     ??_TMR1_SetInterruptHandler:	
  1466                           ; 1 bytes @ 0x2
  1467                           
  1468  00C9                     ??_TMR2_SetInterruptHandler:	
  1469                           ; 1 bytes @ 0x2
  1470                           
  1471  00C9                     ??_PIN_MANAGER_Initialize:	
  1472                           ; 1 bytes @ 0x2
  1473                           
  1474  00C9                     ??_IOCBF0_SetInterruptHandler:	
  1475                           ; 1 bytes @ 0x2
  1476                           
  1477  00C9                     ??_IOCBF1_SetInterruptHandler:	
  1478                           ; 1 bytes @ 0x2
  1479                           
  1480  00C9                     ??_IOCBF2_SetInterruptHandler:	
  1481                           ; 1 bytes @ 0x2
  1482                           
  1483  00C9                     ??_IOCBF3_SetInterruptHandler:	
  1484                           ; 1 bytes @ 0x2
  1485                           
  1486  00C9                     ??_IOCBF4_SetInterruptHandler:	
  1487                           ; 1 bytes @ 0x2
  1488                           
  1489  00C9                     ??_IOCBF5_SetInterruptHandler:	
  1490                           ; 1 bytes @ 0x2
  1491                           
  1492  00C9                     ??_TMR0_Initialize:	
  1493                           ; 1 bytes @ 0x2
  1494                           
  1495  00C9                     ??_TMR1_Initialize:	
  1496                           ; 1 bytes @ 0x2
  1497                           
  1498  00C9                     ??_TMR2_Initialize:	
  1499                           ; 1 bytes @ 0x2
  1500                           
  1501  00C9                     checkIDs@user_ID_0:	
  1502                           ; 1 bytes @ 0x2
  1503                           
  1504                           
  1505                           ; 2 bytes @ 0x2
  1506  00C9                     	ds	1
  1507  00CA                     ??_SYSTEM_Initialize:	
  1508                           
  1509                           ; 1 bytes @ 0x3
  1510  00CA                     	ds	1
  1511  00CB                     checkIDs@user_ID_1:	
  1512                           
  1513                           ; 2 bytes @ 0x4
  1514  00CB                     	ds	2
  1515  00CD                     checkIDs@user_ID_2:	
  1516                           
  1517                           ; 2 bytes @ 0x6
  1518  00CD                     	ds	2
  1519  00CF                     checkIDs@user_ID_3:	
  1520                           
  1521                           ; 2 bytes @ 0x8
  1522  00CF                     	ds	2
  1523  00D1                     checkIDs@device_ID:	
  1524                           
  1525                           ; 2 bytes @ 0xA
  1526  00D1                     	ds	2
  1527  00D3                     ??_startup:	
  1528  00D3                     ??_main:	
  1529                           ; 1 bytes @ 0xC
  1530                           
  1531                           
  1532                           ; 1 bytes @ 0xC
  1533  00D3                     	ds	2
  1534                           
  1535                           	psect	cstackCOMMON
  1536  0070                     __pcstackCOMMON:	
  1537  0070                     ?_TMR0_DefaultInterruptHandler:	
  1538  0070                     ??_TMR0_DefaultInterruptHandler:	
  1539                           ; 1 bytes @ 0x0
  1540                           
  1541  0070                     ?_TMR1_DefaultInterruptHandler:	
  1542                           ; 1 bytes @ 0x0
  1543                           
  1544  0070                     ??_TMR1_DefaultInterruptHandler:	
  1545                           ; 1 bytes @ 0x0
  1546                           
  1547  0070                     ?_TMR1_StartTimer:	
  1548                           ; 1 bytes @ 0x0
  1549                           
  1550  0070                     ?_TMR2_DefaultInterruptHandler:	
  1551                           ; 1 bytes @ 0x0
  1552                           
  1553  0070                     ??_TMR2_DefaultInterruptHandler:	
  1554                           ; 1 bytes @ 0x0
  1555                           
  1556  0070                     ?_TMR2_StartTimer:	
  1557                           ; 1 bytes @ 0x0
  1558                           
  1559  0070                     ?_PIN_MANAGER_IOC:	
  1560                           ; 1 bytes @ 0x0
  1561                           
  1562  0070                     ?_PIN_MANAGER_Initialize:	
  1563                           ; 1 bytes @ 0x0
  1564                           
  1565  0070                     ?_OSCILLATOR_Initialize:	
  1566                           ; 1 bytes @ 0x0
  1567                           
  1568  0070                     ?_WDT_Initialize:	
  1569                           ; 1 bytes @ 0x0
  1570                           
  1571  0070                     ?_IOCBF0_DefaultInterruptHandler:	
  1572                           ; 1 bytes @ 0x0
  1573                           
  1574  0070                     ??_IOCBF0_DefaultInterruptHandler:	
  1575                           ; 1 bytes @ 0x0
  1576                           
  1577  0070                     ?_IOCBF1_DefaultInterruptHandler:	
  1578                           ; 1 bytes @ 0x0
  1579                           
  1580  0070                     ??_IOCBF1_DefaultInterruptHandler:	
  1581                           ; 1 bytes @ 0x0
  1582                           
  1583  0070                     ?_IOCBF2_DefaultInterruptHandler:	
  1584                           ; 1 bytes @ 0x0
  1585                           
  1586  0070                     ??_IOCBF2_DefaultInterruptHandler:	
  1587                           ; 1 bytes @ 0x0
  1588                           
  1589  0070                     ?_IOCBF3_DefaultInterruptHandler:	
  1590                           ; 1 bytes @ 0x0
  1591                           
  1592  0070                     ??_IOCBF3_DefaultInterruptHandler:	
  1593                           ; 1 bytes @ 0x0
  1594                           
  1595  0070                     ?_IOCBF4_DefaultInterruptHandler:	
  1596                           ; 1 bytes @ 0x0
  1597                           
  1598  0070                     ??_IOCBF4_DefaultInterruptHandler:	
  1599                           ; 1 bytes @ 0x0
  1600                           
  1601  0070                     ?_IOCBF5_DefaultInterruptHandler:	
  1602                           ; 1 bytes @ 0x0
  1603                           
  1604  0070                     ??_IOCBF5_DefaultInterruptHandler:	
  1605                           ; 1 bytes @ 0x0
  1606                           
  1607  0070                     ?_IOCBF0_ISR:	
  1608                           ; 1 bytes @ 0x0
  1609                           
  1610  0070                     ?_IOCBF1_ISR:	
  1611                           ; 1 bytes @ 0x0
  1612                           
  1613  0070                     ?_IOCBF2_ISR:	
  1614                           ; 1 bytes @ 0x0
  1615                           
  1616  0070                     ?_IOCBF3_ISR:	
  1617                           ; 1 bytes @ 0x0
  1618                           
  1619  0070                     ??_IOCBF3_ISR:	
  1620                           ; 1 bytes @ 0x0
  1621                           
  1622  0070                     ?_IOCBF4_ISR:	
  1623                           ; 1 bytes @ 0x0
  1624                           
  1625  0070                     ?_IOCBF5_ISR:	
  1626                           ; 1 bytes @ 0x0
  1627                           
  1628  0070                     ??_IOCBF5_ISR:	
  1629                           ; 1 bytes @ 0x0
  1630                           
  1631  0070                     ?_startup:	
  1632                           ; 1 bytes @ 0x0
  1633                           
  1634  0070                     ?_checkIDs:	
  1635                           ; 1 bytes @ 0x0
  1636                           
  1637  0070                     ?_muxISR:	
  1638                           ; 1 bytes @ 0x0
  1639                           
  1640  0070                     ?_tickISR:	
  1641                           ; 1 bytes @ 0x0
  1642                           
  1643  0070                     ?_blankISR:	
  1644                           ; 1 bytes @ 0x0
  1645                           
  1646  0070                     ??_blankISR:	
  1647                           ; 1 bytes @ 0x0
  1648                           
  1649  0070                     ?_setSecondsISR:	
  1650                           ; 1 bytes @ 0x0
  1651                           
  1652  0070                     ?_setMinutesISR:	
  1653                           ; 1 bytes @ 0x0
  1654                           
  1655  0070                     ?_setHoursISR:	
  1656                           ; 1 bytes @ 0x0
  1657                           
  1658  0070                     ?_displayToggleISR:	
  1659                           ; 1 bytes @ 0x0
  1660                           
  1661  0070                     ??_displayToggleISR:	
  1662                           ; 1 bytes @ 0x0
  1663                           
  1664  0070                     ?_powerFailISR:	
  1665                           ; 1 bytes @ 0x0
  1666                           
  1667  0070                     ?_updateParallelPort:	
  1668                           ; 1 bytes @ 0x0
  1669                           
  1670  0070                     ??_updateParallelPort:	
  1671                           ; 1 bytes @ 0x0
  1672                           
  1673  0070                     ?_timeParse:	
  1674                           ; 1 bytes @ 0x0
  1675                           
  1676  0070                     ??_timeParse:	
  1677                           ; 1 bytes @ 0x0
  1678                           
  1679  0070                     ?_twentyFourParse:	
  1680                           ; 1 bytes @ 0x0
  1681                           
  1682  0070                     ??_twentyFourParse:	
  1683                           ; 1 bytes @ 0x0
  1684                           
  1685  0070                     ?_isolateDigits:	
  1686                           ; 1 bytes @ 0x0
  1687                           
  1688  0070                     ?_updateDisplay:	
  1689                           ; 1 bytes @ 0x0
  1690                           
  1691  0070                     ??_updateDisplay:	
  1692                           ; 1 bytes @ 0x0
  1693                           
  1694  0070                     ?_groundCathode:	
  1695                           ; 1 bytes @ 0x0
  1696                           
  1697  0070                     ??_groundCathode:	
  1698                           ; 1 bytes @ 0x0
  1699                           
  1700  0070                     ?_shutdown:	
  1701                           ; 1 bytes @ 0x0
  1702                           
  1703  0070                     ?_wakeup:	
  1704                           ; 1 bytes @ 0x0
  1705                           
  1706  0070                     ?_sleepyTickISR:	
  1707                           ; 1 bytes @ 0x0
  1708                           
  1709  0070                     ??_sleepyTickISR:	
  1710                           ; 1 bytes @ 0x0
  1711                           
  1712  0070                     ?_restoreTime:	
  1713                           ; 1 bytes @ 0x0
  1714                           
  1715  0070                     ?_TMR0_Initialize:	
  1716                           ; 1 bytes @ 0x0
  1717                           
  1718  0070                     ?_TMR0_ISR:	
  1719                           ; 1 bytes @ 0x0
  1720                           
  1721  0070                     ?_TMR1_Initialize:	
  1722                           ; 1 bytes @ 0x0
  1723                           
  1724  0070                     ?_TMR1_StopTimer:	
  1725                           ; 1 bytes @ 0x0
  1726                           
  1727  0070                     ??_TMR1_StopTimer:	
  1728                           ; 1 bytes @ 0x0
  1729                           
  1730  0070                     ?_TMR1_ISR:	
  1731                           ; 1 bytes @ 0x0
  1732                           
  1733  0070                     ?_TMR2_Initialize:	
  1734                           ; 1 bytes @ 0x0
  1735                           
  1736  0070                     ?_TMR2_StopTimer:	
  1737                           ; 1 bytes @ 0x0
  1738                           
  1739  0070                     ?_TMR2_ISR:	
  1740                           ; 1 bytes @ 0x0
  1741                           
  1742  0070                     ??_TMR2_ISR:	
  1743                           ; 1 bytes @ 0x0
  1744                           
  1745  0070                     ?_INTERRUPT_InterruptManager:	
  1746                           ; 1 bytes @ 0x0
  1747                           
  1748  0070                     ?_SYSTEM_Initialize:	
  1749                           ; 1 bytes @ 0x0
  1750                           
  1751  0070                     ?_main:	
  1752                           ; 1 bytes @ 0x0
  1753                           
  1754  0070                     ?_muxDigitCompensation:	
  1755                           ; 1 bytes @ 0x0
  1756                           
  1757  0070                     ??_muxDigitCompensation:	
  1758                           ; 1 bytes @ 0x0
  1759                           
  1760  0070                     ?i1_TMR0_SetInterruptHandler:	
  1761                           ; 1 bytes @ 0x0
  1762                           
  1763  0070                     ?i1_TMR1_SetInterruptHandler:	
  1764                           ; 1 bytes @ 0x0
  1765                           
  1766  0070                     ?i1_TMR2_StartTimer:	
  1767                           ; 1 bytes @ 0x0
  1768                           
  1769  0070                     ??i1_TMR2_StartTimer:	
  1770                           ; 1 bytes @ 0x0
  1771                           
  1772  0070                     ?i1_TMR2_StopTimer:	
  1773                           ; 1 bytes @ 0x0
  1774                           
  1775  0070                     ??i1_TMR2_StopTimer:	
  1776                           ; 1 bytes @ 0x0
  1777                           
  1778  0070                     ?i1_TMR2_SetInterruptHandler:	
  1779                           ; 1 bytes @ 0x0
  1780                           
  1781  0070                     ?i1_IOCBF0_SetInterruptHandler:	
  1782                           ; 1 bytes @ 0x0
  1783                           
  1784  0070                     ?i1_IOCBF1_SetInterruptHandler:	
  1785                           ; 1 bytes @ 0x0
  1786                           
  1787  0070                     ?i1_IOCBF2_SetInterruptHandler:	
  1788                           ; 1 bytes @ 0x0
  1789                           
  1790  0070                     ?i1_IOCBF3_SetInterruptHandler:	
  1791                           ; 1 bytes @ 0x0
  1792                           
  1793  0070                     ?i1_IOCBF4_SetInterruptHandler:	
  1794                           ; 1 bytes @ 0x0
  1795                           
  1796  0070                     ?___lwdiv:	
  1797                           ; 1 bytes @ 0x0
  1798                           
  1799  0070                     ?___ftpack:	
  1800                           ; 2 bytes @ 0x0
  1801                           
  1802  0070                     ?_frexp:	
  1803                           ; 3 bytes @ 0x0
  1804                           
  1805  0070                     ?___ltmod:	
  1806                           ; 3 bytes @ 0x0
  1807                           
  1808  0070                     ?___almod:	
  1809                           ; 3 bytes @ 0x0
  1810                           
  1811  0070                     ?___fttol:	
  1812                           ; 4 bytes @ 0x0
  1813                           
  1814  0070                     ___lwdiv@divisor:	
  1815                           ; 4 bytes @ 0x0
  1816                           
  1817  0070                     i1TMR0_SetInterruptHandler@InterruptHandler:	
  1818                           ; 2 bytes @ 0x0
  1819                           
  1820  0070                     i1TMR1_SetInterruptHandler@InterruptHandler:	
  1821                           ; 2 bytes @ 0x0
  1822                           
  1823  0070                     i1TMR2_SetInterruptHandler@InterruptHandler:	
  1824                           ; 2 bytes @ 0x0
  1825                           
  1826  0070                     i1IOCBF0_SetInterruptHandler@InterruptHandler:	
  1827                           ; 2 bytes @ 0x0
  1828                           
  1829  0070                     i1IOCBF1_SetInterruptHandler@InterruptHandler:	
  1830                           ; 2 bytes @ 0x0
  1831                           
  1832  0070                     i1IOCBF2_SetInterruptHandler@InterruptHandler:	
  1833                           ; 2 bytes @ 0x0
  1834                           
  1835  0070                     i1IOCBF3_SetInterruptHandler@InterruptHandler:	
  1836                           ; 2 bytes @ 0x0
  1837                           
  1838  0070                     i1IOCBF4_SetInterruptHandler@InterruptHandler:	
  1839                           ; 2 bytes @ 0x0
  1840                           
  1841  0070                     ___ftpack@arg:	
  1842                           ; 2 bytes @ 0x0
  1843                           
  1844  0070                     ___fttol@f1:	
  1845                           ; 3 bytes @ 0x0
  1846                           
  1847  0070                     ___ltmod@divisor:	
  1848                           ; 3 bytes @ 0x0
  1849                           
  1850  0070                     frexp@value:	
  1851                           ; 3 bytes @ 0x0
  1852                           
  1853  0070                     ___almod@divisor:	
  1854                           ; 3 bytes @ 0x0
  1855                           
  1856                           
  1857                           ; 4 bytes @ 0x0
  1858  0070                     	ds	1
  1859  0071                     ??_muxISR:	
  1860  0071                     ??_TMR0_ISR:	
  1861                           ; 1 bytes @ 0x1
  1862                           
  1863                           
  1864                           ; 1 bytes @ 0x1
  1865  0071                     	ds	1
  1866  0072                     ??_shutdown:	
  1867  0072                     ??i1_TMR0_SetInterruptHandler:	
  1868                           ; 1 bytes @ 0x2
  1869                           
  1870  0072                     ??i1_TMR1_SetInterruptHandler:	
  1871                           ; 1 bytes @ 0x2
  1872                           
  1873  0072                     ??i1_TMR2_SetInterruptHandler:	
  1874                           ; 1 bytes @ 0x2
  1875                           
  1876  0072                     ??i1_IOCBF0_SetInterruptHandler:	
  1877                           ; 1 bytes @ 0x2
  1878                           
  1879  0072                     ??i1_IOCBF1_SetInterruptHandler:	
  1880                           ; 1 bytes @ 0x2
  1881                           
  1882  0072                     ??i1_IOCBF2_SetInterruptHandler:	
  1883                           ; 1 bytes @ 0x2
  1884                           
  1885  0072                     ??i1_IOCBF3_SetInterruptHandler:	
  1886                           ; 1 bytes @ 0x2
  1887                           
  1888  0072                     ??i1_IOCBF4_SetInterruptHandler:	
  1889                           ; 1 bytes @ 0x2
  1890                           
  1891  0072                     ___lwdiv@dividend:	
  1892                           ; 1 bytes @ 0x2
  1893                           
  1894                           
  1895                           ; 2 bytes @ 0x2
  1896  0072                     	ds	1
  1897  0073                     ___ftpack@exp:	
  1898  0073                     frexp@eptr:	
  1899                           ; 1 bytes @ 0x3
  1900                           
  1901  0073                     ___ltmod@dividend:	
  1902                           ; 1 bytes @ 0x3
  1903                           
  1904                           
  1905                           ; 3 bytes @ 0x3
  1906  0073                     	ds	1
  1907  0074                     ??_frexp:	
  1908  0074                     ??___fttol:	
  1909                           ; 1 bytes @ 0x4
  1910                           
  1911  0074                     ??___lwdiv:	
  1912                           ; 1 bytes @ 0x4
  1913                           
  1914  0074                     ___ftpack@sign:	
  1915                           ; 1 bytes @ 0x4
  1916                           
  1917  0074                     ___almod@dividend:	
  1918                           ; 1 bytes @ 0x4
  1919                           
  1920                           
  1921                           ; 4 bytes @ 0x4
  1922  0074                     	ds	1
  1923  0075                     ??___ftpack:	
  1924  0075                     ___lwdiv@quotient:	
  1925                           ; 1 bytes @ 0x5
  1926                           
  1927                           
  1928                           ; 2 bytes @ 0x5
  1929  0075                     	ds	1
  1930  0076                     ??___ltmod:	
  1931                           
  1932                           ; 1 bytes @ 0x6
  1933  0076                     	ds	1
  1934  0077                     ___ltmod@counter:	
  1935  0077                     ___lwdiv@counter:	
  1936                           ; 1 bytes @ 0x7
  1937                           
  1938                           
  1939                           ; 1 bytes @ 0x7
  1940  0077                     	ds	1
  1941  0078                     ??___almod:	
  1942  0078                     ?___lwmod:	
  1943                           ; 1 bytes @ 0x8
  1944                           
  1945  0078                     ?___ltdiv:	
  1946                           ; 2 bytes @ 0x8
  1947                           
  1948  0078                     ?___lttoft:	
  1949                           ; 3 bytes @ 0x8
  1950                           
  1951  0078                     ___fttol@sign1:	
  1952                           ; 3 bytes @ 0x8
  1953                           
  1954  0078                     ___lwmod@divisor:	
  1955                           ; 1 bytes @ 0x8
  1956                           
  1957  0078                     ___ltdiv@divisor:	
  1958                           ; 2 bytes @ 0x8
  1959                           
  1960  0078                     ___lttoft@c:	
  1961                           ; 3 bytes @ 0x8
  1962                           
  1963                           
  1964                           ; 3 bytes @ 0x8
  1965  0078                     	ds	1
  1966  0079                     ___almod@counter:	
  1967  0079                     ___fttol@lval:	
  1968                           ; 1 bytes @ 0x9
  1969                           
  1970                           
  1971                           ; 4 bytes @ 0x9
  1972  0079                     	ds	1
  1973  007A                     ___almod@sign:	
  1974  007A                     ___lwmod@dividend:	
  1975                           ; 1 bytes @ 0xA
  1976                           
  1977                           
  1978                           ; 2 bytes @ 0xA
  1979  007A                     	ds	1
  1980  007B                     ??___aldiv:	
  1981  007B                     ??___lttoft:	
  1982                           ; 1 bytes @ 0xB
  1983                           
  1984  007B                     ___ltdiv@dividend:	
  1985                           ; 1 bytes @ 0xB
  1986                           
  1987                           
  1988                           ; 3 bytes @ 0xB
  1989  007B                     	ds	1
  1990  007C                     ??___lwmod:	
  1991                           
  1992                           ; 1 bytes @ 0xC
  1993  007C                     	ds	1
  1994  007D                     ___fttol@exp1:	
  1995  007D                     ___lwmod@counter:	
  1996                           ; 1 bytes @ 0xD
  1997                           
  1998                           
  1999                           ; 1 bytes @ 0xD
  2000  007D                     	ds	1
  2001  007E                     ??_PIN_MANAGER_IOC:	
  2002  007E                     ??_IOCBF0_ISR:	
  2003                           ; 1 bytes @ 0xE
  2004                           
  2005  007E                     ??_IOCBF1_ISR:	
  2006                           ; 1 bytes @ 0xE
  2007                           
  2008  007E                     ??_IOCBF2_ISR:	
  2009                           ; 1 bytes @ 0xE
  2010                           
  2011  007E                     ??_IOCBF4_ISR:	
  2012                           ; 1 bytes @ 0xE
  2013                           
  2014  007E                     ??_tickISR:	
  2015                           ; 1 bytes @ 0xE
  2016                           
  2017  007E                     ??_setSecondsISR:	
  2018                           ; 1 bytes @ 0xE
  2019                           
  2020  007E                     ??_setMinutesISR:	
  2021                           ; 1 bytes @ 0xE
  2022                           
  2023  007E                     ??_setHoursISR:	
  2024                           ; 1 bytes @ 0xE
  2025                           
  2026  007E                     ??_powerFailISR:	
  2027                           ; 1 bytes @ 0xE
  2028                           
  2029  007E                     ??_isolateDigits:	
  2030                           ; 1 bytes @ 0xE
  2031                           
  2032  007E                     ??_wakeup:	
  2033                           ; 1 bytes @ 0xE
  2034                           
  2035  007E                     ??_round:	
  2036                           ; 1 bytes @ 0xE
  2037                           
  2038  007E                     ??_TMR1_ISR:	
  2039                           ; 1 bytes @ 0xE
  2040                           
  2041  007E                     ??___ftneg:	
  2042                           ; 1 bytes @ 0xE
  2043                           
  2044                           
  2045                           	psect	cstackBANK0
  2046  0020                     __pcstackBANK0:	
  2047                           ; 1 bytes @ 0xE
  2048                           
  2049  0020                     ??___ltdiv:	
  2050  0020                     ?___altoft:	
  2051                           ; 1 bytes @ 0x0
  2052                           
  2053  0020                     ?___ftmul:	
  2054                           ; 3 bytes @ 0x0
  2055                           
  2056  0020                     ?___aldiv:	
  2057                           ; 3 bytes @ 0x0
  2058                           
  2059  0020                     ___ftmul@f1:	
  2060                           ; 4 bytes @ 0x0
  2061                           
  2062  0020                     ___aldiv@divisor:	
  2063                           ; 3 bytes @ 0x0
  2064                           
  2065  0020                     ___altoft@c:	
  2066                           ; 4 bytes @ 0x0
  2067                           
  2068                           
  2069                           ; 4 bytes @ 0x0
  2070  0020                     	ds	1
  2071  0021                     ___ltdiv@quotient:	
  2072                           
  2073                           ; 3 bytes @ 0x1
  2074  0021                     	ds	2
  2075  0023                     ___ftmul@f2:	
  2076                           
  2077                           ; 3 bytes @ 0x3
  2078  0023                     	ds	1
  2079  0024                     ??___altoft:	
  2080  0024                     ___ltdiv@counter:	
  2081                           ; 1 bytes @ 0x4
  2082                           
  2083  0024                     ___aldiv@dividend:	
  2084                           ; 1 bytes @ 0x4
  2085                           
  2086                           
  2087                           ; 4 bytes @ 0x4
  2088  0024                     	ds	2
  2089  0026                     ??___ftmul:	
  2090  0026                     ___altoft@exp:	
  2091                           ; 1 bytes @ 0x6
  2092                           
  2093                           
  2094                           ; 1 bytes @ 0x6
  2095  0026                     	ds	1
  2096  0027                     ___altoft@sign:	
  2097                           
  2098                           ; 1 bytes @ 0x7
  2099  0027                     	ds	1
  2100  0028                     ?_trunc:	
  2101  0028                     ___aldiv@counter:	
  2102                           ; 3 bytes @ 0x8
  2103                           
  2104  0028                     trunc@x:	
  2105                           ; 1 bytes @ 0x8
  2106                           
  2107                           
  2108                           ; 3 bytes @ 0x8
  2109  0028                     	ds	1
  2110  0029                     ___aldiv@sign:	
  2111                           
  2112                           ; 1 bytes @ 0x9
  2113  0029                     	ds	1
  2114  002A                     ___ftmul@exp:	
  2115  002A                     ___aldiv@quotient:	
  2116                           ; 1 bytes @ 0xA
  2117                           
  2118                           
  2119                           ; 4 bytes @ 0xA
  2120  002A                     	ds	1
  2121  002B                     ??_trunc:	
  2122  002B                     ___ftmul@f3_as_product:	
  2123                           ; 1 bytes @ 0xB
  2124                           
  2125                           
  2126                           ; 3 bytes @ 0xB
  2127  002B                     	ds	1
  2128  002C                     trunc@i:	
  2129                           
  2130                           ; 3 bytes @ 0xC
  2131  002C                     	ds	2
  2132  002E                     ___ftmul@cntr:	
  2133                           
  2134                           ; 1 bytes @ 0xE
  2135  002E                     	ds	1
  2136  002F                     ___ftmul@sign:	
  2137  002F                     trunc@expon:	
  2138                           ; 1 bytes @ 0xF
  2139                           
  2140                           
  2141                           ; 2 bytes @ 0xF
  2142  002F                     	ds	2
  2143  0031                     ?___ftneg:	
  2144  0031                     ___ftneg@f1:	
  2145                           ; 3 bytes @ 0x11
  2146                           
  2147                           
  2148                           ; 3 bytes @ 0x11
  2149  0031                     	ds	3
  2150  0034                     ?___ftadd:	
  2151  0034                     ___ftadd@f1:	
  2152                           ; 3 bytes @ 0x14
  2153                           
  2154                           
  2155                           ; 3 bytes @ 0x14
  2156  0034                     	ds	3
  2157  0037                     ___ftadd@f2:	
  2158                           
  2159                           ; 3 bytes @ 0x17
  2160  0037                     	ds	3
  2161  003A                     ??___ftadd:	
  2162                           
  2163                           ; 1 bytes @ 0x1A
  2164  003A                     	ds	4
  2165  003E                     ___ftadd@sign:	
  2166                           
  2167                           ; 1 bytes @ 0x1E
  2168  003E                     	ds	1
  2169  003F                     ___ftadd@exp2:	
  2170                           
  2171                           ; 1 bytes @ 0x1F
  2172  003F                     	ds	1
  2173  0040                     ___ftadd@exp1:	
  2174                           
  2175                           ; 1 bytes @ 0x20
  2176  0040                     	ds	1
  2177  0041                     ?_round:	
  2178  0041                     round@x:	
  2179                           ; 3 bytes @ 0x21
  2180                           
  2181                           
  2182                           ; 3 bytes @ 0x21
  2183  0041                     	ds	3
  2184  0044                     round@f:	
  2185                           
  2186                           ; 3 bytes @ 0x24
  2187  0044                     	ds	3
  2188  0047                     ??_restoreTime:	
  2189                           
  2190                           ; 1 bytes @ 0x27
  2191  0047                     	ds	3
  2192  004A                     restoreTime@sleepy_seconds_adjusted:	
  2193                           
  2194                           ; 3 bytes @ 0x2A
  2195  004A                     	ds	3
  2196  004D                     restoreTime@sleepy_seconds_rounded:	
  2197                           
  2198                           ; 3 bytes @ 0x2D
  2199  004D                     	ds	3
  2200  0050                     restoreTime@calc_seconds:	
  2201                           
  2202                           ; 2 bytes @ 0x30
  2203  0050                     	ds	2
  2204  0052                     restoreTime@calc_minutes:	
  2205                           
  2206                           ; 2 bytes @ 0x32
  2207  0052                     	ds	2
  2208  0054                     restoreTime@calc_hours:	
  2209                           
  2210                           ; 2 bytes @ 0x34
  2211  0054                     	ds	2
  2212  0056                     ??_INTERRUPT_InterruptManager:	
  2213                           
  2214                           ; 1 bytes @ 0x36
  2215  0056                     	ds	1
  2216                           
  2217                           	psect	maintext
  2218  077F                     __pmaintext:	
  2219 ;;
  2220 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  2221 ;;
  2222 ;; *************** function _main *****************
  2223 ;; Defined at:
  2224 ;;		line 88 in file "main.c"
  2225 ;; Parameters:    Size  Location     Type
  2226 ;;		None
  2227 ;; Auto vars:     Size  Location     Type
  2228 ;;		None
  2229 ;; Return value:  Size  Location     Type
  2230 ;;                  1    wreg      void 
  2231 ;; Registers used:
  2232 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2233 ;; Tracked objects:
  2234 ;;		On entry : B1F/0
  2235 ;;		On exit  : 0/0
  2236 ;;		Unchanged: 0/0
  2237 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2238 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2239 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2240 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  2241 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  2242 ;;Total ram usage:        2 bytes
  2243 ;; Hardware stack levels required when called:   14
  2244 ;; This function calls:
  2245 ;;		_TMR1_StartTimer
  2246 ;;		_startup
  2247 ;; This function is called by:
  2248 ;;		Startup code after reset
  2249 ;; This function uses a non-reentrant model
  2250 ;;
  2251                           
  2252                           
  2253                           ;psect for function _main
  2254  077F                     _main:	
  2255                           
  2256                           ;main.c: 92: if (asleep_flag == 0) {
  2257                           
  2258                           ;incstack = 0
  2259                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2260  077F  0020               	movlb	0	; select bank0
  2261  0780  186E               	btfsc	_asleep_flag/(0+8),_asleep_flag& (0+7)	;volatile
  2262  0781  2F85               	goto	l3790
  2263                           
  2264                           ;main.c: 94: startup();
  2265  0782  3184  24BE  3187   	fcall	_startup
  2266  0785                     l3790:	
  2267                           ;main.c: 96: }
  2268                           ;main.c: 98: while(1) {
  2269                           
  2270                           
  2271                           ;main.c: 100: if (asleep_flag == 0) {
  2272  0785  0020               	movlb	0	; select bank0
  2273  0786  186E               	btfsc	_asleep_flag/(0+8),_asleep_flag& (0+7)	;volatile
  2274  0787  2FCF               	goto	l432
  2275                           
  2276                           ;main.c: 103: if(PORTAbits.RA5 && PORTAbits.RA0 && PORTAbits.RA2 && PORTCbits.RC7 && !PO
      +                          RTCbits.RC5) {
  2277  0788  1A8C               	btfsc	12,5	;volatile
  2278  0789  1C0C               	btfss	12,0	;volatile
  2279  078A  2F93               	goto	l3804
  2280  078B  190C               	btfsc	12,2	;volatile
  2281  078C  1F8E               	btfss	14,7	;volatile
  2282  078D  2F93               	goto	l3804
  2283  078E  1A8E               	btfsc	14,5	;volatile
  2284  078F  2F93               	goto	l3804
  2285                           
  2286                           ;main.c: 106: LATEbits.LATE2 = 0;
  2287  0790  0022               	movlb	2	; select bank2
  2288  0791  1110               	bcf	16,2	;volatile
  2289                           
  2290                           ;main.c: 108: }
  2291  0792  2FA6               	goto	l3806
  2292  0793                     l3804:	
  2293                           
  2294                           ;main.c: 110: else {
  2295                           ;main.c: 112: LATEbits.LATE2 = 1 & !(asleep_flag);
  2296  0793  1003               	clrc
  2297  0794  0020               	movlb	0	; select bank0
  2298  0795  1C6E               	btfss	_asleep_flag/(0+8),_asleep_flag& (0+7)	;volatile
  2299  0796  1403               	setc
  2300  0797  3000               	movlw	0
  2301  0798  3D09               	addwfc	9,w
  2302  0799  3901               	andlw	1
  2303  079A  0021               	movlb	1	; select bank1
  2304  079B  00D3               	movwf	??_main^(0+128)
  2305  079C  0DD3               	rlf	??_main^(0+128),f
  2306  079D  0DD3               	rlf	??_main^(0+128),f
  2307  079E  0022               	movlb	2	; select bank2
  2308  079F  0810               	movf	16,w	;volatile
  2309  07A0  0021               	movlb	1	; select bank1
  2310  07A1  0653               	xorwf	??_main^(0+128),w
  2311  07A2  39FB               	andlw	-5
  2312  07A3  0653               	xorwf	??_main^(0+128),w
  2313  07A4  0022               	movlb	2	; select bank2
  2314  07A5  0090               	movwf	16	;volatile
  2315  07A6                     l3806:	
  2316                           
  2317                           ;main.c: 114: }
  2318                           ;main.c: 119: if (PIE1bits.TMR1IE == 0) {
  2319  07A6  0021               	movlb	1	; select bank1
  2320  07A7  1811               	btfsc	17,0	;volatile
  2321  07A8  2FBD               	goto	l3816
  2322                           
  2323                           ;main.c: 125: _delay((unsigned long)((3000)*(20000000/4000.0)));
  2324  07A9  304D               	movlw	77
  2325  07AA  0021               	movlb	1	; select bank1
  2326  07AB  00D4               	movwf	(??_main^(0+128)+1)
  2327  07AC  3019               	movlw	25
  2328  07AD  00D3               	movwf	??_main^(0+128)
  2329  07AE  304F               	movlw	79
  2330  07AF                     u3827:	
  2331  07AF  0B89               	decfsz	9,f
  2332  07B0  2FAF               	goto	u3827
  2333  07B1  0BD3               	decfsz	??_main^(0+128),f
  2334  07B2  2FAF               	goto	u3827
  2335  07B3  0BD4               	decfsz	(??_main^(0+128)+1),f
  2336  07B4  2FAF               	goto	u3827
  2337  07B5  3200               	nop2
  2338                           
  2339                           ;main.c: 128: if (PIE1bits.TMR1IE == 0) {
  2340  07B6  0021               	movlb	1	; select bank1
  2341  07B7  1811               	btfsc	17,0	;volatile
  2342  07B8  2FBD               	goto	l3816
  2343                           
  2344                           ;main.c: 131: PIE1bits.TMR1IE = 1;
  2345  07B9  1411               	bsf	17,0	;volatile
  2346                           
  2347                           ;main.c: 132: TMR1_StartTimer();
  2348  07BA  318A  22AE  3187   	fcall	_TMR1_StartTimer
  2349  07BD                     l3816:	
  2350                           
  2351                           ;main.c: 134: }
  2352                           ;main.c: 136: }
  2353                           ;main.c: 139: if (PORTCbits.RC5 == 1) {
  2354  07BD  0020               	movlb	0	; select bank0
  2355  07BE  1E8E               	btfss	14,5	;volatile
  2356  07BF  2FC4               	goto	l430
  2357                           
  2358                           ;main.c: 141: LATAbits.LATA3 = 0;
  2359  07C0  0022               	movlb	2	; select bank2
  2360  07C1  118C               	bcf	12,3	;volatile
  2361                           
  2362                           ;main.c: 142: LATEbits.LATE2 = 1;
  2363  07C2  1510               	bsf	16,2	;volatile
  2364                           
  2365                           ;main.c: 143: LATEbits.LATE0 = 0;
  2366  07C3  1010               	bcf	16,0	;volatile
  2367  07C4                     l430:	
  2368                           
  2369                           ;main.c: 145: }
  2370                           ;main.c: 147: LATEbits.LATE0 = LATAbits.LATA3;
  2371  07C4  0022               	movlb	2	; select bank2
  2372  07C5  1D8C               	btfss	12,3	;volatile
  2373  07C6  2FCA               	goto	u3790
  2374  07C7  0022               	movlb	2	; select bank2
  2375  07C8  1410               	bsf	16,0	;volatile
  2376  07C9  2F85               	goto	l3790
  2377  07CA                     u3790:	
  2378  07CA  0022               	movlb	2	; select bank2
  2379  07CB  1010               	bcf	16,0	;volatile
  2380                           
  2381                           ;main.c: 149: }
  2382  07CC  2F85               	goto	l3790
  2383  07CD                     l433:	
  2384                           ;main.c: 151: else {
  2385                           ;main.c: 153: while (asleep_flag == 1) {
  2386                           
  2387  07CD  0063               	sleep	;# 
  2388                           
  2389                           ;main.c: 156: __nop();
  2390  07CE  0000               	nop
  2391  07CF                     l432:	
  2392  07CF  0020               	movlb	0	; select bank0
  2393  07D0  1C6E               	btfss	_asleep_flag/(0+8),_asleep_flag& (0+7)	;volatile
  2394  07D1  2F85               	goto	l3790
  2395  07D2  2FCD               	goto	l433
  2396  07D3                     __end_of_main:	
  2397                           
  2398                           	psect	text1
  2399  04BE                     __ptext1:	
  2400 ;; *************** function _startup *****************
  2401 ;; Defined at:
  2402 ;;		line 26 in file "clock_functions.c"
  2403 ;; Parameters:    Size  Location     Type
  2404 ;;		None
  2405 ;; Auto vars:     Size  Location     Type
  2406 ;;		None
  2407 ;; Return value:  Size  Location     Type
  2408 ;;                  1    wreg      void 
  2409 ;; Registers used:
  2410 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2411 ;; Tracked objects:
  2412 ;;		On entry : 0/0
  2413 ;;		On exit  : 0/0
  2414 ;;		Unchanged: 0/0
  2415 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2416 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2417 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2418 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2419 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2420 ;;Total ram usage:        0 bytes
  2421 ;; Hardware stack levels used:    1
  2422 ;; Hardware stack levels required when called:   13
  2423 ;; This function calls:
  2424 ;;		_IOCBF0_SetInterruptHandler
  2425 ;;		_IOCBF1_SetInterruptHandler
  2426 ;;		_IOCBF2_SetInterruptHandler
  2427 ;;		_IOCBF3_SetInterruptHandler
  2428 ;;		_IOCBF4_SetInterruptHandler
  2429 ;;		_SYSTEM_Initialize
  2430 ;;		_TMR0_SetInterruptHandler
  2431 ;;		_TMR1_SetInterruptHandler
  2432 ;;		_TMR2_SetInterruptHandler
  2433 ;;		_TMR2_StopTimer
  2434 ;;		_checkIDs
  2435 ;; This function is called by:
  2436 ;;		_main
  2437 ;; This function uses a non-reentrant model
  2438 ;;
  2439                           
  2440                           
  2441                           ;psect for function _startup
  2442  04BE                     _startup:	
  2443                           
  2444                           ;clock_functions.c: 32: (INTCONbits.GIE = 1);
  2445                           
  2446                           ;incstack = 0
  2447                           ; Regs used in _startup: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2448  04BE  178B               	bsf	11,7	;volatile
  2449                           
  2450                           ;clock_functions.c: 35: (INTCONbits.PEIE = 1);
  2451  04BF  170B               	bsf	11,6	;volatile
  2452                           
  2453                           ;clock_functions.c: 38: SYSTEM_Initialize();
  2454  04C0  318B  23D5  3184   	fcall	_SYSTEM_Initialize
  2455                           
  2456                           ;clock_functions.c: 40: TRISEbits.TRISE2 = 0;
  2457  04C3  0021               	movlb	1	; select bank1
  2458  04C4  1110               	bcf	16,2	;volatile
  2459                           
  2460                           ;clock_functions.c: 41: TRISEbits.TRISE1 = 0;
  2461  04C5  1090               	bcf	16,1	;volatile
  2462                           
  2463                           ;clock_functions.c: 42: TRISEbits.TRISE0 = 0;
  2464  04C6  1010               	bcf	16,0	;volatile
  2465                           
  2466                           ;clock_functions.c: 43: LATEbits.LATE2 = 1;
  2467  04C7  0022               	movlb	2	; select bank2
  2468  04C8  1510               	bsf	16,2	;volatile
  2469                           
  2470                           ;clock_functions.c: 47: checkIDs();
  2471  04C9  3182  22F5  3184   	fcall	_checkIDs
  2472                           
  2473                           ;clock_functions.c: 51: TMR0_SetInterruptHandler(muxISR);
  2474  04CC  305F               	movlw	low _muxISR
  2475  04CD  0021               	movlb	1	; select bank1
  2476  04CE  00C7               	movwf	TMR0_SetInterruptHandler@InterruptHandler^(0+128)
  2477  04CF  300D               	movlw	high _muxISR
  2478  04D0  00C8               	movwf	(TMR0_SetInterruptHandler@InterruptHandler+1)^(0+128)
  2479  04D1  318B  230D  3184   	fcall	_TMR0_SetInterruptHandler
  2480                           
  2481                           ;clock_functions.c: 54: TMR1_SetInterruptHandler(tickISR);
  2482  04D4  30D3               	movlw	low _tickISR
  2483  04D5  0021               	movlb	1	; select bank1
  2484  04D6  00C7               	movwf	TMR1_SetInterruptHandler@InterruptHandler^(0+128)
  2485  04D7  3007               	movlw	high _tickISR
  2486  04D8  00C8               	movwf	(TMR1_SetInterruptHandler@InterruptHandler+1)^(0+128)
  2487  04D9  318B  2313  3184   	fcall	_TMR1_SetInterruptHandler
  2488                           
  2489                           ;clock_functions.c: 57: TMR2_SetInterruptHandler(blankISR);
  2490  04DC  309A               	movlw	low _blankISR
  2491  04DD  0021               	movlb	1	; select bank1
  2492  04DE  00C7               	movwf	TMR2_SetInterruptHandler@InterruptHandler^(0+128)
  2493  04DF  300B               	movlw	high _blankISR
  2494  04E0  00C8               	movwf	(TMR2_SetInterruptHandler@InterruptHandler+1)^(0+128)
  2495  04E1  318B  2319  3184   	fcall	_TMR2_SetInterruptHandler
  2496                           
  2497                           ;clock_functions.c: 61: IOCBF0_SetInterruptHandler(setSecondsISR);
  2498  04E4  308C               	movlw	low _setSecondsISR
  2499  04E5  0021               	movlb	1	; select bank1
  2500  04E6  00C7               	movwf	IOCBF0_SetInterruptHandler@InterruptHandler^(0+128)
  2501  04E7  300C               	movlw	high _setSecondsISR
  2502  04E8  00C8               	movwf	(IOCBF0_SetInterruptHandler@InterruptHandler+1)^(0+128)
  2503  04E9  318A  22EF  3184   	fcall	_IOCBF0_SetInterruptHandler
  2504                           
  2505                           ;clock_functions.c: 64: IOCBF1_SetInterruptHandler(setMinutesISR);
  2506  04EC  30AD               	movlw	low _setMinutesISR
  2507  04ED  0021               	movlb	1	; select bank1
  2508  04EE  00C7               	movwf	IOCBF1_SetInterruptHandler@InterruptHandler^(0+128)
  2509  04EF  300C               	movlw	high _setMinutesISR
  2510  04F0  00C8               	movwf	(IOCBF1_SetInterruptHandler@InterruptHandler+1)^(0+128)
  2511  04F1  318A  22F5  3184   	fcall	_IOCBF1_SetInterruptHandler
  2512                           
  2513                           ;clock_functions.c: 67: IOCBF2_SetInterruptHandler(setHoursISR);
  2514  04F4  30F2               	movlw	low _setHoursISR
  2515  04F5  0021               	movlb	1	; select bank1
  2516  04F6  00C7               	movwf	IOCBF2_SetInterruptHandler@InterruptHandler^(0+128)
  2517  04F7  300C               	movlw	high _setHoursISR
  2518  04F8  00C8               	movwf	(IOCBF2_SetInterruptHandler@InterruptHandler+1)^(0+128)
  2519  04F9  318A  22FB  3184   	fcall	_IOCBF2_SetInterruptHandler
  2520                           
  2521                           ;clock_functions.c: 70: IOCBF3_SetInterruptHandler(displayToggleISR);
  2522  04FC  3084               	movlw	low _displayToggleISR
  2523  04FD  0021               	movlb	1	; select bank1
  2524  04FE  00C7               	movwf	IOCBF3_SetInterruptHandler@InterruptHandler^(0+128)
  2525  04FF  300D               	movlw	high _displayToggleISR
  2526  0500  00C8               	movwf	(IOCBF3_SetInterruptHandler@InterruptHandler+1)^(0+128)
  2527  0501  318B  2301  3184   	fcall	_IOCBF3_SetInterruptHandler
  2528                           
  2529                           ;clock_functions.c: 73: IOCBF4_SetInterruptHandler(powerFailISR);
  2530  0504  302E               	movlw	low _powerFailISR
  2531  0505  0021               	movlb	1	; select bank1
  2532  0506  00C7               	movwf	IOCBF4_SetInterruptHandler@InterruptHandler^(0+128)
  2533  0507  300B               	movlw	high _powerFailISR
  2534  0508  00C8               	movwf	(IOCBF4_SetInterruptHandler@InterruptHandler+1)^(0+128)
  2535  0509  318B  2337  3184   	fcall	_IOCBF4_SetInterruptHandler
  2536                           
  2537                           ;clock_functions.c: 77: TRISDbits.TRISD4 = 0;
  2538  050C  0021               	movlb	1	; select bank1
  2539  050D  120F               	bcf	15,4	;volatile
  2540                           
  2541                           ;clock_functions.c: 78: TRISDbits.TRISD5 = 0;
  2542  050E  128F               	bcf	15,5	;volatile
  2543                           
  2544                           ;clock_functions.c: 79: TRISDbits.TRISD6 = 0;
  2545  050F  130F               	bcf	15,6	;volatile
  2546                           
  2547                           ;clock_functions.c: 81: TRISDbits.TRISD0 = 0;
  2548  0510  100F               	bcf	15,0	;volatile
  2549                           
  2550                           ;clock_functions.c: 82: TRISDbits.TRISD1 = 0;
  2551  0511  108F               	bcf	15,1	;volatile
  2552                           
  2553                           ;clock_functions.c: 83: TRISDbits.TRISD2 = 0;
  2554  0512  110F               	bcf	15,2	;volatile
  2555                           
  2556                           ;clock_functions.c: 84: TRISDbits.TRISD3 = 0;
  2557  0513  118F               	bcf	15,3	;volatile
  2558                           
  2559                           ;clock_functions.c: 86: TRISDbits.TRISD7 = 0;
  2560  0514  138F               	bcf	15,7	;volatile
  2561                           
  2562                           ;clock_functions.c: 89: TRISCbits.TRISC3 = 0;
  2563  0515  118E               	bcf	14,3	;volatile
  2564                           
  2565                           ;clock_functions.c: 90: TRISCbits.TRISC4 = 0;
  2566  0516  120E               	bcf	14,4	;volatile
  2567                           
  2568                           ;clock_functions.c: 93: LATCbits.LATC3 = 0;
  2569  0517  0022               	movlb	2	; select bank2
  2570  0518  118E               	bcf	14,3	;volatile
  2571                           
  2572                           ;clock_functions.c: 94: LATCbits.LATC4 = 0;
  2573  0519  120E               	bcf	14,4	;volatile
  2574                           
  2575                           ;clock_functions.c: 97: TRISBbits.TRISB0 = 1;
  2576  051A  0021               	movlb	1	; select bank1
  2577  051B  140D               	bsf	13,0	;volatile
  2578                           
  2579                           ;clock_functions.c: 98: TRISBbits.TRISB1 = 1;
  2580  051C  148D               	bsf	13,1	;volatile
  2581                           
  2582                           ;clock_functions.c: 99: TRISBbits.TRISB2 = 1;
  2583  051D  150D               	bsf	13,2	;volatile
  2584                           
  2585                           ;clock_functions.c: 102: TRISBbits.TRISB4 = 1;
  2586  051E  160D               	bsf	13,4	;volatile
  2587                           
  2588                           ;clock_functions.c: 105: TRISCbits.TRISC5 = 1;
  2589  051F  168E               	bsf	14,5	;volatile
  2590                           
  2591                           ;clock_functions.c: 108: TRISAbits.TRISA0 = 1;
  2592  0520  140C               	bsf	12,0	;volatile
  2593                           
  2594                           ;clock_functions.c: 109: TRISAbits.TRISA5 = 1;
  2595  0521  168C               	bsf	12,5	;volatile
  2596                           
  2597                           ;clock_functions.c: 110: TRISAbits.TRISA2 = 1;
  2598  0522  150C               	bsf	12,2	;volatile
  2599                           
  2600                           ;clock_functions.c: 113: IOCBNbits.IOCBN5 = 0;
  2601  0523  0027               	movlb	7	; select bank7
  2602  0524  1295               	bcf	21,5	;volatile
  2603                           
  2604                           ;clock_functions.c: 114: IOCBPbits.IOCBP5 = 0;
  2605  0525  1294               	bcf	20,5	;volatile
  2606                           
  2607                           ;clock_functions.c: 117: TRISBbits.TRISB6 = 0;
  2608  0526  0021               	movlb	1	; select bank1
  2609  0527  130D               	bcf	13,6	;volatile
  2610                           
  2611                           ;clock_functions.c: 118: TRISBbits.TRISB7 = 0;
  2612  0528  138D               	bcf	13,7	;volatile
  2613                           
  2614                           ;clock_functions.c: 119: TRISAbits.TRISA1 = 0;
  2615  0529  108C               	bcf	12,1	;volatile
  2616                           
  2617                           ;clock_functions.c: 120: TRISCbits.TRISC1 = 0;
  2618  052A  108E               	bcf	14,1	;volatile
  2619                           
  2620                           ;clock_functions.c: 123: TRISEbits.TRISE0 = 0;
  2621  052B  1010               	bcf	16,0	;volatile
  2622                           
  2623                           ;clock_functions.c: 126: TRISCbits.TRISC6 = 1;
  2624  052C  170E               	bsf	14,6	;volatile
  2625                           
  2626                           ;clock_functions.c: 129: nT1SYNC = 0;
  2627  052D  0020               	movlb	0	; select bank0
  2628  052E  1118               	bcf	24,2	;volatile
  2629                           
  2630                           ;clock_functions.c: 132: TRISCbits.TRISC2 = 0;
  2631  052F  0021               	movlb	1	; select bank1
  2632  0530  110E               	bcf	14,2	;volatile
  2633                           
  2634                           ;clock_functions.c: 133: LATCbits.LATC2 = 0;
  2635  0531  0022               	movlb	2	; select bank2
  2636  0532  110E               	bcf	14,2	;volatile
  2637                           
  2638                           ;clock_functions.c: 136: TRISBbits.TRISB3 = 1;
  2639  0533  0021               	movlb	1	; select bank1
  2640  0534  158D               	bsf	13,3	;volatile
  2641                           
  2642                           ;clock_functions.c: 139: TRISAbits.TRISA3 = 0;
  2643  0535  118C               	bcf	12,3	;volatile
  2644                           
  2645                           ;clock_functions.c: 142: LATAbits.LATA3 = 0;
  2646  0536  0022               	movlb	2	; select bank2
  2647  0537  118C               	bcf	12,3	;volatile
  2648                           
  2649                           ;clock_functions.c: 145: INTCONbits.TMR0IE = 0;
  2650  0538  128B               	bcf	11,5	;volatile
  2651                           
  2652                           ;clock_functions.c: 146: PIE1bits.TMR2IE = 0;
  2653  0539  0021               	movlb	1	; select bank1
  2654  053A  1091               	bcf	17,1	;volatile
  2655                           
  2656                           ;clock_functions.c: 149: TMR2_StopTimer();
  2657  053B  318A  22B4         	fcall	_TMR2_StopTimer
  2658                           
  2659                           ;clock_functions.c: 152: TMR2 = 0;
  2660  053D  0020               	movlb	0	; select bank0
  2661  053E  019A               	clrf	26	;volatile
  2662                           
  2663                           ;clock_functions.c: 155: LATEbits.LATE2 = 0;
  2664  053F  0022               	movlb	2	; select bank2
  2665  0540  1110               	bcf	16,2	;volatile
  2666                           
  2667                           ;clock_functions.c: 156: LATEbits.LATE0 = 0;
  2668  0541  1010               	bcf	16,0	;volatile
  2669  0542  0008               	return
  2670  0543                     __end_of_startup:	
  2671                           
  2672                           	psect	text2
  2673  02F5                     __ptext2:	
  2674 ;; *************** function _checkIDs *****************
  2675 ;; Defined at:
  2676 ;;		line 24 in file "checkIDs.c"
  2677 ;; Parameters:    Size  Location     Type
  2678 ;;		None
  2679 ;; Auto vars:     Size  Location     Type
  2680 ;;  device_ID       2   10[BANK1 ] unsigned short 
  2681 ;;  user_ID_3       2    8[BANK1 ] unsigned short 
  2682 ;;  user_ID_2       2    6[BANK1 ] unsigned short 
  2683 ;;  user_ID_1       2    4[BANK1 ] unsigned short 
  2684 ;;  user_ID_0       2    2[BANK1 ] unsigned short 
  2685 ;; Return value:  Size  Location     Type
  2686 ;;                  1    wreg      void 
  2687 ;; Registers used:
  2688 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
  2689 ;; Tracked objects:
  2690 ;;		On entry : 0/0
  2691 ;;		On exit  : 0/0
  2692 ;;		Unchanged: 0/0
  2693 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2694 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2695 ;;      Locals:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0
  2696 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  2697 ;;      Totals:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0
  2698 ;;Total ram usage:       12 bytes
  2699 ;; Hardware stack levels used:    1
  2700 ;; Hardware stack levels required when called:   10
  2701 ;; This function calls:
  2702 ;;		Nothing
  2703 ;; This function is called by:
  2704 ;;		_startup
  2705 ;; This function uses a non-reentrant model
  2706 ;;
  2707                           
  2708                           
  2709                           ;psect for function _checkIDs
  2710  02F5                     _checkIDs:	
  2711                           
  2712                           ;checkIDs.c: 31: PMADRH = 0x80;
  2713                           
  2714                           ;incstack = 0
  2715                           ; Regs used in _checkIDs: [wreg-fsr0h+status,2+status,0+pclath]
  2716  02F5  3080               	movlw	128
  2717  02F6  0023               	movlb	3	; select bank3
  2718  02F7  0092               	movwf	18	;volatile
  2719                           
  2720                           ;checkIDs.c: 32: PMADRL = 0x00;
  2721  02F8  0191               	clrf	17	;volatile
  2722                           
  2723                           ;checkIDs.c: 33: CFGS = 1;
  2724  02F9  1715               	bsf	21,6	;volatile
  2725                           
  2726                           ;checkIDs.c: 34: RD = 1;
  2727  02FA  1415               	bsf	21,0	;volatile
  2728                           
  2729                           ;checkIDs.c: 35: __nop();
  2730  02FB  0000               	nop
  2731                           
  2732                           ;checkIDs.c: 36: __nop();
  2733  02FC  0000               	nop
  2734                           
  2735                           ;checkIDs.c: 37: unsigned short user_ID_0 = (PMDATH << 8) + PMDATL;
  2736  02FD  0023               	movlb	3	; select bank3
  2737  02FE  0814               	movf	20,w	;volatile
  2738  02FF  0021               	movlb	1	; select bank1
  2739  0300  00CA               	movwf	(checkIDs@user_ID_0+1)^(0+128)
  2740  0301  0023               	movlb	3	; select bank3
  2741  0302  0813               	movf	19,w	;volatile
  2742  0303  0021               	movlb	1	; select bank1
  2743  0304  00C9               	movwf	checkIDs@user_ID_0^(0+128)
  2744  0305                     l3500:	
  2745                           ;checkIDs.c: 38: while (user_ID_0 != expected_user_ID[3]);
  2746                           
  2747  0305  3006               	movlw	low ((_expected_user_ID+6)| (0+32768))
  2748  0306  0084               	movwf	4
  2749  0307  3090               	movlw	high ((_expected_user_ID+6)| (0+32768))
  2750  0308  0085               	movwf	5
  2751  0309  3F00               	moviw [0]fsr0
  2752  030A  00C7               	movwf	??_checkIDs^(0+128)
  2753  030B  3F01               	moviw [1]fsr0
  2754  030C  00C8               	movwf	(??_checkIDs^(0+128)+1)
  2755  030D  084A               	movf	(checkIDs@user_ID_0+1)^(0+128),w
  2756  030E  0648               	xorwf	(??_checkIDs+1)^(0+128),w
  2757  030F  1D03               	skipz
  2758  0310  2B13               	goto	u3335
  2759  0311  0849               	movf	checkIDs@user_ID_0^(0+128),w
  2760  0312  0647               	xorwf	??_checkIDs^(0+128),w
  2761  0313                     u3335:	
  2762  0313  1D03               	skipz
  2763  0314  2B05               	goto	l3500
  2764                           
  2765                           ;checkIDs.c: 40: PMADRH = 0x80;
  2766  0315  3080               	movlw	128
  2767  0316  0023               	movlb	3	; select bank3
  2768  0317  0092               	movwf	18	;volatile
  2769                           
  2770                           ;checkIDs.c: 41: PMADRL = 0x01;
  2771  0318  3001               	movlw	1
  2772  0319  0091               	movwf	17	;volatile
  2773                           
  2774                           ;checkIDs.c: 42: CFGS = 1;
  2775  031A  1715               	bsf	21,6	;volatile
  2776                           
  2777                           ;checkIDs.c: 43: RD = 1;
  2778  031B  1415               	bsf	21,0	;volatile
  2779                           
  2780                           ;checkIDs.c: 44: __nop();
  2781  031C  0000               	nop
  2782                           
  2783                           ;checkIDs.c: 45: __nop();
  2784  031D  0000               	nop
  2785                           
  2786                           ;checkIDs.c: 46: unsigned short user_ID_1 = (PMDATH << 8) + PMDATL;
  2787  031E  0023               	movlb	3	; select bank3
  2788  031F  0814               	movf	20,w	;volatile
  2789  0320  0021               	movlb	1	; select bank1
  2790  0321  00CC               	movwf	(checkIDs@user_ID_1+1)^(0+128)
  2791  0322  0023               	movlb	3	; select bank3
  2792  0323  0813               	movf	19,w	;volatile
  2793  0324  0021               	movlb	1	; select bank1
  2794  0325  00CB               	movwf	checkIDs@user_ID_1^(0+128)
  2795  0326                     l3512:	
  2796                           ;checkIDs.c: 47: while (user_ID_1 != expected_user_ID[2]);
  2797                           
  2798  0326  3004               	movlw	low ((_expected_user_ID+4)| (0+32768))
  2799  0327  0084               	movwf	4
  2800  0328  3090               	movlw	high ((_expected_user_ID+4)| (0+32768))
  2801  0329  0085               	movwf	5
  2802  032A  3F00               	moviw [0]fsr0
  2803  032B  00C7               	movwf	??_checkIDs^(0+128)
  2804  032C  3F01               	moviw [1]fsr0
  2805  032D  00C8               	movwf	(??_checkIDs^(0+128)+1)
  2806  032E  084C               	movf	(checkIDs@user_ID_1+1)^(0+128),w
  2807  032F  0648               	xorwf	(??_checkIDs+1)^(0+128),w
  2808  0330  1D03               	skipz
  2809  0331  2B34               	goto	u3345
  2810  0332  084B               	movf	checkIDs@user_ID_1^(0+128),w
  2811  0333  0647               	xorwf	??_checkIDs^(0+128),w
  2812  0334                     u3345:	
  2813  0334  1D03               	skipz
  2814  0335  2B26               	goto	l3512
  2815                           
  2816                           ;checkIDs.c: 49: PMADRH = 0x80;
  2817  0336  3080               	movlw	128
  2818  0337  0023               	movlb	3	; select bank3
  2819  0338  0092               	movwf	18	;volatile
  2820                           
  2821                           ;checkIDs.c: 50: PMADRL = 0x02;
  2822  0339  3002               	movlw	2
  2823  033A  0091               	movwf	17	;volatile
  2824                           
  2825                           ;checkIDs.c: 51: CFGS = 1;
  2826  033B  1715               	bsf	21,6	;volatile
  2827                           
  2828                           ;checkIDs.c: 52: RD = 1;
  2829  033C  1415               	bsf	21,0	;volatile
  2830                           
  2831                           ;checkIDs.c: 53: __nop();
  2832  033D  0000               	nop
  2833                           
  2834                           ;checkIDs.c: 54: __nop();
  2835  033E  0000               	nop
  2836                           
  2837                           ;checkIDs.c: 55: unsigned short user_ID_2 = (PMDATH << 8) + PMDATL;
  2838  033F  0023               	movlb	3	; select bank3
  2839  0340  0814               	movf	20,w	;volatile
  2840  0341  0021               	movlb	1	; select bank1
  2841  0342  00CE               	movwf	(checkIDs@user_ID_2+1)^(0+128)
  2842  0343  0023               	movlb	3	; select bank3
  2843  0344  0813               	movf	19,w	;volatile
  2844  0345  0021               	movlb	1	; select bank1
  2845  0346  00CD               	movwf	checkIDs@user_ID_2^(0+128)
  2846  0347                     l3524:	
  2847                           ;checkIDs.c: 56: while (user_ID_2 != expected_user_ID[1]);
  2848                           
  2849  0347  3002               	movlw	low ((_expected_user_ID+2)| (0+32768))
  2850  0348  0084               	movwf	4
  2851  0349  3090               	movlw	high ((_expected_user_ID+2)| (0+32768))
  2852  034A  0085               	movwf	5
  2853  034B  3F00               	moviw [0]fsr0
  2854  034C  00C7               	movwf	??_checkIDs^(0+128)
  2855  034D  3F01               	moviw [1]fsr0
  2856  034E  00C8               	movwf	(??_checkIDs^(0+128)+1)
  2857  034F  084E               	movf	(checkIDs@user_ID_2+1)^(0+128),w
  2858  0350  0648               	xorwf	(??_checkIDs+1)^(0+128),w
  2859  0351  1D03               	skipz
  2860  0352  2B55               	goto	u3355
  2861  0353  084D               	movf	checkIDs@user_ID_2^(0+128),w
  2862  0354  0647               	xorwf	??_checkIDs^(0+128),w
  2863  0355                     u3355:	
  2864  0355  1D03               	skipz
  2865  0356  2B47               	goto	l3524
  2866                           
  2867                           ;checkIDs.c: 58: PMADRH = 0x80;
  2868  0357  3080               	movlw	128
  2869  0358  0023               	movlb	3	; select bank3
  2870  0359  0092               	movwf	18	;volatile
  2871                           
  2872                           ;checkIDs.c: 59: PMADRL = 0x03;
  2873  035A  3003               	movlw	3
  2874  035B  0091               	movwf	17	;volatile
  2875                           
  2876                           ;checkIDs.c: 60: CFGS = 1;
  2877  035C  1715               	bsf	21,6	;volatile
  2878                           
  2879                           ;checkIDs.c: 61: RD = 1;
  2880  035D  1415               	bsf	21,0	;volatile
  2881                           
  2882                           ;checkIDs.c: 62: __nop();
  2883  035E  0000               	nop
  2884                           
  2885                           ;checkIDs.c: 63: __nop();
  2886  035F  0000               	nop
  2887                           
  2888                           ;checkIDs.c: 64: unsigned short user_ID_3 = (PMDATH << 8) + PMDATL;
  2889  0360  0023               	movlb	3	; select bank3
  2890  0361  0814               	movf	20,w	;volatile
  2891  0362  0021               	movlb	1	; select bank1
  2892  0363  00D0               	movwf	(checkIDs@user_ID_3+1)^(0+128)
  2893  0364  0023               	movlb	3	; select bank3
  2894  0365  0813               	movf	19,w	;volatile
  2895  0366  0021               	movlb	1	; select bank1
  2896  0367  00CF               	movwf	checkIDs@user_ID_3^(0+128)
  2897  0368                     l3536:	
  2898                           ;checkIDs.c: 65: while (user_ID_3 != expected_user_ID[0]);
  2899                           
  2900  0368  3000               	movlw	low (_expected_user_ID| (0+32768))
  2901  0369  0084               	movwf	4
  2902  036A  3090               	movlw	high (_expected_user_ID| (0+32768))
  2903  036B  0085               	movwf	5
  2904  036C  3F00               	moviw [0]fsr0
  2905  036D  00C7               	movwf	??_checkIDs^(0+128)
  2906  036E  3F01               	moviw [1]fsr0
  2907  036F  00C8               	movwf	(??_checkIDs^(0+128)+1)
  2908  0370  0850               	movf	(checkIDs@user_ID_3+1)^(0+128),w
  2909  0371  0648               	xorwf	(??_checkIDs+1)^(0+128),w
  2910  0372  1D03               	skipz
  2911  0373  2B76               	goto	u3365
  2912  0374  084F               	movf	checkIDs@user_ID_3^(0+128),w
  2913  0375  0647               	xorwf	??_checkIDs^(0+128),w
  2914  0376                     u3365:	
  2915  0376  1D03               	skipz
  2916  0377  2B68               	goto	l3536
  2917                           
  2918                           ;checkIDs.c: 69: PMADRH = 0x80;
  2919  0378  3080               	movlw	128
  2920  0379  0023               	movlb	3	; select bank3
  2921  037A  0092               	movwf	18	;volatile
  2922                           
  2923                           ;checkIDs.c: 70: PMADRL = 0x06;
  2924  037B  3006               	movlw	6
  2925  037C  0091               	movwf	17	;volatile
  2926                           
  2927                           ;checkIDs.c: 71: CFGS = 1;
  2928  037D  1715               	bsf	21,6	;volatile
  2929                           
  2930                           ;checkIDs.c: 72: RD = 1;
  2931  037E  1415               	bsf	21,0	;volatile
  2932                           
  2933                           ;checkIDs.c: 73: __nop();
  2934  037F  0000               	nop
  2935                           
  2936                           ;checkIDs.c: 74: __nop();
  2937  0380  0000               	nop
  2938                           
  2939                           ;checkIDs.c: 75: unsigned short device_ID = (PMDATH << 8) + PMDATL;
  2940  0381  0023               	movlb	3	; select bank3
  2941  0382  0814               	movf	20,w	;volatile
  2942  0383  0021               	movlb	1	; select bank1
  2943  0384  00D2               	movwf	(checkIDs@device_ID+1)^(0+128)
  2944  0385  0023               	movlb	3	; select bank3
  2945  0386  0813               	movf	19,w	;volatile
  2946  0387  0021               	movlb	1	; select bank1
  2947  0388  00D1               	movwf	checkIDs@device_ID^(0+128)
  2948                           
  2949                           ;checkIDs.c: 76: device_ID = (device_ID >> 5);
  2950  0389  0852               	movf	(checkIDs@device_ID+1)^(0+128),w
  2951  038A  00C8               	movwf	(??_checkIDs^(0+128)+1)
  2952  038B  0851               	movf	checkIDs@device_ID^(0+128),w
  2953  038C  00C7               	movwf	??_checkIDs^(0+128)
  2954  038D  3005               	movlw	5
  2955  038E                     u3375:	
  2956  038E  36C8               	lsrf	(??_checkIDs^(0+128)+1),f
  2957  038F  0CC7               	rrf	??_checkIDs^(0+128),f
  2958  0390  0B89               	decfsz	9,f
  2959  0391  2B8E               	goto	u3375
  2960  0392  0847               	movf	??_checkIDs^(0+128),w
  2961  0393  00D1               	movwf	checkIDs@device_ID^(0+128)
  2962  0394  0848               	movf	(??_checkIDs+1)^(0+128),w
  2963  0395  00D2               	movwf	(checkIDs@device_ID+1)^(0+128)
  2964  0396                     l3550:	
  2965                           ;checkIDs.c: 77: while (device_ID != expected_device_ID);
  2966                           
  2967  0396  300B               	movlw	low (_expected_device_ID| (0+32768))
  2968  0397  0084               	movwf	4
  2969  0398  3090               	movlw	high (_expected_device_ID| (0+32768))
  2970  0399  0085               	movwf	5
  2971  039A  3F00               	moviw [0]fsr0
  2972  039B  00C7               	movwf	??_checkIDs^(0+128)
  2973  039C  3F01               	moviw [1]fsr0
  2974  039D  00C8               	movwf	(??_checkIDs^(0+128)+1)
  2975  039E  0848               	movf	(??_checkIDs+1)^(0+128),w
  2976  039F  0652               	xorwf	(checkIDs@device_ID+1)^(0+128),w
  2977  03A0  1D03               	skipz
  2978  03A1  2BA4               	goto	u3385
  2979  03A2  0847               	movf	??_checkIDs^(0+128),w
  2980  03A3  0651               	xorwf	checkIDs@device_ID^(0+128),w
  2981  03A4                     u3385:	
  2982  03A4  1903               	btfsc	3,2
  2983  03A5  0008               	return
  2984  03A6  2B96               	goto	l3550
  2985  03A7                     __end_of_checkIDs:	
  2986                           
  2987                           	psect	text3
  2988  0AB4                     __ptext3:	
  2989 ;; *************** function _TMR2_StopTimer *****************
  2990 ;; Defined at:
  2991 ;;		line 98 in file "mcc_generated_files/tmr2.c"
  2992 ;; Parameters:    Size  Location     Type
  2993 ;;		None
  2994 ;; Auto vars:     Size  Location     Type
  2995 ;;		None
  2996 ;; Return value:  Size  Location     Type
  2997 ;;                  1    wreg      void 
  2998 ;; Registers used:
  2999 ;;		None
  3000 ;; Tracked objects:
  3001 ;;		On entry : 0/0
  3002 ;;		On exit  : 0/0
  3003 ;;		Unchanged: 0/0
  3004 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3005 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3006 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3007 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3008 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3009 ;;Total ram usage:        0 bytes
  3010 ;; Hardware stack levels used:    1
  3011 ;; Hardware stack levels required when called:   10
  3012 ;; This function calls:
  3013 ;;		Nothing
  3014 ;; This function is called by:
  3015 ;;		_startup
  3016 ;; This function uses a non-reentrant model
  3017 ;;
  3018                           
  3019                           
  3020                           ;psect for function _TMR2_StopTimer
  3021  0AB4                     _TMR2_StopTimer:	
  3022                           
  3023                           ;tmr2.c: 101: T2CONbits.TMR2ON = 0;
  3024                           
  3025                           ;incstack = 0
  3026                           ; Regs used in _TMR2_StopTimer: []
  3027  0AB4  0020               	movlb	0	; select bank0
  3028  0AB5  111C               	bcf	28,2	;volatile
  3029  0AB6  0008               	return
  3030  0AB7                     __end_of_TMR2_StopTimer:	
  3031                           
  3032                           	psect	text4
  3033  0BD5                     __ptext4:	
  3034 ;; *************** function _SYSTEM_Initialize *****************
  3035 ;; Defined at:
  3036 ;;		line 74 in file "mcc_generated_files/mcc.c"
  3037 ;; Parameters:    Size  Location     Type
  3038 ;;		None
  3039 ;; Auto vars:     Size  Location     Type
  3040 ;;		None
  3041 ;; Return value:  Size  Location     Type
  3042 ;;                  1    wreg      void 
  3043 ;; Registers used:
  3044 ;;		wreg, status,2, status,0, pclath, cstack
  3045 ;; Tracked objects:
  3046 ;;		On entry : 0/0
  3047 ;;		On exit  : 0/0
  3048 ;;		Unchanged: 0/0
  3049 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3050 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3051 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3052 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3053 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3054 ;;Total ram usage:        0 bytes
  3055 ;; Hardware stack levels used:    1
  3056 ;; Hardware stack levels required when called:   12
  3057 ;; This function calls:
  3058 ;;		_OSCILLATOR_Initialize
  3059 ;;		_PIN_MANAGER_Initialize
  3060 ;;		_TMR0_Initialize
  3061 ;;		_TMR1_Initialize
  3062 ;;		_TMR2_Initialize
  3063 ;;		_WDT_Initialize
  3064 ;; This function is called by:
  3065 ;;		_startup
  3066 ;; This function uses a non-reentrant model
  3067 ;;
  3068                           
  3069                           
  3070                           ;psect for function _SYSTEM_Initialize
  3071  0BD5                     _SYSTEM_Initialize:	
  3072                           
  3073                           ;mcc.c: 77: PIN_MANAGER_Initialize();
  3074                           
  3075                           ;incstack = 0
  3076                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  3077  0BD5  3186  26B6  318B   	fcall	_PIN_MANAGER_Initialize
  3078                           
  3079                           ;mcc.c: 78: OSCILLATOR_Initialize();
  3080  0BD8  318A  22B7  318B   	fcall	_OSCILLATOR_Initialize
  3081                           
  3082                           ;mcc.c: 79: WDT_Initialize();
  3083  0BDB  318A  22BB  318B   	fcall	_WDT_Initialize
  3084                           
  3085                           ;mcc.c: 80: TMR2_Initialize();
  3086  0BDE  318B  23E7  318B   	fcall	_TMR2_Initialize
  3087                           
  3088                           ;mcc.c: 81: TMR1_Initialize();
  3089  0BE1  318C  2451  318B   	fcall	_TMR1_Initialize
  3090                           
  3091                           ;mcc.c: 82: TMR0_Initialize();
  3092  0BE4  318C  2423         	fcall	_TMR0_Initialize
  3093  0BE6  0008               	return
  3094  0BE7                     __end_of_SYSTEM_Initialize:	
  3095                           
  3096                           	psect	text5
  3097  0ABB                     __ptext5:	
  3098 ;; *************** function _WDT_Initialize *****************
  3099 ;; Defined at:
  3100 ;;		line 91 in file "mcc_generated_files/mcc.c"
  3101 ;; Parameters:    Size  Location     Type
  3102 ;;		None
  3103 ;; Auto vars:     Size  Location     Type
  3104 ;;		None
  3105 ;; Return value:  Size  Location     Type
  3106 ;;                  1    wreg      void 
  3107 ;; Registers used:
  3108 ;;		wreg
  3109 ;; Tracked objects:
  3110 ;;		On entry : 0/0
  3111 ;;		On exit  : 0/0
  3112 ;;		Unchanged: 0/0
  3113 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3114 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3115 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3116 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3117 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3118 ;;Total ram usage:        0 bytes
  3119 ;; Hardware stack levels used:    1
  3120 ;; Hardware stack levels required when called:   10
  3121 ;; This function calls:
  3122 ;;		Nothing
  3123 ;; This function is called by:
  3124 ;;		_SYSTEM_Initialize
  3125 ;; This function uses a non-reentrant model
  3126 ;;
  3127                           
  3128                           
  3129                           ;psect for function _WDT_Initialize
  3130  0ABB                     _WDT_Initialize:	
  3131                           
  3132                           ;mcc.c: 94: WDTCON = 0x16;
  3133                           
  3134                           ;incstack = 0
  3135                           ; Regs used in _WDT_Initialize: [wreg]
  3136  0ABB  3016               	movlw	22
  3137  0ABC  0021               	movlb	1	; select bank1
  3138  0ABD  0097               	movwf	23	;volatile
  3139  0ABE  0008               	return
  3140  0ABF                     __end_of_WDT_Initialize:	
  3141                           
  3142                           	psect	text6
  3143  0BE7                     __ptext6:	
  3144 ;; *************** function _TMR2_Initialize *****************
  3145 ;; Defined at:
  3146 ;;		line 63 in file "mcc_generated_files/tmr2.c"
  3147 ;; Parameters:    Size  Location     Type
  3148 ;;		None
  3149 ;; Auto vars:     Size  Location     Type
  3150 ;;		None
  3151 ;; Return value:  Size  Location     Type
  3152 ;;                  1    wreg      void 
  3153 ;; Registers used:
  3154 ;;		wreg, status,2, status,0, pclath, cstack
  3155 ;; Tracked objects:
  3156 ;;		On entry : 0/0
  3157 ;;		On exit  : 0/0
  3158 ;;		Unchanged: 0/0
  3159 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3160 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3161 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3162 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3163 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3164 ;;Total ram usage:        0 bytes
  3165 ;; Hardware stack levels used:    1
  3166 ;; Hardware stack levels required when called:   11
  3167 ;; This function calls:
  3168 ;;		_TMR2_SetInterruptHandler
  3169 ;;		_TMR2_StartTimer
  3170 ;; This function is called by:
  3171 ;;		_SYSTEM_Initialize
  3172 ;; This function uses a non-reentrant model
  3173 ;;
  3174                           
  3175                           
  3176                           ;psect for function _TMR2_Initialize
  3177  0BE7                     _TMR2_Initialize:	
  3178                           
  3179                           ;tmr2.c: 68: T2CON = 0x13;
  3180                           
  3181                           ;incstack = 0
  3182                           ; Regs used in _TMR2_Initialize: [wreg+status,2+status,0+pclath+cstack]
  3183  0BE7  3013               	movlw	19
  3184  0BE8  0020               	movlb	0	; select bank0
  3185  0BE9  009C               	movwf	28	;volatile
  3186                           
  3187                           ;tmr2.c: 72: PR2 = 0x48;
  3188  0BEA  3048               	movlw	72
  3189  0BEB  009B               	movwf	27	;volatile
  3190                           
  3191                           ;tmr2.c: 77: TMR2 = 0x00;
  3192  0BEC  019A               	clrf	26	;volatile
  3193                           
  3194                           ;tmr2.c: 80: PIR1bits.TMR2IF = 0;
  3195  0BED  1091               	bcf	17,1	;volatile
  3196                           
  3197                           ;tmr2.c: 83: PIE1bits.TMR2IE = 1;
  3198  0BEE  0021               	movlb	1	; select bank1
  3199  0BEF  1491               	bsf	17,1	;volatile
  3200                           
  3201                           ;tmr2.c: 86: TMR2_SetInterruptHandler(TMR2_DefaultInterruptHandler);
  3202  0BF0  30FF               	movlw	low _TMR2_DefaultInterruptHandler
  3203  0BF1  00C7               	movwf	TMR2_SetInterruptHandler@InterruptHandler^(0+128)
  3204  0BF2  3007               	movlw	high _TMR2_DefaultInterruptHandler
  3205  0BF3  00C8               	movwf	(TMR2_SetInterruptHandler@InterruptHandler+1)^(0+128)
  3206  0BF4  318B  2319  318B   	fcall	_TMR2_SetInterruptHandler
  3207                           
  3208                           ;tmr2.c: 89: TMR2_StartTimer();
  3209  0BF7  318A  22B1         	fcall	_TMR2_StartTimer
  3210  0BF9  0008               	return
  3211  0BFA                     __end_of_TMR2_Initialize:	
  3212                           
  3213                           	psect	text7
  3214  0AB1                     __ptext7:	
  3215 ;; *************** function _TMR2_StartTimer *****************
  3216 ;; Defined at:
  3217 ;;		line 92 in file "mcc_generated_files/tmr2.c"
  3218 ;; Parameters:    Size  Location     Type
  3219 ;;		None
  3220 ;; Auto vars:     Size  Location     Type
  3221 ;;		None
  3222 ;; Return value:  Size  Location     Type
  3223 ;;                  1    wreg      void 
  3224 ;; Registers used:
  3225 ;;		None
  3226 ;; Tracked objects:
  3227 ;;		On entry : 0/0
  3228 ;;		On exit  : 0/0
  3229 ;;		Unchanged: 0/0
  3230 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3231 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3232 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3233 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3234 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3235 ;;Total ram usage:        0 bytes
  3236 ;; Hardware stack levels used:    1
  3237 ;; Hardware stack levels required when called:   10
  3238 ;; This function calls:
  3239 ;;		Nothing
  3240 ;; This function is called by:
  3241 ;;		_TMR2_Initialize
  3242 ;; This function uses a non-reentrant model
  3243 ;;
  3244                           
  3245                           
  3246                           ;psect for function _TMR2_StartTimer
  3247  0AB1                     _TMR2_StartTimer:	
  3248                           
  3249                           ;tmr2.c: 95: T2CONbits.TMR2ON = 1;
  3250                           
  3251                           ;incstack = 0
  3252                           ; Regs used in _TMR2_StartTimer: []
  3253  0AB1  0020               	movlb	0	; select bank0
  3254  0AB2  151C               	bsf	28,2	;volatile
  3255  0AB3  0008               	return
  3256  0AB4                     __end_of_TMR2_StartTimer:	
  3257                           
  3258                           	psect	text8
  3259  0B19                     __ptext8:	
  3260 ;; *************** function _TMR2_SetInterruptHandler *****************
  3261 ;; Defined at:
  3262 ;;		line 137 in file "mcc_generated_files/tmr2.c"
  3263 ;; Parameters:    Size  Location     Type
  3264 ;;  InterruptHan    2    0[BANK1 ] PTR void 
  3265 ;;		 -> blankISR(1), TMR2_DefaultInterruptHandler(1), 
  3266 ;; Auto vars:     Size  Location     Type
  3267 ;;		None
  3268 ;; Return value:  Size  Location     Type
  3269 ;;                  1    wreg      void 
  3270 ;; Registers used:
  3271 ;;		wreg
  3272 ;; Tracked objects:
  3273 ;;		On entry : 0/0
  3274 ;;		On exit  : 0/0
  3275 ;;		Unchanged: 0/0
  3276 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3277 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  3278 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3279 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3280 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  3281 ;;Total ram usage:        2 bytes
  3282 ;; Hardware stack levels used:    1
  3283 ;; Hardware stack levels required when called:   10
  3284 ;; This function calls:
  3285 ;;		Nothing
  3286 ;; This function is called by:
  3287 ;;		_TMR2_Initialize
  3288 ;;		_startup
  3289 ;; This function uses a non-reentrant model
  3290 ;;
  3291                           
  3292                           
  3293                           ;psect for function _TMR2_SetInterruptHandler
  3294  0B19                     _TMR2_SetInterruptHandler:	
  3295                           
  3296                           ;tmr2.c: 138: TMR2_InterruptHandler = InterruptHandler;
  3297                           
  3298                           ;incstack = 0
  3299                           ; Regs used in _TMR2_SetInterruptHandler: [wreg]
  3300  0B19  0021               	movlb	1	; select bank1
  3301  0B1A  0848               	movf	(TMR2_SetInterruptHandler@InterruptHandler+1)^(0+128),w
  3302  0B1B  00BF               	movwf	(_TMR2_InterruptHandler+1)^(0+128)
  3303  0B1C  0847               	movf	TMR2_SetInterruptHandler@InterruptHandler^(0+128),w
  3304  0B1D  00BE               	movwf	_TMR2_InterruptHandler^(0+128)
  3305  0B1E  0008               	return
  3306  0B1F                     __end_of_TMR2_SetInterruptHandler:	
  3307                           
  3308                           	psect	text9
  3309  0C51                     __ptext9:	
  3310 ;; *************** function _TMR1_Initialize *****************
  3311 ;; Defined at:
  3312 ;;		line 63 in file "mcc_generated_files/tmr1.c"
  3313 ;; Parameters:    Size  Location     Type
  3314 ;;		None
  3315 ;; Auto vars:     Size  Location     Type
  3316 ;;		None
  3317 ;; Return value:  Size  Location     Type
  3318 ;;                  1    wreg      void 
  3319 ;; Registers used:
  3320 ;;		wreg, status,2, status,0, pclath, cstack
  3321 ;; Tracked objects:
  3322 ;;		On entry : 0/0
  3323 ;;		On exit  : 0/0
  3324 ;;		Unchanged: 0/0
  3325 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3326 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3327 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3328 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3329 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3330 ;;Total ram usage:        0 bytes
  3331 ;; Hardware stack levels used:    1
  3332 ;; Hardware stack levels required when called:   11
  3333 ;; This function calls:
  3334 ;;		_TMR1_SetInterruptHandler
  3335 ;;		_TMR1_StartTimer
  3336 ;; This function is called by:
  3337 ;;		_SYSTEM_Initialize
  3338 ;; This function uses a non-reentrant model
  3339 ;;
  3340                           
  3341                           
  3342                           ;psect for function _TMR1_Initialize
  3343  0C51                     _TMR1_Initialize:	
  3344                           
  3345                           ;tmr1.c: 68: T1CON = 0x84;
  3346                           
  3347                           ;incstack = 0
  3348                           ; Regs used in _TMR1_Initialize: [wreg+status,2+status,0+pclath+cstack]
  3349  0C51  3084               	movlw	132
  3350  0C52  0020               	movlb	0	; select bank0
  3351  0C53  0098               	movwf	24	;volatile
  3352                           
  3353                           ;tmr1.c: 71: T1GCON = 0x00;
  3354  0C54  0199               	clrf	25	;volatile
  3355                           
  3356                           ;tmr1.c: 74: TMR1H = 0x80;
  3357  0C55  3080               	movlw	128
  3358  0C56  0097               	movwf	23	;volatile
  3359                           
  3360                           ;tmr1.c: 77: TMR1L = 0x00;
  3361  0C57  0196               	clrf	22	;volatile
  3362                           
  3363                           ;tmr1.c: 80: timer1ReloadVal=(TMR1H << 8) | TMR1L;
  3364  0C58  0817               	movf	23,w	;volatile
  3365  0C59  0021               	movlb	1	; select bank1
  3366  0C5A  00C3               	movwf	(_timer1ReloadVal+1)^(0+128)	;volatile
  3367  0C5B  0020               	movlb	0	; select bank0
  3368  0C5C  0816               	movf	22,w	;volatile
  3369  0C5D  0021               	movlb	1	; select bank1
  3370  0C5E  00C2               	movwf	_timer1ReloadVal^(0+128)	;volatile
  3371                           
  3372                           ;tmr1.c: 83: PIR1bits.TMR1IF = 0;
  3373  0C5F  0020               	movlb	0	; select bank0
  3374  0C60  1011               	bcf	17,0	;volatile
  3375                           
  3376                           ;tmr1.c: 86: PIE1bits.TMR1IE = 1;
  3377  0C61  0021               	movlb	1	; select bank1
  3378  0C62  1411               	bsf	17,0	;volatile
  3379                           
  3380                           ;tmr1.c: 89: TMR1_SetInterruptHandler(TMR1_DefaultInterruptHandler);
  3381  0C63  3003               	movlw	low _TMR1_DefaultInterruptHandler
  3382  0C64  00C7               	movwf	TMR1_SetInterruptHandler@InterruptHandler^(0+128)
  3383  0C65  3000               	movlw	high _TMR1_DefaultInterruptHandler
  3384  0C66  00C8               	movwf	(TMR1_SetInterruptHandler@InterruptHandler+1)^(0+128)
  3385  0C67  318B  2313  318C   	fcall	_TMR1_SetInterruptHandler
  3386                           
  3387                           ;tmr1.c: 92: TMR1_StartTimer();
  3388  0C6A  318A  22AE         	fcall	_TMR1_StartTimer
  3389  0C6C  0008               	return
  3390  0C6D                     __end_of_TMR1_Initialize:	
  3391                           
  3392                           	psect	text10
  3393  0AAE                     __ptext10:	
  3394 ;; *************** function _TMR1_StartTimer *****************
  3395 ;; Defined at:
  3396 ;;		line 95 in file "mcc_generated_files/tmr1.c"
  3397 ;; Parameters:    Size  Location     Type
  3398 ;;		None
  3399 ;; Auto vars:     Size  Location     Type
  3400 ;;		None
  3401 ;; Return value:  Size  Location     Type
  3402 ;;                  1    wreg      void 
  3403 ;; Registers used:
  3404 ;;		None
  3405 ;; Tracked objects:
  3406 ;;		On entry : 0/0
  3407 ;;		On exit  : 0/0
  3408 ;;		Unchanged: 0/0
  3409 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3410 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3411 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3412 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3413 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3414 ;;Total ram usage:        0 bytes
  3415 ;; Hardware stack levels used:    1
  3416 ;; Hardware stack levels required when called:   10
  3417 ;; This function calls:
  3418 ;;		Nothing
  3419 ;; This function is called by:
  3420 ;;		_TMR1_Initialize
  3421 ;;		_main
  3422 ;; This function uses a non-reentrant model
  3423 ;;
  3424                           
  3425                           
  3426                           ;psect for function _TMR1_StartTimer
  3427  0AAE                     _TMR1_StartTimer:	
  3428                           
  3429                           ;tmr1.c: 98: T1CONbits.TMR1ON = 1;
  3430                           
  3431                           ;incstack = 0
  3432                           ; Regs used in _TMR1_StartTimer: []
  3433  0AAE  0020               	movlb	0	; select bank0
  3434  0AAF  1418               	bsf	24,0	;volatile
  3435  0AB0  0008               	return
  3436  0AB1                     __end_of_TMR1_StartTimer:	
  3437                           
  3438                           	psect	text11
  3439  0B13                     __ptext11:	
  3440 ;; *************** function _TMR1_SetInterruptHandler *****************
  3441 ;; Defined at:
  3442 ;;		line 171 in file "mcc_generated_files/tmr1.c"
  3443 ;; Parameters:    Size  Location     Type
  3444 ;;  InterruptHan    2    0[BANK1 ] PTR void 
  3445 ;;		 -> sleepyTickISR(1), tickISR(1), TMR1_DefaultInterruptHandler(1), 
  3446 ;; Auto vars:     Size  Location     Type
  3447 ;;		None
  3448 ;; Return value:  Size  Location     Type
  3449 ;;                  1    wreg      void 
  3450 ;; Registers used:
  3451 ;;		wreg
  3452 ;; Tracked objects:
  3453 ;;		On entry : 0/0
  3454 ;;		On exit  : 0/0
  3455 ;;		Unchanged: 0/0
  3456 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3457 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  3458 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3459 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3460 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  3461 ;;Total ram usage:        2 bytes
  3462 ;; Hardware stack levels used:    1
  3463 ;; Hardware stack levels required when called:   10
  3464 ;; This function calls:
  3465 ;;		Nothing
  3466 ;; This function is called by:
  3467 ;;		_TMR1_Initialize
  3468 ;;		_startup
  3469 ;; This function uses a non-reentrant model
  3470 ;;
  3471                           
  3472                           
  3473                           ;psect for function _TMR1_SetInterruptHandler
  3474  0B13                     _TMR1_SetInterruptHandler:	
  3475                           
  3476                           ;tmr1.c: 172: TMR1_InterruptHandler = InterruptHandler;
  3477                           
  3478                           ;incstack = 0
  3479                           ; Regs used in _TMR1_SetInterruptHandler: [wreg]
  3480  0B13  0021               	movlb	1	; select bank1
  3481  0B14  0848               	movf	(TMR1_SetInterruptHandler@InterruptHandler+1)^(0+128),w
  3482  0B15  00C1               	movwf	(_TMR1_InterruptHandler+1)^(0+128)
  3483  0B16  0847               	movf	TMR1_SetInterruptHandler@InterruptHandler^(0+128),w
  3484  0B17  00C0               	movwf	_TMR1_InterruptHandler^(0+128)
  3485  0B18  0008               	return
  3486  0B19                     __end_of_TMR1_SetInterruptHandler:	
  3487                           
  3488                           	psect	text12
  3489  0C23                     __ptext12:	
  3490 ;; *************** function _TMR0_Initialize *****************
  3491 ;; Defined at:
  3492 ;;		line 63 in file "mcc_generated_files/tmr0.c"
  3493 ;; Parameters:    Size  Location     Type
  3494 ;;		None
  3495 ;; Auto vars:     Size  Location     Type
  3496 ;;		None
  3497 ;; Return value:  Size  Location     Type
  3498 ;;                  1    wreg      void 
  3499 ;; Registers used:
  3500 ;;		wreg, status,2, status,0, pclath, cstack
  3501 ;; Tracked objects:
  3502 ;;		On entry : 0/0
  3503 ;;		On exit  : 0/0
  3504 ;;		Unchanged: 0/0
  3505 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3506 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3507 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3508 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  3509 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  3510 ;;Total ram usage:        1 bytes
  3511 ;; Hardware stack levels used:    1
  3512 ;; Hardware stack levels required when called:   11
  3513 ;; This function calls:
  3514 ;;		_TMR0_SetInterruptHandler
  3515 ;; This function is called by:
  3516 ;;		_SYSTEM_Initialize
  3517 ;; This function uses a non-reentrant model
  3518 ;;
  3519                           
  3520                           
  3521                           ;psect for function _TMR0_Initialize
  3522  0C23                     _TMR0_Initialize:	
  3523                           
  3524                           ;tmr0.c: 68: OPTION_REG = (OPTION_REG & 0xC0) | 0xD5 & 0x3F;
  3525                           
  3526                           ;incstack = 0
  3527                           ; Regs used in _TMR0_Initialize: [wreg+status,2+status,0+pclath+cstack]
  3528  0C23  0021               	movlb	1	; select bank1
  3529  0C24  0815               	movf	21,w	;volatile
  3530  0C25  39C0               	andlw	192
  3531  0C26  3815               	iorlw	21
  3532  0C27  0095               	movwf	21	;volatile
  3533                           
  3534                           ;tmr0.c: 71: TMR0 = 0x16;
  3535  0C28  3016               	movlw	22
  3536  0C29  0020               	movlb	0	; select bank0
  3537  0C2A  0095               	movwf	21	;volatile
  3538                           
  3539                           ;tmr0.c: 74: timer0ReloadVal= 22;
  3540  0C2B  3016               	movlw	22
  3541  0C2C  0021               	movlb	1	; select bank1
  3542  0C2D  00C9               	movwf	??_TMR0_Initialize^(0+128)
  3543  0C2E  0849               	movf	??_TMR0_Initialize^(0+128),w
  3544  0C2F  00C6               	movwf	_timer0ReloadVal^(0+128)	;volatile
  3545                           
  3546                           ;tmr0.c: 77: INTCONbits.TMR0IF = 0;
  3547  0C30  110B               	bcf	11,2	;volatile
  3548                           
  3549                           ;tmr0.c: 80: INTCONbits.TMR0IE = 1;
  3550  0C31  168B               	bsf	11,5	;volatile
  3551                           
  3552                           ;tmr0.c: 83: TMR0_SetInterruptHandler(TMR0_DefaultInterruptHandler);
  3553  0C32  3002               	movlw	low _TMR0_DefaultInterruptHandler
  3554  0C33  00C7               	movwf	TMR0_SetInterruptHandler@InterruptHandler^(0+128)
  3555  0C34  3000               	movlw	high _TMR0_DefaultInterruptHandler
  3556  0C35  00C8               	movwf	(TMR0_SetInterruptHandler@InterruptHandler+1)^(0+128)
  3557  0C36  318B  230D         	fcall	_TMR0_SetInterruptHandler
  3558  0C38  0008               	return
  3559  0C39                     __end_of_TMR0_Initialize:	
  3560                           
  3561                           	psect	text13
  3562  0B0D                     __ptext13:	
  3563 ;; *************** function _TMR0_SetInterruptHandler *****************
  3564 ;; Defined at:
  3565 ;;		line 125 in file "mcc_generated_files/tmr0.c"
  3566 ;; Parameters:    Size  Location     Type
  3567 ;;  InterruptHan    2    0[BANK1 ] PTR void 
  3568 ;;		 -> muxISR(1), TMR0_DefaultInterruptHandler(1), 
  3569 ;; Auto vars:     Size  Location     Type
  3570 ;;		None
  3571 ;; Return value:  Size  Location     Type
  3572 ;;                  1    wreg      void 
  3573 ;; Registers used:
  3574 ;;		wreg
  3575 ;; Tracked objects:
  3576 ;;		On entry : 0/0
  3577 ;;		On exit  : 0/0
  3578 ;;		Unchanged: 0/0
  3579 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3580 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  3581 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3582 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3583 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  3584 ;;Total ram usage:        2 bytes
  3585 ;; Hardware stack levels used:    1
  3586 ;; Hardware stack levels required when called:   10
  3587 ;; This function calls:
  3588 ;;		Nothing
  3589 ;; This function is called by:
  3590 ;;		_TMR0_Initialize
  3591 ;;		_startup
  3592 ;; This function uses a non-reentrant model
  3593 ;;
  3594                           
  3595                           
  3596                           ;psect for function _TMR0_SetInterruptHandler
  3597  0B0D                     _TMR0_SetInterruptHandler:	
  3598                           
  3599                           ;tmr0.c: 126: TMR0_InterruptHandler = InterruptHandler;
  3600                           
  3601                           ;incstack = 0
  3602                           ; Regs used in _TMR0_SetInterruptHandler: [wreg]
  3603  0B0D  0021               	movlb	1	; select bank1
  3604  0B0E  0848               	movf	(TMR0_SetInterruptHandler@InterruptHandler+1)^(0+128),w
  3605  0B0F  00C5               	movwf	(_TMR0_InterruptHandler+1)^(0+128)
  3606  0B10  0847               	movf	TMR0_SetInterruptHandler@InterruptHandler^(0+128),w
  3607  0B11  00C4               	movwf	_TMR0_InterruptHandler^(0+128)
  3608  0B12  0008               	return
  3609  0B13                     __end_of_TMR0_SetInterruptHandler:	
  3610                           
  3611                           	psect	text14
  3612  06B6                     __ptext14:	
  3613 ;; *************** function _PIN_MANAGER_Initialize *****************
  3614 ;; Defined at:
  3615 ;;		line 58 in file "mcc_generated_files/pin_manager.c"
  3616 ;; Parameters:    Size  Location     Type
  3617 ;;		None
  3618 ;; Auto vars:     Size  Location     Type
  3619 ;;		None
  3620 ;; Return value:  Size  Location     Type
  3621 ;;                  1    wreg      void 
  3622 ;; Registers used:
  3623 ;;		wreg, status,2, status,0, pclath, cstack
  3624 ;; Tracked objects:
  3625 ;;		On entry : 0/0
  3626 ;;		On exit  : 0/0
  3627 ;;		Unchanged: 0/0
  3628 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3629 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3630 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3631 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3632 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3633 ;;Total ram usage:        0 bytes
  3634 ;; Hardware stack levels used:    1
  3635 ;; Hardware stack levels required when called:   11
  3636 ;; This function calls:
  3637 ;;		_IOCBF0_SetInterruptHandler
  3638 ;;		_IOCBF1_SetInterruptHandler
  3639 ;;		_IOCBF2_SetInterruptHandler
  3640 ;;		_IOCBF3_SetInterruptHandler
  3641 ;;		_IOCBF4_SetInterruptHandler
  3642 ;;		_IOCBF5_SetInterruptHandler
  3643 ;; This function is called by:
  3644 ;;		_SYSTEM_Initialize
  3645 ;; This function uses a non-reentrant model
  3646 ;;
  3647                           
  3648                           
  3649                           ;psect for function _PIN_MANAGER_Initialize
  3650  06B6                     _PIN_MANAGER_Initialize:	
  3651                           
  3652                           ;pin_manager.c: 63: LATE = 0x00;
  3653                           
  3654                           ;incstack = 0
  3655                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2+status,0+pclath+cstack]
  3656  06B6  0022               	movlb	2	; select bank2
  3657  06B7  0190               	clrf	16	;volatile
  3658                           
  3659                           ;pin_manager.c: 64: LATD = 0x80;
  3660  06B8  3080               	movlw	128
  3661  06B9  008F               	movwf	15	;volatile
  3662                           
  3663                           ;pin_manager.c: 65: LATA = 0x02;
  3664  06BA  3002               	movlw	2
  3665  06BB  008C               	movwf	12	;volatile
  3666                           
  3667                           ;pin_manager.c: 66: LATB = 0x00;
  3668  06BC  018D               	clrf	13	;volatile
  3669                           
  3670                           ;pin_manager.c: 67: LATC = 0x00;
  3671  06BD  018E               	clrf	14	;volatile
  3672                           
  3673                           ;pin_manager.c: 72: TRISE = 0x00;
  3674  06BE  0021               	movlb	1	; select bank1
  3675  06BF  0190               	clrf	16	;volatile
  3676                           
  3677                           ;pin_manager.c: 73: TRISA = 0xF5;
  3678  06C0  30F5               	movlw	245
  3679  06C1  008C               	movwf	12	;volatile
  3680                           
  3681                           ;pin_manager.c: 74: TRISB = 0xFF;
  3682  06C2  30FF               	movlw	255
  3683  06C3  008D               	movwf	13	;volatile
  3684                           
  3685                           ;pin_manager.c: 75: TRISC = 0xE3;
  3686  06C4  30E3               	movlw	227
  3687  06C5  008E               	movwf	14	;volatile
  3688                           
  3689                           ;pin_manager.c: 76: TRISD = 0x00;
  3690  06C6  018F               	clrf	15	;volatile
  3691                           
  3692                           ;pin_manager.c: 81: ANSELC = 0x02;
  3693  06C7  3002               	movlw	2
  3694  06C8  0023               	movlb	3	; select bank3
  3695  06C9  008E               	movwf	14	;volatile
  3696                           
  3697                           ;pin_manager.c: 82: ANSELB = 0x00;
  3698  06CA  018D               	clrf	13	;volatile
  3699                           
  3700                           ;pin_manager.c: 83: ANSELD = 0x00;
  3701  06CB  018F               	clrf	15	;volatile
  3702                           
  3703                           ;pin_manager.c: 84: ANSELE = 0x00;
  3704  06CC  0190               	clrf	16	;volatile
  3705                           
  3706                           ;pin_manager.c: 85: ANSELA = 0x00;
  3707  06CD  018C               	clrf	12	;volatile
  3708                           
  3709                           ;pin_manager.c: 90: WPUE = 0x08;
  3710  06CE  3008               	movlw	8
  3711  06CF  0024               	movlb	4	; select bank4
  3712  06D0  0090               	movwf	16	;volatile
  3713                           
  3714                           ;pin_manager.c: 91: WPUB = 0xC0;
  3715  06D1  30C0               	movlw	192
  3716  06D2  008D               	movwf	13	;volatile
  3717                           
  3718                           ;pin_manager.c: 92: OPTION_REGbits.nWPUEN = 0;
  3719  06D3  0021               	movlb	1	; select bank1
  3720  06D4  1395               	bcf	21,7	;volatile
  3721                           
  3722                           ;pin_manager.c: 98: APFCON = 0x00;
  3723  06D5  0022               	movlb	2	; select bank2
  3724  06D6  019D               	clrf	29	;volatile
  3725                           
  3726                           ;pin_manager.c: 104: IOCBFbits.IOCBF0 = 0;
  3727  06D7  0027               	movlb	7	; select bank7
  3728  06D8  1016               	bcf	22,0	;volatile
  3729                           
  3730                           ;pin_manager.c: 105: IOCBFbits.IOCBF1 = 0;
  3731  06D9  1096               	bcf	22,1	;volatile
  3732                           
  3733                           ;pin_manager.c: 106: IOCBFbits.IOCBF2 = 0;
  3734  06DA  1116               	bcf	22,2	;volatile
  3735                           
  3736                           ;pin_manager.c: 107: IOCBFbits.IOCBF3 = 0;
  3737  06DB  1196               	bcf	22,3	;volatile
  3738                           
  3739                           ;pin_manager.c: 108: IOCBFbits.IOCBF4 = 0;
  3740  06DC  1216               	bcf	22,4	;volatile
  3741                           
  3742                           ;pin_manager.c: 109: IOCBFbits.IOCBF5 = 0;
  3743  06DD  1296               	bcf	22,5	;volatile
  3744                           
  3745                           ;pin_manager.c: 111: IOCBNbits.IOCBN0 = 1;
  3746  06DE  1415               	bsf	21,0	;volatile
  3747                           
  3748                           ;pin_manager.c: 112: IOCBNbits.IOCBN1 = 1;
  3749  06DF  1495               	bsf	21,1	;volatile
  3750                           
  3751                           ;pin_manager.c: 113: IOCBNbits.IOCBN2 = 1;
  3752  06E0  1515               	bsf	21,2	;volatile
  3753                           
  3754                           ;pin_manager.c: 114: IOCBNbits.IOCBN3 = 1;
  3755  06E1  1595               	bsf	21,3	;volatile
  3756                           
  3757                           ;pin_manager.c: 115: IOCBNbits.IOCBN4 = 1;
  3758  06E2  1615               	bsf	21,4	;volatile
  3759                           
  3760                           ;pin_manager.c: 116: IOCBNbits.IOCBN5 = 1;
  3761  06E3  1695               	bsf	21,5	;volatile
  3762                           
  3763                           ;pin_manager.c: 118: IOCBPbits.IOCBP0 = 0;
  3764  06E4  1014               	bcf	20,0	;volatile
  3765                           
  3766                           ;pin_manager.c: 119: IOCBPbits.IOCBP1 = 0;
  3767  06E5  1094               	bcf	20,1	;volatile
  3768                           
  3769                           ;pin_manager.c: 120: IOCBPbits.IOCBP2 = 0;
  3770  06E6  1114               	bcf	20,2	;volatile
  3771                           
  3772                           ;pin_manager.c: 121: IOCBPbits.IOCBP3 = 0;
  3773  06E7  1194               	bcf	20,3	;volatile
  3774                           
  3775                           ;pin_manager.c: 122: IOCBPbits.IOCBP4 = 1;
  3776  06E8  1614               	bsf	20,4	;volatile
  3777                           
  3778                           ;pin_manager.c: 123: IOCBPbits.IOCBP5 = 1;
  3779  06E9  1694               	bsf	20,5	;volatile
  3780                           
  3781                           ;pin_manager.c: 126: IOCBF0_SetInterruptHandler(IOCBF0_DefaultInterruptHandler);
  3782  06EA  309F               	movlw	low _IOCBF0_DefaultInterruptHandler
  3783  06EB  0021               	movlb	1	; select bank1
  3784  06EC  00C7               	movwf	IOCBF0_SetInterruptHandler@InterruptHandler^(0+128)
  3785  06ED  300A               	movlw	high _IOCBF0_DefaultInterruptHandler
  3786  06EE  00C8               	movwf	(IOCBF0_SetInterruptHandler@InterruptHandler+1)^(0+128)
  3787  06EF  318A  22EF  3186   	fcall	_IOCBF0_SetInterruptHandler
  3788                           
  3789                           ;pin_manager.c: 127: IOCBF1_SetInterruptHandler(IOCBF1_DefaultInterruptHandler);
  3790  06F2  30A0               	movlw	low _IOCBF1_DefaultInterruptHandler
  3791  06F3  0021               	movlb	1	; select bank1
  3792  06F4  00C7               	movwf	IOCBF1_SetInterruptHandler@InterruptHandler^(0+128)
  3793  06F5  300A               	movlw	high _IOCBF1_DefaultInterruptHandler
  3794  06F6  00C8               	movwf	(IOCBF1_SetInterruptHandler@InterruptHandler+1)^(0+128)
  3795  06F7  318A  22F5  3186   	fcall	_IOCBF1_SetInterruptHandler
  3796                           
  3797                           ;pin_manager.c: 128: IOCBF2_SetInterruptHandler(IOCBF2_DefaultInterruptHandler);
  3798  06FA  30A1               	movlw	low _IOCBF2_DefaultInterruptHandler
  3799  06FB  0021               	movlb	1	; select bank1
  3800  06FC  00C7               	movwf	IOCBF2_SetInterruptHandler@InterruptHandler^(0+128)
  3801  06FD  300A               	movlw	high _IOCBF2_DefaultInterruptHandler
  3802  06FE  00C8               	movwf	(IOCBF2_SetInterruptHandler@InterruptHandler+1)^(0+128)
  3803  06FF  318A  22FB  3186   	fcall	_IOCBF2_SetInterruptHandler
  3804                           
  3805                           ;pin_manager.c: 129: IOCBF3_SetInterruptHandler(IOCBF3_DefaultInterruptHandler);
  3806  0702  30A2               	movlw	low _IOCBF3_DefaultInterruptHandler
  3807  0703  0021               	movlb	1	; select bank1
  3808  0704  00C7               	movwf	IOCBF3_SetInterruptHandler@InterruptHandler^(0+128)
  3809  0705  300A               	movlw	high _IOCBF3_DefaultInterruptHandler
  3810  0706  00C8               	movwf	(IOCBF3_SetInterruptHandler@InterruptHandler+1)^(0+128)
  3811  0707  318B  2301  3186   	fcall	_IOCBF3_SetInterruptHandler
  3812                           
  3813                           ;pin_manager.c: 130: IOCBF4_SetInterruptHandler(IOCBF4_DefaultInterruptHandler);
  3814  070A  30A3               	movlw	low _IOCBF4_DefaultInterruptHandler
  3815  070B  0021               	movlb	1	; select bank1
  3816  070C  00C7               	movwf	IOCBF4_SetInterruptHandler@InterruptHandler^(0+128)
  3817  070D  300A               	movlw	high _IOCBF4_DefaultInterruptHandler
  3818  070E  00C8               	movwf	(IOCBF4_SetInterruptHandler@InterruptHandler+1)^(0+128)
  3819  070F  318B  2337  3186   	fcall	_IOCBF4_SetInterruptHandler
  3820                           
  3821                           ;pin_manager.c: 131: IOCBF5_SetInterruptHandler(IOCBF5_DefaultInterruptHandler);
  3822  0712  30A4               	movlw	low _IOCBF5_DefaultInterruptHandler
  3823  0713  0021               	movlb	1	; select bank1
  3824  0714  00C7               	movwf	IOCBF5_SetInterruptHandler@InterruptHandler^(0+128)
  3825  0715  300A               	movlw	high _IOCBF5_DefaultInterruptHandler
  3826  0716  00C8               	movwf	(IOCBF5_SetInterruptHandler@InterruptHandler+1)^(0+128)
  3827  0717  318B  2307         	fcall	_IOCBF5_SetInterruptHandler
  3828                           
  3829                           ;pin_manager.c: 134: INTCONbits.IOCIE = 1;
  3830  0719  158B               	bsf	11,3	;volatile
  3831  071A  0008               	return
  3832  071B                     __end_of_PIN_MANAGER_Initialize:	
  3833                           
  3834                           	psect	text15
  3835  0B07                     __ptext15:	
  3836 ;; *************** function _IOCBF5_SetInterruptHandler *****************
  3837 ;; Defined at:
  3838 ;;		line 347 in file "mcc_generated_files/pin_manager.c"
  3839 ;; Parameters:    Size  Location     Type
  3840 ;;  InterruptHan    2    0[BANK1 ] PTR void 
  3841 ;;		 -> IOCBF5_DefaultInterruptHandler(1), 
  3842 ;; Auto vars:     Size  Location     Type
  3843 ;;		None
  3844 ;; Return value:  Size  Location     Type
  3845 ;;                  1    wreg      void 
  3846 ;; Registers used:
  3847 ;;		wreg
  3848 ;; Tracked objects:
  3849 ;;		On entry : 0/0
  3850 ;;		On exit  : 0/0
  3851 ;;		Unchanged: 0/0
  3852 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3853 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  3854 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3855 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3856 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  3857 ;;Total ram usage:        2 bytes
  3858 ;; Hardware stack levels used:    1
  3859 ;; Hardware stack levels required when called:   10
  3860 ;; This function calls:
  3861 ;;		Nothing
  3862 ;; This function is called by:
  3863 ;;		_PIN_MANAGER_Initialize
  3864 ;; This function uses a non-reentrant model
  3865 ;;
  3866                           
  3867                           
  3868                           ;psect for function _IOCBF5_SetInterruptHandler
  3869  0B07                     _IOCBF5_SetInterruptHandler:	
  3870                           
  3871                           ;pin_manager.c: 348: IOCBF5_InterruptHandler = InterruptHandler;
  3872                           
  3873                           ;incstack = 0
  3874                           ; Regs used in _IOCBF5_SetInterruptHandler: [wreg]
  3875  0B07  0021               	movlb	1	; select bank1
  3876  0B08  0848               	movf	(IOCBF5_SetInterruptHandler@InterruptHandler+1)^(0+128),w
  3877  0B09  00B5               	movwf	(_IOCBF5_InterruptHandler+1)^(0+128)
  3878  0B0A  0847               	movf	IOCBF5_SetInterruptHandler@InterruptHandler^(0+128),w
  3879  0B0B  00B4               	movwf	_IOCBF5_InterruptHandler^(0+128)
  3880  0B0C  0008               	return
  3881  0B0D                     __end_of_IOCBF5_SetInterruptHandler:	
  3882                           
  3883                           	psect	text16
  3884  0B37                     __ptext16:	
  3885 ;; *************** function _IOCBF4_SetInterruptHandler *****************
  3886 ;; Defined at:
  3887 ;;		line 317 in file "mcc_generated_files/pin_manager.c"
  3888 ;; Parameters:    Size  Location     Type
  3889 ;;  InterruptHan    2    0[BANK1 ] PTR void 
  3890 ;;		 -> powerFailISR(1), IOCBF4_DefaultInterruptHandler(1), 
  3891 ;; Auto vars:     Size  Location     Type
  3892 ;;		None
  3893 ;; Return value:  Size  Location     Type
  3894 ;;                  1    wreg      void 
  3895 ;; Registers used:
  3896 ;;		wreg
  3897 ;; Tracked objects:
  3898 ;;		On entry : 0/0
  3899 ;;		On exit  : 0/0
  3900 ;;		Unchanged: 0/0
  3901 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3902 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  3903 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3904 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3905 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  3906 ;;Total ram usage:        2 bytes
  3907 ;; Hardware stack levels used:    1
  3908 ;; Hardware stack levels required when called:   10
  3909 ;; This function calls:
  3910 ;;		Nothing
  3911 ;; This function is called by:
  3912 ;;		_PIN_MANAGER_Initialize
  3913 ;;		_startup
  3914 ;; This function uses a non-reentrant model
  3915 ;;
  3916                           
  3917                           
  3918                           ;psect for function _IOCBF4_SetInterruptHandler
  3919  0B37                     _IOCBF4_SetInterruptHandler:	
  3920                           
  3921                           ;pin_manager.c: 318: IOCBF4_InterruptHandler = InterruptHandler;
  3922                           
  3923                           ;incstack = 0
  3924                           ; Regs used in _IOCBF4_SetInterruptHandler: [wreg]
  3925  0B37  0021               	movlb	1	; select bank1
  3926  0B38  0848               	movf	(IOCBF4_SetInterruptHandler@InterruptHandler+1)^(0+128),w
  3927  0B39  0020               	movlb	0	; select bank0
  3928  0B3A  00ED               	movwf	_IOCBF4_InterruptHandler+1
  3929  0B3B  0021               	movlb	1	; select bank1
  3930  0B3C  0847               	movf	IOCBF4_SetInterruptHandler@InterruptHandler^(0+128),w
  3931  0B3D  0020               	movlb	0	; select bank0
  3932  0B3E  00EC               	movwf	_IOCBF4_InterruptHandler
  3933  0B3F  0008               	return
  3934  0B40                     __end_of_IOCBF4_SetInterruptHandler:	
  3935                           
  3936                           	psect	text17
  3937  0B01                     __ptext17:	
  3938 ;; *************** function _IOCBF3_SetInterruptHandler *****************
  3939 ;; Defined at:
  3940 ;;		line 287 in file "mcc_generated_files/pin_manager.c"
  3941 ;; Parameters:    Size  Location     Type
  3942 ;;  InterruptHan    2    0[BANK1 ] PTR void 
  3943 ;;		 -> displayToggleISR(1), IOCBF3_DefaultInterruptHandler(1), 
  3944 ;; Auto vars:     Size  Location     Type
  3945 ;;		None
  3946 ;; Return value:  Size  Location     Type
  3947 ;;                  1    wreg      void 
  3948 ;; Registers used:
  3949 ;;		wreg
  3950 ;; Tracked objects:
  3951 ;;		On entry : 0/0
  3952 ;;		On exit  : 0/0
  3953 ;;		Unchanged: 0/0
  3954 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3955 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  3956 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3957 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3958 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  3959 ;;Total ram usage:        2 bytes
  3960 ;; Hardware stack levels used:    1
  3961 ;; Hardware stack levels required when called:   10
  3962 ;; This function calls:
  3963 ;;		Nothing
  3964 ;; This function is called by:
  3965 ;;		_PIN_MANAGER_Initialize
  3966 ;;		_startup
  3967 ;; This function uses a non-reentrant model
  3968 ;;
  3969                           
  3970                           
  3971                           ;psect for function _IOCBF3_SetInterruptHandler
  3972  0B01                     _IOCBF3_SetInterruptHandler:	
  3973                           
  3974                           ;pin_manager.c: 288: IOCBF3_InterruptHandler = InterruptHandler;
  3975                           
  3976                           ;incstack = 0
  3977                           ; Regs used in _IOCBF3_SetInterruptHandler: [wreg]
  3978  0B01  0021               	movlb	1	; select bank1
  3979  0B02  0848               	movf	(IOCBF3_SetInterruptHandler@InterruptHandler+1)^(0+128),w
  3980  0B03  00B7               	movwf	(_IOCBF3_InterruptHandler+1)^(0+128)
  3981  0B04  0847               	movf	IOCBF3_SetInterruptHandler@InterruptHandler^(0+128),w
  3982  0B05  00B6               	movwf	_IOCBF3_InterruptHandler^(0+128)
  3983  0B06  0008               	return
  3984  0B07                     __end_of_IOCBF3_SetInterruptHandler:	
  3985                           
  3986                           	psect	text18
  3987  0AFB                     __ptext18:	
  3988 ;; *************** function _IOCBF2_SetInterruptHandler *****************
  3989 ;; Defined at:
  3990 ;;		line 257 in file "mcc_generated_files/pin_manager.c"
  3991 ;; Parameters:    Size  Location     Type
  3992 ;;  InterruptHan    2    0[BANK1 ] PTR void 
  3993 ;;		 -> setHoursISR(1), IOCBF2_DefaultInterruptHandler(1), 
  3994 ;; Auto vars:     Size  Location     Type
  3995 ;;		None
  3996 ;; Return value:  Size  Location     Type
  3997 ;;                  1    wreg      void 
  3998 ;; Registers used:
  3999 ;;		wreg
  4000 ;; Tracked objects:
  4001 ;;		On entry : 0/0
  4002 ;;		On exit  : 0/0
  4003 ;;		Unchanged: 0/0
  4004 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4005 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  4006 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4007 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4008 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  4009 ;;Total ram usage:        2 bytes
  4010 ;; Hardware stack levels used:    1
  4011 ;; Hardware stack levels required when called:   10
  4012 ;; This function calls:
  4013 ;;		Nothing
  4014 ;; This function is called by:
  4015 ;;		_PIN_MANAGER_Initialize
  4016 ;;		_startup
  4017 ;; This function uses a non-reentrant model
  4018 ;;
  4019                           
  4020                           
  4021                           ;psect for function _IOCBF2_SetInterruptHandler
  4022  0AFB                     _IOCBF2_SetInterruptHandler:	
  4023                           
  4024                           ;pin_manager.c: 258: IOCBF2_InterruptHandler = InterruptHandler;
  4025                           
  4026                           ;incstack = 0
  4027                           ; Regs used in _IOCBF2_SetInterruptHandler: [wreg]
  4028  0AFB  0021               	movlb	1	; select bank1
  4029  0AFC  0848               	movf	(IOCBF2_SetInterruptHandler@InterruptHandler+1)^(0+128),w
  4030  0AFD  00B9               	movwf	(_IOCBF2_InterruptHandler+1)^(0+128)
  4031  0AFE  0847               	movf	IOCBF2_SetInterruptHandler@InterruptHandler^(0+128),w
  4032  0AFF  00B8               	movwf	_IOCBF2_InterruptHandler^(0+128)
  4033  0B00  0008               	return
  4034  0B01                     __end_of_IOCBF2_SetInterruptHandler:	
  4035                           
  4036                           	psect	text19
  4037  0AF5                     __ptext19:	
  4038 ;; *************** function _IOCBF1_SetInterruptHandler *****************
  4039 ;; Defined at:
  4040 ;;		line 227 in file "mcc_generated_files/pin_manager.c"
  4041 ;; Parameters:    Size  Location     Type
  4042 ;;  InterruptHan    2    0[BANK1 ] PTR void 
  4043 ;;		 -> setMinutesISR(1), IOCBF1_DefaultInterruptHandler(1), 
  4044 ;; Auto vars:     Size  Location     Type
  4045 ;;		None
  4046 ;; Return value:  Size  Location     Type
  4047 ;;                  1    wreg      void 
  4048 ;; Registers used:
  4049 ;;		wreg
  4050 ;; Tracked objects:
  4051 ;;		On entry : 0/0
  4052 ;;		On exit  : 0/0
  4053 ;;		Unchanged: 0/0
  4054 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4055 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  4056 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4057 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4058 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  4059 ;;Total ram usage:        2 bytes
  4060 ;; Hardware stack levels used:    1
  4061 ;; Hardware stack levels required when called:   10
  4062 ;; This function calls:
  4063 ;;		Nothing
  4064 ;; This function is called by:
  4065 ;;		_PIN_MANAGER_Initialize
  4066 ;;		_startup
  4067 ;; This function uses a non-reentrant model
  4068 ;;
  4069                           
  4070                           
  4071                           ;psect for function _IOCBF1_SetInterruptHandler
  4072  0AF5                     _IOCBF1_SetInterruptHandler:	
  4073                           
  4074                           ;pin_manager.c: 228: IOCBF1_InterruptHandler = InterruptHandler;
  4075                           
  4076                           ;incstack = 0
  4077                           ; Regs used in _IOCBF1_SetInterruptHandler: [wreg]
  4078  0AF5  0021               	movlb	1	; select bank1
  4079  0AF6  0848               	movf	(IOCBF1_SetInterruptHandler@InterruptHandler+1)^(0+128),w
  4080  0AF7  00BB               	movwf	(_IOCBF1_InterruptHandler+1)^(0+128)
  4081  0AF8  0847               	movf	IOCBF1_SetInterruptHandler@InterruptHandler^(0+128),w
  4082  0AF9  00BA               	movwf	_IOCBF1_InterruptHandler^(0+128)
  4083  0AFA  0008               	return
  4084  0AFB                     __end_of_IOCBF1_SetInterruptHandler:	
  4085                           
  4086                           	psect	text20
  4087  0AEF                     __ptext20:	
  4088 ;; *************** function _IOCBF0_SetInterruptHandler *****************
  4089 ;; Defined at:
  4090 ;;		line 197 in file "mcc_generated_files/pin_manager.c"
  4091 ;; Parameters:    Size  Location     Type
  4092 ;;  InterruptHan    2    0[BANK1 ] PTR void 
  4093 ;;		 -> setSecondsISR(1), IOCBF0_DefaultInterruptHandler(1), 
  4094 ;; Auto vars:     Size  Location     Type
  4095 ;;		None
  4096 ;; Return value:  Size  Location     Type
  4097 ;;                  1    wreg      void 
  4098 ;; Registers used:
  4099 ;;		wreg
  4100 ;; Tracked objects:
  4101 ;;		On entry : 0/0
  4102 ;;		On exit  : 0/0
  4103 ;;		Unchanged: 0/0
  4104 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4105 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  4106 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4107 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4108 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  4109 ;;Total ram usage:        2 bytes
  4110 ;; Hardware stack levels used:    1
  4111 ;; Hardware stack levels required when called:   10
  4112 ;; This function calls:
  4113 ;;		Nothing
  4114 ;; This function is called by:
  4115 ;;		_PIN_MANAGER_Initialize
  4116 ;;		_startup
  4117 ;; This function uses a non-reentrant model
  4118 ;;
  4119                           
  4120                           
  4121                           ;psect for function _IOCBF0_SetInterruptHandler
  4122  0AEF                     _IOCBF0_SetInterruptHandler:	
  4123                           
  4124                           ;pin_manager.c: 198: IOCBF0_InterruptHandler = InterruptHandler;
  4125                           
  4126                           ;incstack = 0
  4127                           ; Regs used in _IOCBF0_SetInterruptHandler: [wreg]
  4128  0AEF  0021               	movlb	1	; select bank1
  4129  0AF0  0848               	movf	(IOCBF0_SetInterruptHandler@InterruptHandler+1)^(0+128),w
  4130  0AF1  00BD               	movwf	(_IOCBF0_InterruptHandler+1)^(0+128)
  4131  0AF2  0847               	movf	IOCBF0_SetInterruptHandler@InterruptHandler^(0+128),w
  4132  0AF3  00BC               	movwf	_IOCBF0_InterruptHandler^(0+128)
  4133  0AF4  0008               	return
  4134  0AF5                     __end_of_IOCBF0_SetInterruptHandler:	
  4135                           
  4136                           	psect	text21
  4137  0AB7                     __ptext21:	
  4138 ;; *************** function _OSCILLATOR_Initialize *****************
  4139 ;; Defined at:
  4140 ;;		line 85 in file "mcc_generated_files/mcc.c"
  4141 ;; Parameters:    Size  Location     Type
  4142 ;;		None
  4143 ;; Auto vars:     Size  Location     Type
  4144 ;;		None
  4145 ;; Return value:  Size  Location     Type
  4146 ;;                  1    wreg      void 
  4147 ;; Registers used:
  4148 ;;		wreg
  4149 ;; Tracked objects:
  4150 ;;		On entry : 0/0
  4151 ;;		On exit  : 0/0
  4152 ;;		Unchanged: 0/0
  4153 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4154 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4155 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4156 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4157 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4158 ;;Total ram usage:        0 bytes
  4159 ;; Hardware stack levels used:    1
  4160 ;; Hardware stack levels required when called:   10
  4161 ;; This function calls:
  4162 ;;		Nothing
  4163 ;; This function is called by:
  4164 ;;		_SYSTEM_Initialize
  4165 ;; This function uses a non-reentrant model
  4166 ;;
  4167                           
  4168                           
  4169                           ;psect for function _OSCILLATOR_Initialize
  4170  0AB7                     _OSCILLATOR_Initialize:	
  4171                           
  4172                           ;mcc.c: 88: OSCCON = 0x50;
  4173                           
  4174                           ;incstack = 0
  4175                           ; Regs used in _OSCILLATOR_Initialize: [wreg]
  4176  0AB7  3050               	movlw	80
  4177  0AB8  0021               	movlb	1	; select bank1
  4178  0AB9  0099               	movwf	25	;volatile
  4179  0ABA  0008               	return
  4180  0ABB                     __end_of_OSCILLATOR_Initialize:	
  4181                           
  4182                           	psect	intentry
  4183  0004                     __pintentry:	
  4184 ;; *************** function _INTERRUPT_InterruptManager *****************
  4185 ;; Defined at:
  4186 ;;		line 51 in file "mcc_generated_files/interrupt_manager.c"
  4187 ;; Parameters:    Size  Location     Type
  4188 ;;		None
  4189 ;; Auto vars:     Size  Location     Type
  4190 ;;		None
  4191 ;; Return value:  Size  Location     Type
  4192 ;;                  1    wreg      void 
  4193 ;; Registers used:
  4194 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4195 ;; Tracked objects:
  4196 ;;		On entry : 0/0
  4197 ;;		On exit  : 0/0
  4198 ;;		Unchanged: 0/0
  4199 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4200 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4201 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4202 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4203 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4204 ;;Total ram usage:        1 bytes
  4205 ;; Hardware stack levels used:    1
  4206 ;; Hardware stack levels required when called:    9
  4207 ;; This function calls:
  4208 ;;		_PIN_MANAGER_IOC
  4209 ;;		_TMR0_ISR
  4210 ;;		_TMR1_ISR
  4211 ;;		_TMR2_ISR
  4212 ;; This function is called by:
  4213 ;;		Interrupt level 1
  4214 ;; This function uses a non-reentrant model
  4215 ;;
  4216                           
  4217  0004                     _INTERRUPT_InterruptManager:	
  4218                           
  4219                           ;incstack = 0
  4220  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  4221                           
  4222                           ; Regs used in _INTERRUPT_InterruptManager: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4223  0005  3180               	pagesel	$
  4224  0006  0020               	movlb	0	; select bank0
  4225  0007  087F               	movf	127,w
  4226  0008  00D6               	movwf	??_INTERRUPT_InterruptManager
  4227                           
  4228                           ;interrupt_manager.c: 54: if(INTCONbits.TMR0IE == 1 && INTCONbits.TMR0IF == 1)
  4229  0009  1A8B               	btfsc	11,5	;volatile
  4230  000A  1D0B               	btfss	11,2	;volatile
  4231  000B  2810               	goto	i1l165
  4232                           
  4233                           ;interrupt_manager.c: 55: {
  4234                           ;interrupt_manager.c: 56: TMR0_ISR();
  4235  000C  318B  23B4  3180   	fcall	_TMR0_ISR
  4236                           
  4237                           ;interrupt_manager.c: 57: }
  4238  000F  282D               	goto	i1l173
  4239  0010                     i1l165:	
  4240                           
  4241                           ;interrupt_manager.c: 58: else if(INTCONbits.PEIE == 1 && PIE1bits.TMR2IE == 1 && PIR1bi
      +                          ts.TMR2IF == 1)
  4242  0010  1F0B               	btfss	11,6	;volatile
  4243  0011  281C               	goto	i1l167
  4244  0012  0021               	movlb	1	; select bank1
  4245  0013  1C91               	btfss	17,1	;volatile
  4246  0014  281C               	goto	i1l167
  4247  0015  0020               	movlb	0	; select bank0
  4248  0016  1C91               	btfss	17,1	;volatile
  4249  0017  281C               	goto	i1l167
  4250                           
  4251                           ;interrupt_manager.c: 59: {
  4252                           ;interrupt_manager.c: 60: TMR2_ISR();
  4253  0018  318B  23A7  3180   	fcall	_TMR2_ISR
  4254                           
  4255                           ;interrupt_manager.c: 61: }
  4256  001B  282D               	goto	i1l173
  4257  001C                     i1l167:	
  4258                           
  4259                           ;interrupt_manager.c: 62: else if(INTCONbits.PEIE == 1 && PIE1bits.TMR1IE == 1 && PIR1bi
      +                          ts.TMR1IF == 1)
  4260  001C  1F0B               	btfss	11,6	;volatile
  4261  001D  2828               	goto	i1l169
  4262  001E  0021               	movlb	1	; select bank1
  4263  001F  1C11               	btfss	17,0	;volatile
  4264  0020  2828               	goto	i1l169
  4265  0021  0020               	movlb	0	; select bank0
  4266  0022  1C11               	btfss	17,0	;volatile
  4267  0023  2828               	goto	i1l169
  4268                           
  4269                           ;interrupt_manager.c: 63: {
  4270                           ;interrupt_manager.c: 64: TMR1_ISR();
  4271  0024  318C  240E  3180   	fcall	_TMR1_ISR
  4272                           
  4273                           ;interrupt_manager.c: 65: }
  4274  0027  282D               	goto	i1l173
  4275  0028                     i1l169:	
  4276                           
  4277                           ;interrupt_manager.c: 66: else if(INTCONbits.IOCIE == 1 && INTCONbits.IOCIF == 1)
  4278  0028  198B               	btfsc	11,3	;volatile
  4279  0029  1C0B               	btfss	11,0	;volatile
  4280  002A  282D               	goto	i1l173
  4281                           
  4282                           ;interrupt_manager.c: 67: {
  4283                           ;interrupt_manager.c: 68: PIN_MANAGER_IOC();
  4284  002B  318D  2516         	fcall	_PIN_MANAGER_IOC
  4285  002D                     i1l173:	
  4286                           ;interrupt_manager.c: 70: else
  4287                           ;interrupt_manager.c: 71: {
  4288                           
  4289                           ;interrupt_manager.c: 69: }
  4290                           
  4291  002D  0020               	movlb	0	; select bank0
  4292  002E  0856               	movf	??_INTERRUPT_InterruptManager,w
  4293  002F  00FF               	movwf	127
  4294  0030  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  4295  0031  0009               	retfie
  4296  0032                     __end_of_INTERRUPT_InterruptManager:	
  4297                           
  4298                           	psect	text23
  4299  0BA7                     __ptext23:	
  4300 ;; *************** function _TMR2_ISR *****************
  4301 ;; Defined at:
  4302 ;;		line 124 in file "mcc_generated_files/tmr2.c"
  4303 ;; Parameters:    Size  Location     Type
  4304 ;;		None
  4305 ;; Auto vars:     Size  Location     Type
  4306 ;;		None
  4307 ;; Return value:  Size  Location     Type
  4308 ;;                  1    wreg      void 
  4309 ;; Registers used:
  4310 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4311 ;; Tracked objects:
  4312 ;;		On entry : 0/0
  4313 ;;		On exit  : 0/0
  4314 ;;		Unchanged: 0/0
  4315 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4316 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4317 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4318 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4319 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4320 ;;Total ram usage:        0 bytes
  4321 ;; Hardware stack levels used:    1
  4322 ;; Hardware stack levels required when called:    2
  4323 ;; This function calls:
  4324 ;;		Absolute function
  4325 ;;		_TMR2_DefaultInterruptHandler
  4326 ;;		_blankISR
  4327 ;; This function is called by:
  4328 ;;		_INTERRUPT_InterruptManager
  4329 ;; This function uses a non-reentrant model
  4330 ;;
  4331                           
  4332                           
  4333                           ;psect for function _TMR2_ISR
  4334  0BA7                     _TMR2_ISR:	
  4335                           
  4336                           ;tmr2.c: 128: PIR1bits.TMR2IF = 0;
  4337                           
  4338                           ;incstack = 0
  4339                           ; Regs used in _TMR2_ISR: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4340  0BA7  0020               	movlb	0	; select bank0
  4341  0BA8  1091               	bcf	17,1	;volatile
  4342                           
  4343                           ;tmr2.c: 130: if(TMR2_InterruptHandler)
  4344  0BA9  0021               	movlb	1	; select bank1
  4345  0BAA  083E               	movf	_TMR2_InterruptHandler^(0+128),w
  4346  0BAB  043F               	iorwf	(_TMR2_InterruptHandler+1)^(0+128),w
  4347  0BAC  1903               	btfsc	3,2
  4348  0BAD  0008               	return
  4349                           
  4350                           ;tmr2.c: 131: {
  4351                           ;tmr2.c: 132: TMR2_InterruptHandler();
  4352  0BAE  083F               	movf	(_TMR2_InterruptHandler+1)^(0+128),w
  4353  0BAF  008A               	movwf	10
  4354  0BB0  083E               	movf	_TMR2_InterruptHandler^(0+128),w
  4355  0BB1  000A               	callw
  4356  0BB2  318B               	pagesel	$
  4357  0BB3  0008               	return
  4358  0BB4                     __end_of_TMR2_ISR:	
  4359                           
  4360                           	psect	text24
  4361  07FF                     __ptext24:	
  4362 ;; *************** function _TMR2_DefaultInterruptHandler *****************
  4363 ;; Defined at:
  4364 ;;		line 141 in file "mcc_generated_files/tmr2.c"
  4365 ;; Parameters:    Size  Location     Type
  4366 ;;		None
  4367 ;; Auto vars:     Size  Location     Type
  4368 ;;		None
  4369 ;; Return value:  Size  Location     Type
  4370 ;;                  1    wreg      void 
  4371 ;; Registers used:
  4372 ;;		None
  4373 ;; Tracked objects:
  4374 ;;		On entry : 0/0
  4375 ;;		On exit  : 0/0
  4376 ;;		Unchanged: 0/0
  4377 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4378 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4379 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4380 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4381 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4382 ;;Total ram usage:        0 bytes
  4383 ;; Hardware stack levels used:    1
  4384 ;; This function calls:
  4385 ;;		Nothing
  4386 ;; This function is called by:
  4387 ;;		_TMR2_Initialize
  4388 ;;		_TMR2_ISR
  4389 ;; This function uses a non-reentrant model
  4390 ;;
  4391                           
  4392                           
  4393                           ;psect for function _TMR2_DefaultInterruptHandler
  4394  07FF                     _TMR2_DefaultInterruptHandler:	
  4395                           
  4396                           ;incstack = 0
  4397                           ; Regs used in _TMR2_DefaultInterruptHandler: []
  4398  07FF  0008               	return
  4399  0800                     __end_of_TMR2_DefaultInterruptHandler:	
  4400                           
  4401                           	psect	text25
  4402  0B9A                     __ptext25:	
  4403 ;; *************** function _blankISR *****************
  4404 ;; Defined at:
  4405 ;;		line 253 in file "clock_functions.c"
  4406 ;; Parameters:    Size  Location     Type
  4407 ;;		None
  4408 ;; Auto vars:     Size  Location     Type
  4409 ;;		None
  4410 ;; Return value:  Size  Location     Type
  4411 ;;                  1    wreg      void 
  4412 ;; Registers used:
  4413 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4414 ;; Tracked objects:
  4415 ;;		On entry : 0/0
  4416 ;;		On exit  : 0/0
  4417 ;;		Unchanged: 0/0
  4418 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4419 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4420 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4421 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4422 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4423 ;;Total ram usage:        0 bytes
  4424 ;; Hardware stack levels used:    1
  4425 ;; Hardware stack levels required when called:    1
  4426 ;; This function calls:
  4427 ;;		_groundCathode
  4428 ;;		i1_TMR2_StopTimer
  4429 ;; This function is called by:
  4430 ;;		_startup
  4431 ;;		_wakeup
  4432 ;;		_TMR2_ISR
  4433 ;; This function uses a non-reentrant model
  4434 ;;
  4435                           
  4436                           
  4437                           ;psect for function _blankISR
  4438  0B9A                     _blankISR:	
  4439                           
  4440                           ;clock_functions.c: 260: TMR2_StopTimer();
  4441                           
  4442                           ;incstack = 0
  4443                           ; Regs used in _blankISR: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4444  0B9A  318A  22A8  318B   	fcall	i1_TMR2_StopTimer
  4445                           
  4446                           ;clock_functions.c: 263: TMR2 = 0;
  4447  0B9D  0020               	movlb	0	; select bank0
  4448  0B9E  019A               	clrf	26	;volatile
  4449                           
  4450                           ;clock_functions.c: 266: groundCathode();
  4451  0B9F  318B  23C4         	fcall	_groundCathode
  4452                           
  4453                           ;clock_functions.c: 269: mux_digit++;
  4454  0BA1  3001               	movlw	1
  4455  0BA2  0020               	movlb	0	; select bank0
  4456  0BA3  07EA               	addwf	_mux_digit,f	;volatile
  4457  0BA4  3000               	movlw	0
  4458  0BA5  3DEB               	addwfc	_mux_digit+1,f	;volatile
  4459  0BA6  0008               	return
  4460  0BA7                     __end_of_blankISR:	
  4461                           
  4462                           	psect	text26
  4463  0BC4                     __ptext26:	
  4464 ;; *************** function _groundCathode *****************
  4465 ;; Defined at:
  4466 ;;		line 961 in file "clock_functions.c"
  4467 ;; Parameters:    Size  Location     Type
  4468 ;;		None
  4469 ;; Auto vars:     Size  Location     Type
  4470 ;;		None
  4471 ;; Return value:  Size  Location     Type
  4472 ;;                  1    wreg      void 
  4473 ;; Registers used:
  4474 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  4475 ;; Tracked objects:
  4476 ;;		On entry : 0/0
  4477 ;;		On exit  : 0/0
  4478 ;;		Unchanged: 0/0
  4479 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4480 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4481 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4482 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4483 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4484 ;;Total ram usage:        0 bytes
  4485 ;; Hardware stack levels used:    1
  4486 ;; This function calls:
  4487 ;;		Nothing
  4488 ;; This function is called by:
  4489 ;;		_blankISR
  4490 ;; This function uses a non-reentrant model
  4491 ;;
  4492                           
  4493                           
  4494                           ;psect for function _groundCathode
  4495  0BC4                     _groundCathode:	
  4496                           
  4497                           ;clock_functions.c: 968: LATDbits.LATD7 = 1;
  4498                           
  4499                           ;incstack = 0
  4500                           ; Regs used in _groundCathode: [wreg+fsr1l+fsr1h+status,2+status,0]
  4501  0BC4  0022               	movlb	2	; select bank2
  4502  0BC5  178F               	bsf	15,7	;volatile
  4503                           
  4504                           ;clock_functions.c: 969: ParallelPort.BCD = mux_numeral[mux_digit];
  4505  0BC6  0020               	movlb	0	; select bank0
  4506  0BC7  356A               	lslf	_mux_digit,w	;volatile
  4507  0BC8  3EA0               	addlw	(low (_mux_numeral| 0))& (0+255)
  4508  0BC9  0086               	movwf	6
  4509  0BCA  0187               	clrf	7
  4510  0BCB  0022               	movlb	2	; select bank2
  4511  0BCC  080F               	movf	15,w	;volatile
  4512  0BCD  0601               	xorwf	1,w
  4513  0BCE  39F0               	andlw	-16
  4514  0BCF  0601               	xorwf	1,w
  4515  0BD0  008F               	movwf	15	;volatile
  4516                           
  4517                           ;clock_functions.c: 970: ParallelPort.BCO = 7;
  4518  0BD1  3070               	movlw	112
  4519  0BD2  048F               	iorwf	15,f	;volatile
  4520                           
  4521                           ;clock_functions.c: 971: LATDbits.LATD7 = 0;
  4522  0BD3  138F               	bcf	15,7	;volatile
  4523  0BD4  0008               	return
  4524  0BD5                     __end_of_groundCathode:	
  4525                           
  4526                           	psect	text27
  4527  0C0E                     __ptext27:	
  4528 ;; *************** function _TMR1_ISR *****************
  4529 ;; Defined at:
  4530 ;;		line 155 in file "mcc_generated_files/tmr1.c"
  4531 ;; Parameters:    Size  Location     Type
  4532 ;;		None
  4533 ;; Auto vars:     Size  Location     Type
  4534 ;;		None
  4535 ;; Return value:  Size  Location     Type
  4536 ;;                  1    wreg      void 
  4537 ;; Registers used:
  4538 ;;		wreg, status,2, status,0, pclath, cstack
  4539 ;; Tracked objects:
  4540 ;;		On entry : 0/0
  4541 ;;		On exit  : 0/0
  4542 ;;		Unchanged: 0/0
  4543 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4544 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4545 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4546 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4547 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4548 ;;Total ram usage:        0 bytes
  4549 ;; Hardware stack levels used:    1
  4550 ;; Hardware stack levels required when called:    3
  4551 ;; This function calls:
  4552 ;;		Absolute function
  4553 ;;		_TMR1_DefaultInterruptHandler
  4554 ;;		_sleepyTickISR
  4555 ;;		_tickISR
  4556 ;; This function is called by:
  4557 ;;		_INTERRUPT_InterruptManager
  4558 ;; This function uses a non-reentrant model
  4559 ;;
  4560                           
  4561                           
  4562                           ;psect for function _TMR1_ISR
  4563  0C0E                     _TMR1_ISR:	
  4564                           
  4565                           ;tmr1.c: 159: PIR1bits.TMR1IF = 0;
  4566                           
  4567                           ;incstack = 0
  4568                           ; Regs used in _TMR1_ISR: [wreg+status,2+status,0+pclath+cstack]
  4569  0C0E  0020               	movlb	0	; select bank0
  4570  0C0F  1011               	bcf	17,0	;volatile
  4571                           
  4572                           ;tmr1.c: 161: TMR1H = (timer1ReloadVal >> 8);
  4573  0C10  0021               	movlb	1	; select bank1
  4574  0C11  0843               	movf	(_timer1ReloadVal+1)^(0+128),w	;volatile
  4575  0C12  0020               	movlb	0	; select bank0
  4576  0C13  0097               	movwf	23	;volatile
  4577                           
  4578                           ;tmr1.c: 162: TMR1L = timer1ReloadVal;
  4579  0C14  0021               	movlb	1	; select bank1
  4580  0C15  0842               	movf	_timer1ReloadVal^(0+128),w	;volatile
  4581  0C16  0020               	movlb	0	; select bank0
  4582  0C17  0096               	movwf	22	;volatile
  4583                           
  4584                           ;tmr1.c: 164: if(TMR1_InterruptHandler)
  4585  0C18  0021               	movlb	1	; select bank1
  4586  0C19  0840               	movf	_TMR1_InterruptHandler^(0+128),w
  4587  0C1A  0441               	iorwf	(_TMR1_InterruptHandler+1)^(0+128),w
  4588  0C1B  1903               	btfsc	3,2
  4589  0C1C  0008               	return
  4590                           
  4591                           ;tmr1.c: 165: {
  4592                           ;tmr1.c: 166: TMR1_InterruptHandler();
  4593  0C1D  0841               	movf	(_TMR1_InterruptHandler+1)^(0+128),w
  4594  0C1E  008A               	movwf	10
  4595  0C1F  0840               	movf	_TMR1_InterruptHandler^(0+128),w
  4596  0C20  000A               	callw
  4597  0C21  318C               	pagesel	$
  4598  0C22  0008               	return
  4599  0C23                     __end_of_TMR1_ISR:	
  4600                           
  4601                           	psect	text28
  4602  0B40                     __ptext28:	
  4603 ;; *************** function _sleepyTickISR *****************
  4604 ;; Defined at:
  4605 ;;		line 983 in file "clock_functions.c"
  4606 ;; Parameters:    Size  Location     Type
  4607 ;;		None
  4608 ;; Auto vars:     Size  Location     Type
  4609 ;;		None
  4610 ;; Return value:  Size  Location     Type
  4611 ;;                  1    wreg      void 
  4612 ;; Registers used:
  4613 ;;		wreg
  4614 ;; Tracked objects:
  4615 ;;		On entry : 0/0
  4616 ;;		On exit  : 0/0
  4617 ;;		Unchanged: 0/0
  4618 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4619 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4620 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4621 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4622 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4623 ;;Total ram usage:        0 bytes
  4624 ;; Hardware stack levels used:    1
  4625 ;; This function calls:
  4626 ;;		Nothing
  4627 ;; This function is called by:
  4628 ;;		_shutdown
  4629 ;;		_TMR1_ISR
  4630 ;; This function uses a non-reentrant model
  4631 ;;
  4632                           
  4633                           
  4634                           ;psect for function _sleepyTickISR
  4635  0B40                     _sleepyTickISR:	
  4636                           
  4637                           ;clock_functions.c: 989: sleepy_seconds++;
  4638                           
  4639                           ;incstack = 0
  4640                           ; Regs used in _sleepyTickISR: [wreg]
  4641  0B40  3001               	movlw	1
  4642  0B41  0020               	movlb	0	; select bank0
  4643  0B42  07D7               	addwf	_sleepy_seconds,f	;volatile
  4644  0B43  3000               	movlw	0
  4645  0B44  1803               	skipnc
  4646  0B45  3001               	movlw	1
  4647  0B46  07D8               	addwf	_sleepy_seconds+1,f	;volatile
  4648  0B47  3000               	movlw	0
  4649  0B48  1803               	skipnc
  4650  0B49  3001               	movlw	1
  4651  0B4A  07D9               	addwf	_sleepy_seconds+2,f	;volatile
  4652  0B4B  0008               	return
  4653  0B4C                     __end_of_sleepyTickISR:	
  4654                           
  4655                           	psect	text29
  4656  0003                     __ptext29:	
  4657 ;; *************** function _TMR1_DefaultInterruptHandler *****************
  4658 ;; Defined at:
  4659 ;;		line 175 in file "mcc_generated_files/tmr1.c"
  4660 ;; Parameters:    Size  Location     Type
  4661 ;;		None
  4662 ;; Auto vars:     Size  Location     Type
  4663 ;;		None
  4664 ;; Return value:  Size  Location     Type
  4665 ;;                  1    wreg      void 
  4666 ;; Registers used:
  4667 ;;		None
  4668 ;; Tracked objects:
  4669 ;;		On entry : 0/0
  4670 ;;		On exit  : 0/0
  4671 ;;		Unchanged: 0/0
  4672 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4673 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4674 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4675 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4676 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4677 ;;Total ram usage:        0 bytes
  4678 ;; Hardware stack levels used:    1
  4679 ;; This function calls:
  4680 ;;		Nothing
  4681 ;; This function is called by:
  4682 ;;		_TMR1_Initialize
  4683 ;;		_TMR1_ISR
  4684 ;; This function uses a non-reentrant model
  4685 ;;
  4686                           
  4687                           
  4688                           ;psect for function _TMR1_DefaultInterruptHandler
  4689  0003                     _TMR1_DefaultInterruptHandler:	
  4690                           
  4691                           ;incstack = 0
  4692                           ; Regs used in _TMR1_DefaultInterruptHandler: []
  4693  0003  0008               	return
  4694  0004                     __end_of_TMR1_DefaultInterruptHandler:	
  4695                           
  4696                           	psect	text30
  4697  07D3                     __ptext30:	
  4698 ;; *************** function _tickISR *****************
  4699 ;; Defined at:
  4700 ;;		line 218 in file "clock_functions.c"
  4701 ;; Parameters:    Size  Location     Type
  4702 ;;		None
  4703 ;; Auto vars:     Size  Location     Type
  4704 ;;		None
  4705 ;; Return value:  Size  Location     Type
  4706 ;;                  1    wreg      void 
  4707 ;; Registers used:
  4708 ;;		wreg, status,2, status,0, pclath, cstack
  4709 ;; Tracked objects:
  4710 ;;		On entry : 0/0
  4711 ;;		On exit  : 0/0
  4712 ;;		Unchanged: 0/0
  4713 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4714 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4715 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4716 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4717 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4718 ;;Total ram usage:        0 bytes
  4719 ;; Hardware stack levels used:    1
  4720 ;; Hardware stack levels required when called:    2
  4721 ;; This function calls:
  4722 ;;		_isolateDigits
  4723 ;;		_timeParse
  4724 ;;		_twentyFourParse
  4725 ;;		_updateDisplay
  4726 ;; This function is called by:
  4727 ;;		_startup
  4728 ;;		_wakeup
  4729 ;;		_TMR1_ISR
  4730 ;; This function uses a non-reentrant model
  4731 ;;
  4732                           
  4733                           
  4734                           ;psect for function _tickISR
  4735  07D3                     _tickISR:	
  4736                           
  4737                           ;clock_functions.c: 225: LATEbits.LATE1 = !(LATEbits.LATE1);
  4738                           
  4739                           ;incstack = 0
  4740                           ; Regs used in _tickISR: [wreg+status,2+status,0+pclath+cstack]
  4741  07D3  1003               	clrc
  4742  07D4  0022               	movlb	2	; select bank2
  4743  07D5  1C90               	btfss	16,1	;volatile
  4744  07D6  1403               	setc
  4745  07D7  1C03               	btfss	3,0
  4746  07D8  2FDC               	goto	u343_20
  4747  07D9  0022               	movlb	2	; select bank2
  4748  07DA  1490               	bsf	16,1	;volatile
  4749  07DB  2FDE               	goto	i1l3574
  4750  07DC                     u343_20:	
  4751  07DC  0022               	movlb	2	; select bank2
  4752  07DD  1090               	bcf	16,1	;volatile
  4753  07DE                     i1l3574:	
  4754                           
  4755                           ;clock_functions.c: 228: LATCbits.LATC3 = LATEbits.LATE1;
  4756  07DE  1C90               	btfss	16,1	;volatile
  4757  07DF  2FE3               	goto	u345_20
  4758  07E0  0022               	movlb	2	; select bank2
  4759  07E1  158E               	bsf	14,3	;volatile
  4760  07E2  2FE5               	goto	i1l3576
  4761  07E3                     u345_20:	
  4762  07E3  0022               	movlb	2	; select bank2
  4763  07E4  118E               	bcf	14,3	;volatile
  4764  07E5                     i1l3576:	
  4765                           
  4766                           ;clock_functions.c: 229: LATCbits.LATC4 = LATEbits.LATE1;
  4767  07E5  1C90               	btfss	16,1	;volatile
  4768  07E6  2FEA               	goto	u347_20
  4769  07E7  0022               	movlb	2	; select bank2
  4770  07E8  160E               	bsf	14,4	;volatile
  4771  07E9  2FEC               	goto	i1l3578
  4772  07EA                     u347_20:	
  4773  07EA  0022               	movlb	2	; select bank2
  4774  07EB  120E               	bcf	14,4	;volatile
  4775  07EC                     i1l3578:	
  4776                           
  4777                           ;clock_functions.c: 232: if (PORTBbits.RB0 == 1) {
  4778  07EC  0020               	movlb	0	; select bank0
  4779  07ED  1C0D               	btfss	13,0	;volatile
  4780  07EE  2FF3               	goto	i1l3582
  4781                           
  4782                           ;clock_functions.c: 235: seconds++;
  4783  07EF  3001               	movlw	1
  4784  07F0  07E6               	addwf	_seconds,f	;volatile
  4785  07F1  3000               	movlw	0
  4786  07F2  3DE7               	addwfc	_seconds+1,f	;volatile
  4787  07F3                     i1l3582:	
  4788                           
  4789                           ;clock_functions.c: 237: }
  4790                           ;clock_functions.c: 240: timeParse();
  4791  07F3  318C  246D  3187   	fcall	_timeParse
  4792                           
  4793                           ;clock_functions.c: 241: twentyFourParse();
  4794  07F6  318C  24CE  3187   	fcall	_twentyFourParse
  4795                           
  4796                           ;clock_functions.c: 242: isolateDigits();
  4797  07F9  3185  2543  3187   	fcall	_isolateDigits
  4798                           
  4799                           ;clock_functions.c: 243: updateDisplay();
  4800  07FC  318D  253A         	fcall	_updateDisplay
  4801  07FE  0008               	return
  4802  07FF                     __end_of_tickISR:	
  4803                           
  4804                           	psect	text31
  4805  0C6D                     __ptext31:	
  4806 ;; *************** function _timeParse *****************
  4807 ;; Defined at:
  4808 ;;		line 640 in file "clock_functions.c"
  4809 ;; Parameters:    Size  Location     Type
  4810 ;;		None
  4811 ;; Auto vars:     Size  Location     Type
  4812 ;;		None
  4813 ;; Return value:  Size  Location     Type
  4814 ;;                  1    wreg      void 
  4815 ;; Registers used:
  4816 ;;		wreg, status,2, status,0
  4817 ;; Tracked objects:
  4818 ;;		On entry : 0/0
  4819 ;;		On exit  : 0/0
  4820 ;;		Unchanged: 0/0
  4821 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4822 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4823 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4824 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4825 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4826 ;;Total ram usage:        0 bytes
  4827 ;; Hardware stack levels used:    1
  4828 ;; This function calls:
  4829 ;;		Nothing
  4830 ;; This function is called by:
  4831 ;;		_tickISR
  4832 ;; This function uses a non-reentrant model
  4833 ;;
  4834                           
  4835                           
  4836                           ;psect for function _timeParse
  4837  0C6D                     _timeParse:	
  4838                           
  4839                           ;clock_functions.c: 647: if (seconds == 60) {
  4840                           
  4841                           ;incstack = 0
  4842                           ; Regs used in _timeParse: [wreg+status,2+status,0]
  4843  0C6D  303C               	movlw	60
  4844  0C6E  0020               	movlb	0	; select bank0
  4845  0C6F  0666               	xorwf	_seconds,w	;volatile
  4846  0C70  0467               	iorwf	_seconds+1,w	;volatile
  4847  0C71  1D03               	btfss	3,2
  4848  0C72  2C79               	goto	i1l3358
  4849                           
  4850                           ;clock_functions.c: 649: seconds = 0;
  4851  0C73  01E6               	clrf	_seconds	;volatile
  4852  0C74  01E7               	clrf	_seconds+1	;volatile
  4853                           
  4854                           ;clock_functions.c: 650: minutes++;
  4855  0C75  3001               	movlw	1
  4856  0C76  07E4               	addwf	_minutes,f	;volatile
  4857  0C77  3000               	movlw	0
  4858  0C78  3DE5               	addwfc	_minutes+1,f	;volatile
  4859  0C79                     i1l3358:	
  4860                           
  4861                           ;clock_functions.c: 652: }
  4862                           ;clock_functions.c: 655: if (minutes == 60) {
  4863  0C79  303C               	movlw	60
  4864  0C7A  0664               	xorwf	_minutes,w	;volatile
  4865  0C7B  0465               	iorwf	_minutes+1,w	;volatile
  4866  0C7C  1D03               	btfss	3,2
  4867  0C7D  2C84               	goto	i1l3364
  4868                           
  4869                           ;clock_functions.c: 657: minutes = 0;
  4870  0C7E  01E4               	clrf	_minutes	;volatile
  4871  0C7F  01E5               	clrf	_minutes+1	;volatile
  4872                           
  4873                           ;clock_functions.c: 658: hours++;
  4874  0C80  3001               	movlw	1
  4875  0C81  07E2               	addwf	_hours,f	;volatile
  4876  0C82  3000               	movlw	0
  4877  0C83  3DE3               	addwfc	_hours+1,f	;volatile
  4878  0C84                     i1l3364:	
  4879                           
  4880                           ;clock_functions.c: 660: }
  4881                           ;clock_functions.c: 663: if (hours == 24) {
  4882  0C84  3018               	movlw	24
  4883  0C85  0662               	xorwf	_hours,w	;volatile
  4884  0C86  0463               	iorwf	_hours+1,w	;volatile
  4885  0C87  1D03               	btfss	3,2
  4886  0C88  0008               	return
  4887                           
  4888                           ;clock_functions.c: 665: hours = 0;
  4889  0C89  01E2               	clrf	_hours	;volatile
  4890  0C8A  01E3               	clrf	_hours+1	;volatile
  4891  0C8B  0008               	return
  4892  0C8C                     __end_of_timeParse:	
  4893                           
  4894                           	psect	text32
  4895  0BB4                     __ptext32:	
  4896 ;; *************** function _TMR0_ISR *****************
  4897 ;; Defined at:
  4898 ;;		line 108 in file "mcc_generated_files/tmr0.c"
  4899 ;; Parameters:    Size  Location     Type
  4900 ;;		None
  4901 ;; Auto vars:     Size  Location     Type
  4902 ;;		None
  4903 ;; Return value:  Size  Location     Type
  4904 ;;                  1    wreg      void 
  4905 ;; Registers used:
  4906 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4907 ;; Tracked objects:
  4908 ;;		On entry : 0/0
  4909 ;;		On exit  : 0/0
  4910 ;;		Unchanged: 0/0
  4911 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4912 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4913 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4914 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4915 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4916 ;;Total ram usage:        0 bytes
  4917 ;; Hardware stack levels used:    1
  4918 ;; Hardware stack levels required when called:    3
  4919 ;; This function calls:
  4920 ;;		Absolute function
  4921 ;;		_TMR0_DefaultInterruptHandler
  4922 ;;		_muxISR
  4923 ;; This function is called by:
  4924 ;;		_INTERRUPT_InterruptManager
  4925 ;; This function uses a non-reentrant model
  4926 ;;
  4927                           
  4928                           
  4929                           ;psect for function _TMR0_ISR
  4930  0BB4                     _TMR0_ISR:	
  4931                           
  4932                           ;tmr0.c: 112: INTCONbits.TMR0IF = 0;
  4933                           
  4934                           ;incstack = 0
  4935                           ; Regs used in _TMR0_ISR: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4936  0BB4  110B               	bcf	11,2	;volatile
  4937                           
  4938                           ;tmr0.c: 114: TMR0 = timer0ReloadVal;
  4939  0BB5  0021               	movlb	1	; select bank1
  4940  0BB6  0846               	movf	_timer0ReloadVal^(0+128),w	;volatile
  4941  0BB7  0020               	movlb	0	; select bank0
  4942  0BB8  0095               	movwf	21	;volatile
  4943                           
  4944                           ;tmr0.c: 116: if(TMR0_InterruptHandler)
  4945  0BB9  0021               	movlb	1	; select bank1
  4946  0BBA  0844               	movf	_TMR0_InterruptHandler^(0+128),w
  4947  0BBB  0445               	iorwf	(_TMR0_InterruptHandler+1)^(0+128),w
  4948  0BBC  1903               	btfsc	3,2
  4949  0BBD  0008               	return
  4950                           
  4951                           ;tmr0.c: 117: {
  4952                           ;tmr0.c: 118: TMR0_InterruptHandler();
  4953  0BBE  0845               	movf	(_TMR0_InterruptHandler+1)^(0+128),w
  4954  0BBF  008A               	movwf	10
  4955  0BC0  0844               	movf	_TMR0_InterruptHandler^(0+128),w
  4956  0BC1  000A               	callw
  4957  0BC2  318B               	pagesel	$
  4958  0BC3  0008               	return
  4959  0BC4                     __end_of_TMR0_ISR:	
  4960                           
  4961                           	psect	text33
  4962  0002                     __ptext33:	
  4963 ;; *************** function _TMR0_DefaultInterruptHandler *****************
  4964 ;; Defined at:
  4965 ;;		line 129 in file "mcc_generated_files/tmr0.c"
  4966 ;; Parameters:    Size  Location     Type
  4967 ;;		None
  4968 ;; Auto vars:     Size  Location     Type
  4969 ;;		None
  4970 ;; Return value:  Size  Location     Type
  4971 ;;                  1    wreg      void 
  4972 ;; Registers used:
  4973 ;;		None
  4974 ;; Tracked objects:
  4975 ;;		On entry : 0/0
  4976 ;;		On exit  : 0/0
  4977 ;;		Unchanged: 0/0
  4978 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4979 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4980 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4981 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4982 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4983 ;;Total ram usage:        0 bytes
  4984 ;; Hardware stack levels used:    1
  4985 ;; This function calls:
  4986 ;;		Nothing
  4987 ;; This function is called by:
  4988 ;;		_TMR0_Initialize
  4989 ;;		_TMR0_ISR
  4990 ;; This function uses a non-reentrant model
  4991 ;;
  4992                           
  4993                           
  4994                           ;psect for function _TMR0_DefaultInterruptHandler
  4995  0002                     _TMR0_DefaultInterruptHandler:	
  4996                           
  4997                           ;incstack = 0
  4998                           ; Regs used in _TMR0_DefaultInterruptHandler: []
  4999  0002  0008               	return
  5000  0003                     __end_of_TMR0_DefaultInterruptHandler:	
  5001                           
  5002                           	psect	text34
  5003  0D5F                     __ptext34:	
  5004 ;; *************** function _muxISR *****************
  5005 ;; Defined at:
  5006 ;;		line 167 in file "clock_functions.c"
  5007 ;; Parameters:    Size  Location     Type
  5008 ;;		None
  5009 ;; Auto vars:     Size  Location     Type
  5010 ;;		None
  5011 ;; Return value:  Size  Location     Type
  5012 ;;                  1    wreg      void 
  5013 ;; Registers used:
  5014 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5015 ;; Tracked objects:
  5016 ;;		On entry : 0/0
  5017 ;;		On exit  : 0/0
  5018 ;;		Unchanged: 0/0
  5019 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5020 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5021 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5022 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5023 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5024 ;;Total ram usage:        0 bytes
  5025 ;; Hardware stack levels used:    1
  5026 ;; Hardware stack levels required when called:    2
  5027 ;; This function calls:
  5028 ;;		_updateParallelPort
  5029 ;;		i1_TMR2_StartTimer
  5030 ;; This function is called by:
  5031 ;;		_startup
  5032 ;;		_wakeup
  5033 ;;		_TMR0_ISR
  5034 ;; This function uses a non-reentrant model
  5035 ;;
  5036                           
  5037                           
  5038                           ;psect for function _muxISR
  5039  0D5F                     _muxISR:	
  5040                           
  5041                           ;clock_functions.c: 174: LATDbits.LATD7 = 1;
  5042                           
  5043                           ;incstack = 0
  5044                           ; Regs used in _muxISR: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5045  0D5F  0022               	movlb	2	; select bank2
  5046  0D60  178F               	bsf	15,7	;volatile
  5047                           
  5048                           ;clock_functions.c: 177: if (mux_digit == 6) {
  5049  0D61  3006               	movlw	6
  5050  0D62  0020               	movlb	0	; select bank0
  5051  0D63  066A               	xorwf	_mux_digit,w	;volatile
  5052  0D64  046B               	iorwf	_mux_digit+1,w	;volatile
  5053  0D65  1D03               	btfss	3,2
  5054  0D66  2D69               	goto	i1l3558
  5055                           
  5056                           ;clock_functions.c: 179: mux_digit = 0;
  5057  0D67  01EA               	clrf	_mux_digit	;volatile
  5058  0D68  01EB               	clrf	_mux_digit+1	;volatile
  5059  0D69                     i1l3558:	
  5060                           
  5061                           ;clock_functions.c: 181: }
  5062                           ;clock_functions.c: 185: if (PORTCbits.RC6 == 1 && mux_digit == 5 && hours > 11) {
  5063  0D69  1F0E               	btfss	14,6	;volatile
  5064  0D6A  2D7A               	goto	i1l604
  5065  0D6B  3005               	movlw	5
  5066  0D6C  066A               	xorwf	_mux_digit,w	;volatile
  5067  0D6D  046B               	iorwf	_mux_digit+1,w	;volatile
  5068  0D6E  1D03               	btfss	3,2
  5069  0D6F  2D7A               	goto	i1l604
  5070  0D70  3000               	movlw	0
  5071  0D71  0263               	subwf	_hours+1,w	;volatile
  5072  0D72  300C               	movlw	12
  5073  0D73  1903               	skipnz
  5074  0D74  0262               	subwf	_hours,w	;volatile
  5075  0D75  1C03               	skipc
  5076  0D76  2D7A               	goto	i1l604
  5077                           
  5078                           ;clock_functions.c: 187: LATCbits.LATC2 = 1;
  5079  0D77  0022               	movlb	2	; select bank2
  5080  0D78  150E               	bsf	14,2	;volatile
  5081                           
  5082                           ;clock_functions.c: 189: }
  5083  0D79  2D7C               	goto	i1l3566
  5084  0D7A                     i1l604:	
  5085                           
  5086                           ;clock_functions.c: 191: else {
  5087                           ;clock_functions.c: 193: LATCbits.LATC2 = 0;
  5088  0D7A  0022               	movlb	2	; select bank2
  5089  0D7B  110E               	bcf	14,2	;volatile
  5090  0D7C                     i1l3566:	
  5091                           
  5092                           ;clock_functions.c: 195: }
  5093                           ;clock_functions.c: 199: updateParallelPort();
  5094  0D7C  318C  2439  318D   	fcall	_updateParallelPort
  5095                           
  5096                           ;clock_functions.c: 202: LATDbits.LATD7 = 0;
  5097  0D7F  0022               	movlb	2	; select bank2
  5098  0D80  138F               	bcf	15,7	;volatile
  5099                           
  5100                           ;clock_functions.c: 205: TMR2_StartTimer();
  5101  0D81  318A  22AB         	fcall	i1_TMR2_StartTimer
  5102  0D83  0008               	return
  5103  0D84                     __end_of_muxISR:	
  5104                           
  5105                           	psect	text35
  5106  0C39                     __ptext35:	
  5107 ;; *************** function _updateParallelPort *****************
  5108 ;; Defined at:
  5109 ;;		line 574 in file "clock_functions.c"
  5110 ;; Parameters:    Size  Location     Type
  5111 ;;		None
  5112 ;; Auto vars:     Size  Location     Type
  5113 ;;		None
  5114 ;; Return value:  Size  Location     Type
  5115 ;;                  1    wreg      void 
  5116 ;; Registers used:
  5117 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5118 ;; Tracked objects:
  5119 ;;		On entry : 0/0
  5120 ;;		On exit  : 0/0
  5121 ;;		Unchanged: 0/0
  5122 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5123 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5124 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5125 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5126 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5127 ;;Total ram usage:        1 bytes
  5128 ;; Hardware stack levels used:    1
  5129 ;; Hardware stack levels required when called:    1
  5130 ;; This function calls:
  5131 ;;		_muxDigitCompensation
  5132 ;; This function is called by:
  5133 ;;		_muxISR
  5134 ;; This function uses a non-reentrant model
  5135 ;;
  5136                           
  5137                           
  5138                           ;psect for function _updateParallelPort
  5139  0C39                     _updateParallelPort:	
  5140                           
  5141                           ;clock_functions.c: 580: muxDigitCompensation();
  5142                           
  5143                           ;incstack = 0
  5144                           ; Regs used in _updateParallelPort: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5145  0C39  318E  2677         	fcall	_muxDigitCompensation
  5146                           
  5147                           ;clock_functions.c: 582: ParallelPort.BCO = mux_digit_compensated;
  5148  0C3B  0020               	movlb	0	; select bank0
  5149  0C3C  0868               	movf	_mux_digit_compensated,w	;volatile
  5150  0C3D  00F0               	movwf	??_updateParallelPort
  5151  0C3E  0EF0               	swapf	??_updateParallelPort,f
  5152  0C3F  0022               	movlb	2	; select bank2
  5153  0C40  080F               	movf	15,w	;volatile
  5154  0C41  0670               	xorwf	??_updateParallelPort,w
  5155  0C42  398F               	andlw	-113
  5156  0C43  0670               	xorwf	??_updateParallelPort,w
  5157  0C44  008F               	movwf	15	;volatile
  5158                           
  5159                           ;clock_functions.c: 583: ParallelPort.BCD = mux_numeral[mux_digit];
  5160  0C45  0020               	movlb	0	; select bank0
  5161  0C46  356A               	lslf	_mux_digit,w	;volatile
  5162  0C47  3EA0               	addlw	(low (_mux_numeral| 0))& (0+255)
  5163  0C48  0086               	movwf	6
  5164  0C49  0187               	clrf	7
  5165  0C4A  0022               	movlb	2	; select bank2
  5166  0C4B  080F               	movf	15,w	;volatile
  5167  0C4C  0601               	xorwf	1,w
  5168  0C4D  39F0               	andlw	-16
  5169  0C4E  0601               	xorwf	1,w
  5170  0C4F  008F               	movwf	15	;volatile
  5171  0C50  0008               	return
  5172  0C51                     __end_of_updateParallelPort:	
  5173                           
  5174                           	psect	text36
  5175  0E77                     __ptext36:	
  5176 ;; *************** function _muxDigitCompensation *****************
  5177 ;; Defined at:
  5178 ;;		line 524 in file "clock_functions.c"
  5179 ;; Parameters:    Size  Location     Type
  5180 ;;		None
  5181 ;; Auto vars:     Size  Location     Type
  5182 ;;		None
  5183 ;; Return value:  Size  Location     Type
  5184 ;;                  1    wreg      void 
  5185 ;; Registers used:
  5186 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  5187 ;; Tracked objects:
  5188 ;;		On entry : 0/0
  5189 ;;		On exit  : 0/0
  5190 ;;		Unchanged: 0/0
  5191 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5192 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5193 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5194 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5195 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5196 ;;Total ram usage:        0 bytes
  5197 ;; Hardware stack levels used:    1
  5198 ;; This function calls:
  5199 ;;		Nothing
  5200 ;; This function is called by:
  5201 ;;		_updateParallelPort
  5202 ;; This function uses a non-reentrant model
  5203 ;;
  5204                           
  5205                           
  5206                           ;psect for function _muxDigitCompensation
  5207  0E77                     _muxDigitCompensation:	
  5208                           
  5209                           ;clock_functions.c: 532: switch(mux_digit) {
  5210                           
  5211                           ;incstack = 0
  5212                           ; Regs used in _muxDigitCompensation: [wreg-fsr0h+status,2+status,0]
  5213  0E77  2E9F               	goto	i1l3216
  5214  0E78                     i1l3200:	
  5215                           ;clock_functions.c: 534: case 0:
  5216                           
  5217                           
  5218                           ;clock_functions.c: 535: mux_digit_compensated = 0;
  5219  0E78  0020               	movlb	0	; select bank0
  5220  0E79  01E8               	clrf	_mux_digit_compensated	;volatile
  5221  0E7A  01E9               	clrf	_mux_digit_compensated+1	;volatile
  5222                           
  5223                           ;clock_functions.c: 536: break;
  5224  0E7B  0008               	return
  5225  0E7C                     i1l3202:	
  5226                           ;clock_functions.c: 538: case 1:
  5227                           
  5228                           
  5229                           ;clock_functions.c: 539: mux_digit_compensated = 4;
  5230  0E7C  3004               	movlw	4
  5231  0E7D  00E8               	movwf	_mux_digit_compensated	;volatile
  5232  0E7E  3000               	movlw	0
  5233  0E7F  00E9               	movwf	_mux_digit_compensated+1	;volatile
  5234                           
  5235                           ;clock_functions.c: 540: break;
  5236  0E80  0008               	return
  5237  0E81                     i1l3204:	
  5238                           ;clock_functions.c: 542: case 2:
  5239                           
  5240                           
  5241                           ;clock_functions.c: 543: mux_digit_compensated = 2;
  5242  0E81  3002               	movlw	2
  5243  0E82  00E8               	movwf	_mux_digit_compensated	;volatile
  5244  0E83  3000               	movlw	0
  5245  0E84  00E9               	movwf	_mux_digit_compensated+1	;volatile
  5246                           
  5247                           ;clock_functions.c: 544: break;
  5248  0E85  0008               	return
  5249  0E86                     i1l3206:	
  5250                           ;clock_functions.c: 546: case 3:
  5251                           
  5252                           
  5253                           ;clock_functions.c: 547: mux_digit_compensated = 6;
  5254  0E86  3006               	movlw	6
  5255  0E87  00E8               	movwf	_mux_digit_compensated	;volatile
  5256  0E88  3000               	movlw	0
  5257  0E89  00E9               	movwf	_mux_digit_compensated+1	;volatile
  5258                           
  5259                           ;clock_functions.c: 548: break;
  5260  0E8A  0008               	return
  5261  0E8B                     i1l3208:	
  5262                           ;clock_functions.c: 550: case 4:
  5263                           
  5264                           
  5265                           ;clock_functions.c: 551: mux_digit_compensated = 1;
  5266  0E8B  3001               	movlw	1
  5267  0E8C  00E8               	movwf	_mux_digit_compensated	;volatile
  5268  0E8D  3000               	movlw	0
  5269  0E8E  00E9               	movwf	_mux_digit_compensated+1	;volatile
  5270                           
  5271                           ;clock_functions.c: 552: break;
  5272  0E8F  0008               	return
  5273  0E90                     i1l3210:	
  5274                           ;clock_functions.c: 554: case 5:
  5275                           
  5276                           
  5277                           ;clock_functions.c: 555: mux_digit_compensated = 5;
  5278  0E90  3005               	movlw	5
  5279  0E91  00E8               	movwf	_mux_digit_compensated	;volatile
  5280  0E92  3000               	movlw	0
  5281  0E93  00E9               	movwf	_mux_digit_compensated+1	;volatile
  5282                           
  5283                           ;clock_functions.c: 556: break;
  5284  0E94  0008               	return
  5285  0E95                     i1l3212:	
  5286                           ;clock_functions.c: 558: case 6:
  5287                           
  5288                           
  5289                           ;clock_functions.c: 559: mux_digit_compensated = 3;
  5290  0E95  3003               	movlw	3
  5291  0E96  00E8               	movwf	_mux_digit_compensated	;volatile
  5292  0E97  3000               	movlw	0
  5293  0E98  00E9               	movwf	_mux_digit_compensated+1	;volatile
  5294                           
  5295                           ;clock_functions.c: 560: break;
  5296  0E99  0008               	return
  5297  0E9A                     i1l3214:	
  5298                           ;clock_functions.c: 562: default:
  5299                           
  5300                           
  5301                           ;clock_functions.c: 563: mux_digit_compensated = 7;
  5302  0E9A  3007               	movlw	7
  5303  0E9B  00E8               	movwf	_mux_digit_compensated	;volatile
  5304  0E9C  3000               	movlw	0
  5305  0E9D  00E9               	movwf	_mux_digit_compensated+1	;volatile
  5306                           
  5307                           ;clock_functions.c: 564: }
  5308  0E9E  0008               	return
  5309  0E9F                     i1l3216:	
  5310                           
  5311                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5312                           ; Switch size 1, requested type "space"
  5313                           ; Number of cases is 1, Range of values is 0 to 0
  5314                           ; switch strategies available:
  5315                           ; Name         Instructions Cycles
  5316                           ; simple_byte            4     3 (average)
  5317                           ; direct_byte            8     6 (fixed)
  5318                           ; jumptable            260     6 (fixed)
  5319                           ;	Chosen strategy is simple_byte
  5320  0E9F  0020               	movlb	0	; select bank0
  5321  0EA0  086B               	movf	_mux_digit+1,w	;volatile
  5322  0EA1  3A00               	xorlw	0	; case 0
  5323  0EA2  1903               	skipnz
  5324  0EA3  2EA5               	goto	i1l3860
  5325  0EA4  2E9A               	goto	i1l3214
  5326  0EA5                     i1l3860:	
  5327                           
  5328                           ; Switch size 1, requested type "space"
  5329                           ; Number of cases is 7, Range of values is 0 to 6
  5330                           ; switch strategies available:
  5331                           ; Name         Instructions Cycles
  5332                           ; direct_byte           20     6 (fixed)
  5333                           ; simple_byte           22    12 (average)
  5334                           ; jumptable            260     6 (fixed)
  5335                           ;	Chosen strategy is direct_byte
  5336  0EA5  086A               	movf	_mux_digit,w	;volatile
  5337  0EA6  0084               	movwf	4
  5338  0EA7  3007               	movlw	7
  5339  0EA8  0204               	subwf	4,w
  5340  0EA9  1803               	skipnc
  5341  0EAA  2E9A               	goto	i1l3214
  5342  0EAB  3188               	movlp	high i1S3862
  5343  0EAC  3504               	lslf	4,w
  5344  0EAD  3E00               	addlw	low i1S3862
  5345  0EAE  0082               	movwf	2
  5346  0EAF  0008               	return
  5347  0EB0                     __end_of_muxDigitCompensation:	
  5348                           
  5349                           	psect	swtext1
  5350  0800                     __pswtext1:	
  5351  0800                     i1S3862:	
  5352  0800  318E  2E78         	ljmp	i1l3200
  5353  0802  318E  2E7C         	ljmp	i1l3202
  5354  0804  318E  2E81         	ljmp	i1l3204
  5355  0806  318E  2E86         	ljmp	i1l3206
  5356  0808  318E  2E8B         	ljmp	i1l3208
  5357  080A  318E  2E90         	ljmp	i1l3210
  5358  080C  318E  2E95         	ljmp	i1l3212
  5359                           
  5360                           	psect	text37
  5361  0D16                     __ptext37:	
  5362 ;; *************** function _PIN_MANAGER_IOC *****************
  5363 ;; Defined at:
  5364 ;;		line 138 in file "mcc_generated_files/pin_manager.c"
  5365 ;; Parameters:    Size  Location     Type
  5366 ;;		None
  5367 ;; Auto vars:     Size  Location     Type
  5368 ;;		None
  5369 ;; Return value:  Size  Location     Type
  5370 ;;                  1    wreg      void 
  5371 ;; Registers used:
  5372 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5373 ;; Tracked objects:
  5374 ;;		On entry : 0/0
  5375 ;;		On exit  : 0/0
  5376 ;;		Unchanged: 0/0
  5377 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5378 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5379 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5380 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5381 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5382 ;;Total ram usage:        0 bytes
  5383 ;; Hardware stack levels used:    1
  5384 ;; Hardware stack levels required when called:    8
  5385 ;; This function calls:
  5386 ;;		_IOCBF0_ISR
  5387 ;;		_IOCBF1_ISR
  5388 ;;		_IOCBF2_ISR
  5389 ;;		_IOCBF3_ISR
  5390 ;;		_IOCBF4_ISR
  5391 ;;		_IOCBF5_ISR
  5392 ;; This function is called by:
  5393 ;;		_INTERRUPT_InterruptManager
  5394 ;; This function uses a non-reentrant model
  5395 ;;
  5396                           
  5397                           
  5398                           ;psect for function _PIN_MANAGER_IOC
  5399  0D16                     _PIN_MANAGER_IOC:	
  5400                           
  5401                           ;pin_manager.c: 141: if(IOCBFbits.IOCBF0 == 1)
  5402                           
  5403                           ;incstack = 0
  5404                           ; Regs used in _PIN_MANAGER_IOC: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5405  0D16  0027               	movlb	7	; select bank7
  5406  0D17  1C16               	btfss	22,0	;volatile
  5407  0D18  2D1C               	goto	i1l3628
  5408                           
  5409                           ;pin_manager.c: 142: {
  5410                           ;pin_manager.c: 143: IOCBF0_ISR();
  5411  0D19  318B  234C  318D   	fcall	_IOCBF0_ISR
  5412  0D1C                     i1l3628:	
  5413                           
  5414                           ;pin_manager.c: 144: }
  5415                           ;pin_manager.c: 147: if(IOCBFbits.IOCBF1 == 1)
  5416  0D1C  0027               	movlb	7	; select bank7
  5417  0D1D  1C96               	btfss	22,1	;volatile
  5418  0D1E  2D22               	goto	i1l3632
  5419                           
  5420                           ;pin_manager.c: 148: {
  5421                           ;pin_manager.c: 149: IOCBF1_ISR();
  5422  0D1F  318B  2359  318D   	fcall	_IOCBF1_ISR
  5423  0D22                     i1l3632:	
  5424                           
  5425                           ;pin_manager.c: 150: }
  5426                           ;pin_manager.c: 153: if(IOCBFbits.IOCBF2 == 1)
  5427  0D22  0027               	movlb	7	; select bank7
  5428  0D23  1D16               	btfss	22,2	;volatile
  5429  0D24  2D28               	goto	i1l3636
  5430                           
  5431                           ;pin_manager.c: 154: {
  5432                           ;pin_manager.c: 155: IOCBF2_ISR();
  5433  0D25  318B  2366  318D   	fcall	_IOCBF2_ISR
  5434  0D28                     i1l3636:	
  5435                           
  5436                           ;pin_manager.c: 156: }
  5437                           ;pin_manager.c: 159: if(IOCBFbits.IOCBF3 == 1)
  5438  0D28  0027               	movlb	7	; select bank7
  5439  0D29  1D96               	btfss	22,3	;volatile
  5440  0D2A  2D2E               	goto	i1l3640
  5441                           
  5442                           ;pin_manager.c: 160: {
  5443                           ;pin_manager.c: 161: IOCBF3_ISR();
  5444  0D2B  318B  2373  318D   	fcall	_IOCBF3_ISR
  5445  0D2E                     i1l3640:	
  5446                           
  5447                           ;pin_manager.c: 162: }
  5448                           ;pin_manager.c: 165: if(IOCBFbits.IOCBF4 == 1)
  5449  0D2E  0027               	movlb	7	; select bank7
  5450  0D2F  1E16               	btfss	22,4	;volatile
  5451  0D30  2D34               	goto	i1l3644
  5452                           
  5453                           ;pin_manager.c: 166: {
  5454                           ;pin_manager.c: 167: IOCBF4_ISR();
  5455  0D31  318B  2380  318D   	fcall	_IOCBF4_ISR
  5456  0D34                     i1l3644:	
  5457                           
  5458                           ;pin_manager.c: 168: }
  5459                           ;pin_manager.c: 171: if(IOCBFbits.IOCBF5 == 1)
  5460  0D34  0027               	movlb	7	; select bank7
  5461  0D35  1E96               	btfss	22,5	;volatile
  5462  0D36  0008               	return
  5463                           
  5464                           ;pin_manager.c: 172: {
  5465                           ;pin_manager.c: 173: IOCBF5_ISR();
  5466  0D37  318B  238D         	fcall	_IOCBF5_ISR
  5467  0D39  0008               	return
  5468  0D3A                     __end_of_PIN_MANAGER_IOC:	
  5469                           
  5470                           	psect	text38
  5471  0B8D                     __ptext38:	
  5472 ;; *************** function _IOCBF5_ISR *****************
  5473 ;; Defined at:
  5474 ;;		line 332 in file "mcc_generated_files/pin_manager.c"
  5475 ;; Parameters:    Size  Location     Type
  5476 ;;		None
  5477 ;; Auto vars:     Size  Location     Type
  5478 ;;		None
  5479 ;; Return value:  Size  Location     Type
  5480 ;;                  1    wreg      void 
  5481 ;; Registers used:
  5482 ;;		wreg, status,2, status,0, pclath, cstack
  5483 ;; Tracked objects:
  5484 ;;		On entry : 0/0
  5485 ;;		On exit  : 0/0
  5486 ;;		Unchanged: 0/0
  5487 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5488 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5489 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5490 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5491 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5492 ;;Total ram usage:        0 bytes
  5493 ;; Hardware stack levels used:    1
  5494 ;; Hardware stack levels required when called:    1
  5495 ;; This function calls:
  5496 ;;		Absolute function
  5497 ;;		_IOCBF5_DefaultInterruptHandler
  5498 ;; This function is called by:
  5499 ;;		_PIN_MANAGER_IOC
  5500 ;; This function uses a non-reentrant model
  5501 ;;
  5502                           
  5503                           
  5504                           ;psect for function _IOCBF5_ISR
  5505  0B8D                     _IOCBF5_ISR:	
  5506                           
  5507                           ;pin_manager.c: 337: if(IOCBF5_InterruptHandler)
  5508                           
  5509                           ;incstack = 0
  5510                           ; Regs used in _IOCBF5_ISR: [wreg+status,2+status,0+pclath+cstack]
  5511  0B8D  0021               	movlb	1	; select bank1
  5512  0B8E  0834               	movf	_IOCBF5_InterruptHandler^(0+128),w
  5513  0B8F  0435               	iorwf	(_IOCBF5_InterruptHandler+1)^(0+128),w
  5514  0B90  1903               	btfsc	3,2
  5515  0B91  2B97               	goto	i1l3484
  5516                           
  5517                           ;pin_manager.c: 338: {
  5518                           ;pin_manager.c: 339: IOCBF5_InterruptHandler();
  5519  0B92  0835               	movf	(_IOCBF5_InterruptHandler+1)^(0+128),w
  5520  0B93  008A               	movwf	10
  5521  0B94  0834               	movf	_IOCBF5_InterruptHandler^(0+128),w
  5522  0B95  000A               	callw
  5523  0B96  318B               	pagesel	$
  5524  0B97                     i1l3484:	
  5525                           
  5526                           ;pin_manager.c: 340: }
  5527                           ;pin_manager.c: 341: IOCBFbits.IOCBF5 = 0;
  5528  0B97  0027               	movlb	7	; select bank7
  5529  0B98  1296               	bcf	22,5	;volatile
  5530  0B99  0008               	return
  5531  0B9A                     __end_of_IOCBF5_ISR:	
  5532                           
  5533                           	psect	text39
  5534  0AA4                     __ptext39:	
  5535 ;; *************** function _IOCBF5_DefaultInterruptHandler *****************
  5536 ;; Defined at:
  5537 ;;		line 354 in file "mcc_generated_files/pin_manager.c"
  5538 ;; Parameters:    Size  Location     Type
  5539 ;;		None
  5540 ;; Auto vars:     Size  Location     Type
  5541 ;;		None
  5542 ;; Return value:  Size  Location     Type
  5543 ;;                  1    wreg      void 
  5544 ;; Registers used:
  5545 ;;		None
  5546 ;; Tracked objects:
  5547 ;;		On entry : 0/0
  5548 ;;		On exit  : 0/0
  5549 ;;		Unchanged: 0/0
  5550 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5551 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5552 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5553 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5554 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5555 ;;Total ram usage:        0 bytes
  5556 ;; Hardware stack levels used:    1
  5557 ;; This function calls:
  5558 ;;		Nothing
  5559 ;; This function is called by:
  5560 ;;		_PIN_MANAGER_Initialize
  5561 ;;		_IOCBF5_ISR
  5562 ;; This function uses a non-reentrant model
  5563 ;;
  5564                           
  5565                           
  5566                           ;psect for function _IOCBF5_DefaultInterruptHandler
  5567  0AA4                     _IOCBF5_DefaultInterruptHandler:	
  5568                           
  5569                           ;incstack = 0
  5570                           ; Regs used in _IOCBF5_DefaultInterruptHandler: []
  5571  0AA4  0008               	return
  5572  0AA5                     __end_of_IOCBF5_DefaultInterruptHandler:	
  5573                           
  5574                           	psect	text40
  5575  0B80                     __ptext40:	
  5576 ;; *************** function _IOCBF4_ISR *****************
  5577 ;; Defined at:
  5578 ;;		line 302 in file "mcc_generated_files/pin_manager.c"
  5579 ;; Parameters:    Size  Location     Type
  5580 ;;		None
  5581 ;; Auto vars:     Size  Location     Type
  5582 ;;		None
  5583 ;; Return value:  Size  Location     Type
  5584 ;;                  1    wreg      void 
  5585 ;; Registers used:
  5586 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5587 ;; Tracked objects:
  5588 ;;		On entry : 0/0
  5589 ;;		On exit  : 0/0
  5590 ;;		Unchanged: 0/0
  5591 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5592 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5593 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5594 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5595 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5596 ;;Total ram usage:        0 bytes
  5597 ;; Hardware stack levels used:    1
  5598 ;; Hardware stack levels required when called:    7
  5599 ;; This function calls:
  5600 ;;		Absolute function
  5601 ;;		_IOCBF4_DefaultInterruptHandler
  5602 ;;		_powerFailISR
  5603 ;; This function is called by:
  5604 ;;		_PIN_MANAGER_IOC
  5605 ;; This function uses a non-reentrant model
  5606 ;;
  5607                           
  5608                           
  5609                           ;psect for function _IOCBF4_ISR
  5610  0B80                     _IOCBF4_ISR:	
  5611                           
  5612                           ;pin_manager.c: 307: if(IOCBF4_InterruptHandler)
  5613                           
  5614                           ;incstack = 0
  5615                           ; Regs used in _IOCBF4_ISR: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5616  0B80  0020               	movlb	0	; select bank0
  5617  0B81  086C               	movf	_IOCBF4_InterruptHandler,w
  5618  0B82  046D               	iorwf	_IOCBF4_InterruptHandler+1,w
  5619  0B83  1903               	btfsc	3,2
  5620  0B84  2B8A               	goto	i1l3478
  5621                           
  5622                           ;pin_manager.c: 308: {
  5623                           ;pin_manager.c: 309: IOCBF4_InterruptHandler();
  5624  0B85  086D               	movf	_IOCBF4_InterruptHandler+1,w
  5625  0B86  008A               	movwf	10
  5626  0B87  086C               	movf	_IOCBF4_InterruptHandler,w
  5627  0B88  000A               	callw
  5628  0B89  318B               	pagesel	$
  5629  0B8A                     i1l3478:	
  5630                           
  5631                           ;pin_manager.c: 310: }
  5632                           ;pin_manager.c: 311: IOCBFbits.IOCBF4 = 0;
  5633  0B8A  0027               	movlb	7	; select bank7
  5634  0B8B  1216               	bcf	22,4	;volatile
  5635  0B8C  0008               	return
  5636  0B8D                     __end_of_IOCBF4_ISR:	
  5637                           
  5638                           	psect	text41
  5639  0AA3                     __ptext41:	
  5640 ;; *************** function _IOCBF4_DefaultInterruptHandler *****************
  5641 ;; Defined at:
  5642 ;;		line 324 in file "mcc_generated_files/pin_manager.c"
  5643 ;; Parameters:    Size  Location     Type
  5644 ;;		None
  5645 ;; Auto vars:     Size  Location     Type
  5646 ;;		None
  5647 ;; Return value:  Size  Location     Type
  5648 ;;                  1    wreg      void 
  5649 ;; Registers used:
  5650 ;;		None
  5651 ;; Tracked objects:
  5652 ;;		On entry : 0/0
  5653 ;;		On exit  : 0/0
  5654 ;;		Unchanged: 0/0
  5655 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5656 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5657 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5658 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5659 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5660 ;;Total ram usage:        0 bytes
  5661 ;; Hardware stack levels used:    1
  5662 ;; This function calls:
  5663 ;;		Nothing
  5664 ;; This function is called by:
  5665 ;;		_PIN_MANAGER_Initialize
  5666 ;;		_IOCBF4_ISR
  5667 ;; This function uses a non-reentrant model
  5668 ;;
  5669                           
  5670                           
  5671                           ;psect for function _IOCBF4_DefaultInterruptHandler
  5672  0AA3                     _IOCBF4_DefaultInterruptHandler:	
  5673                           
  5674                           ;incstack = 0
  5675                           ; Regs used in _IOCBF4_DefaultInterruptHandler: []
  5676  0AA3  0008               	return
  5677  0AA4                     __end_of_IOCBF4_DefaultInterruptHandler:	
  5678                           
  5679                           	psect	text42
  5680  0B2E                     __ptext42:	
  5681 ;; *************** function _powerFailISR *****************
  5682 ;; Defined at:
  5683 ;;		line 439 in file "clock_functions.c"
  5684 ;; Parameters:    Size  Location     Type
  5685 ;;		None
  5686 ;; Auto vars:     Size  Location     Type
  5687 ;;		None
  5688 ;; Return value:  Size  Location     Type
  5689 ;;                  1    wreg      void 
  5690 ;; Registers used:
  5691 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5692 ;; Tracked objects:
  5693 ;;		On entry : 0/0
  5694 ;;		On exit  : 0/0
  5695 ;;		Unchanged: 0/0
  5696 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5697 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5698 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5699 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5700 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5701 ;;Total ram usage:        0 bytes
  5702 ;; Hardware stack levels used:    1
  5703 ;; Hardware stack levels required when called:    6
  5704 ;; This function calls:
  5705 ;;		_shutdown
  5706 ;;		_wakeup
  5707 ;; This function is called by:
  5708 ;;		_startup
  5709 ;;		_wakeup
  5710 ;;		_IOCBF4_ISR
  5711 ;; This function uses a non-reentrant model
  5712 ;;
  5713                           
  5714                           
  5715                           ;psect for function _powerFailISR
  5716  0B2E                     _powerFailISR:	
  5717                           
  5718                           ;clock_functions.c: 447: if (asleep_flag == 0) {
  5719                           
  5720                           ;incstack = 0
  5721                           ; Regs used in _powerFailISR: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5722  0B2E  0020               	movlb	0	; select bank0
  5723  0B2F  186E               	btfsc	_asleep_flag/(0+8),_asleep_flag& (0+7)	;volatile
  5724  0B30  2B34               	goto	i1l3436
  5725                           
  5726                           ;clock_functions.c: 449: shutdown();
  5727  0B31  318E  26B0         	fcall	_shutdown
  5728                           
  5729                           ;clock_functions.c: 451: }
  5730  0B33  0008               	return
  5731  0B34                     i1l3436:	
  5732                           
  5733                           ;clock_functions.c: 454: else {
  5734                           ;clock_functions.c: 456: wakeup();
  5735  0B34  3183  23A7         	fcall	_wakeup
  5736  0B36  0008               	return
  5737  0B37                     __end_of_powerFailISR:	
  5738                           
  5739                           	psect	text43
  5740  03A7                     __ptext43:	
  5741 ;; *************** function _wakeup *****************
  5742 ;; Defined at:
  5743 ;;		line 807 in file "clock_functions.c"
  5744 ;; Parameters:    Size  Location     Type
  5745 ;;		None
  5746 ;; Auto vars:     Size  Location     Type
  5747 ;;		None
  5748 ;; Return value:  Size  Location     Type
  5749 ;;                  1    wreg      void 
  5750 ;; Registers used:
  5751 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5752 ;; Tracked objects:
  5753 ;;		On entry : 0/0
  5754 ;;		On exit  : 0/0
  5755 ;;		Unchanged: 0/0
  5756 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5757 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5758 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5759 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5760 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5761 ;;Total ram usage:        0 bytes
  5762 ;; Hardware stack levels used:    1
  5763 ;; Hardware stack levels required when called:    5
  5764 ;; This function calls:
  5765 ;;		_isolateDigits
  5766 ;;		_restoreTime
  5767 ;;		_twentyFourParse
  5768 ;;		_updateDisplay
  5769 ;;		i1_IOCBF0_SetInterruptHandler
  5770 ;;		i1_IOCBF1_SetInterruptHandler
  5771 ;;		i1_IOCBF2_SetInterruptHandler
  5772 ;;		i1_IOCBF3_SetInterruptHandler
  5773 ;;		i1_IOCBF4_SetInterruptHandler
  5774 ;;		i1_TMR0_SetInterruptHandler
  5775 ;;		i1_TMR1_SetInterruptHandler
  5776 ;;		i1_TMR2_SetInterruptHandler
  5777 ;;		i1_TMR2_StartTimer
  5778 ;; This function is called by:
  5779 ;;		_powerFailISR
  5780 ;; This function uses a non-reentrant model
  5781 ;;
  5782                           
  5783                           
  5784                           ;psect for function _wakeup
  5785  03A7                     _wakeup:	
  5786                           
  5787                           ;clock_functions.c: 813: (INTCONbits.PEIE = 1);
  5788                           
  5789                           ;incstack = 0
  5790                           ; Regs used in _wakeup: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5791  03A7  170B               	bsf	11,6	;volatile
  5792                           
  5793                           ;clock_functions.c: 818: OSCCONbits.IRCF = 0b1010;
  5794  03A8  0021               	movlb	1	; select bank1
  5795  03A9  0819               	movf	25,w	;volatile
  5796  03AA  3987               	andlw	-121
  5797  03AB  3850               	iorlw	80
  5798  03AC  0099               	movwf	25	;volatile
  5799  03AD                     i1l691:	
  5800                           ;clock_functions.c: 819: while(!HFIOFR);
  5801                           
  5802  03AD  1E1A               	btfss	26,4	;volatile
  5803  03AE  2BAD               	goto	i1l691
  5804                           
  5805                           ;clock_functions.c: 820: OSCCONbits.SCS = 0b00;
  5806  03AF  30FC               	movlw	-4
  5807  03B0  0599               	andwf	25,f	;volatile
  5808  03B1                     i1l694:	
  5809                           ;clock_functions.c: 822: while(!OSTS);
  5810                           
  5811  03B1  1E9A               	btfss	26,5	;volatile
  5812  03B2  2BB1               	goto	i1l694
  5813                           
  5814                           ;clock_functions.c: 825: nT1SYNC = 0;
  5815  03B3  0020               	movlb	0	; select bank0
  5816  03B4  1118               	bcf	24,2	;volatile
  5817                           
  5818                           ;clock_functions.c: 828: TRISEbits.TRISE2 = 0;
  5819  03B5  0021               	movlb	1	; select bank1
  5820  03B6  1110               	bcf	16,2	;volatile
  5821                           
  5822                           ;clock_functions.c: 829: TRISEbits.TRISE1 = 0;
  5823  03B7  1090               	bcf	16,1	;volatile
  5824                           
  5825                           ;clock_functions.c: 830: TRISEbits.TRISE0 = 0;
  5826  03B8  1010               	bcf	16,0	;volatile
  5827                           
  5828                           ;clock_functions.c: 831: LATEbits.LATE2 = 1;
  5829  03B9  0022               	movlb	2	; select bank2
  5830  03BA  1510               	bsf	16,2	;volatile
  5831                           
  5832                           ;clock_functions.c: 835: TMR0_SetInterruptHandler(muxISR);
  5833  03BB  305F               	movlw	low _muxISR
  5834  03BC  00F0               	movwf	i1TMR0_SetInterruptHandler@InterruptHandler
  5835  03BD  300D               	movlw	high _muxISR
  5836  03BE  00F1               	movwf	i1TMR0_SetInterruptHandler@InterruptHandler+1
  5837  03BF  318A  22E3  3183   	fcall	i1_TMR0_SetInterruptHandler
  5838                           
  5839                           ;clock_functions.c: 838: TMR1_SetInterruptHandler(tickISR);
  5840  03C2  30D3               	movlw	low _tickISR
  5841  03C3  00F0               	movwf	i1TMR1_SetInterruptHandler@InterruptHandler
  5842  03C4  3007               	movlw	high _tickISR
  5843  03C5  00F1               	movwf	i1TMR1_SetInterruptHandler@InterruptHandler+1
  5844  03C6  318A  22BF  3183   	fcall	i1_TMR1_SetInterruptHandler
  5845                           
  5846                           ;clock_functions.c: 841: TMR2_SetInterruptHandler(blankISR);
  5847  03C9  309A               	movlw	low _blankISR
  5848  03CA  00F0               	movwf	i1TMR2_SetInterruptHandler@InterruptHandler
  5849  03CB  300B               	movlw	high _blankISR
  5850  03CC  00F1               	movwf	i1TMR2_SetInterruptHandler@InterruptHandler+1
  5851  03CD  318A  22E9  3183   	fcall	i1_TMR2_SetInterruptHandler
  5852                           
  5853                           ;clock_functions.c: 845: IOCBF0_SetInterruptHandler(setSecondsISR);
  5854  03D0  308C               	movlw	low _setSecondsISR
  5855  03D1  00F0               	movwf	i1IOCBF0_SetInterruptHandler@InterruptHandler
  5856  03D2  300C               	movlw	high _setSecondsISR
  5857  03D3  00F1               	movwf	i1IOCBF0_SetInterruptHandler@InterruptHandler+1
  5858  03D4  318A  22C5  3183   	fcall	i1_IOCBF0_SetInterruptHandler
  5859                           
  5860                           ;clock_functions.c: 848: IOCBF1_SetInterruptHandler(setMinutesISR);
  5861  03D7  30AD               	movlw	low _setMinutesISR
  5862  03D8  00F0               	movwf	i1IOCBF1_SetInterruptHandler@InterruptHandler
  5863  03D9  300C               	movlw	high _setMinutesISR
  5864  03DA  00F1               	movwf	i1IOCBF1_SetInterruptHandler@InterruptHandler+1
  5865  03DB  318A  22CB  3183   	fcall	i1_IOCBF1_SetInterruptHandler
  5866                           
  5867                           ;clock_functions.c: 851: IOCBF2_SetInterruptHandler(setHoursISR);
  5868  03DE  30F2               	movlw	low _setHoursISR
  5869  03DF  00F0               	movwf	i1IOCBF2_SetInterruptHandler@InterruptHandler
  5870  03E0  300C               	movlw	high _setHoursISR
  5871  03E1  00F1               	movwf	i1IOCBF2_SetInterruptHandler@InterruptHandler+1
  5872  03E2  318A  22D1  3183   	fcall	i1_IOCBF2_SetInterruptHandler
  5873                           
  5874                           ;clock_functions.c: 854: IOCBF3_SetInterruptHandler(displayToggleISR);
  5875  03E5  3084               	movlw	low _displayToggleISR
  5876  03E6  00F0               	movwf	i1IOCBF3_SetInterruptHandler@InterruptHandler
  5877  03E7  300D               	movlw	high _displayToggleISR
  5878  03E8  00F1               	movwf	i1IOCBF3_SetInterruptHandler@InterruptHandler+1
  5879  03E9  318A  22D7  3183   	fcall	i1_IOCBF3_SetInterruptHandler
  5880                           
  5881                           ;clock_functions.c: 857: IOCBF4_SetInterruptHandler(powerFailISR);
  5882  03EC  302E               	movlw	low _powerFailISR
  5883  03ED  00F0               	movwf	i1IOCBF4_SetInterruptHandler@InterruptHandler
  5884  03EE  300B               	movlw	high _powerFailISR
  5885  03EF  00F1               	movwf	i1IOCBF4_SetInterruptHandler@InterruptHandler+1
  5886  03F0  318A  22DD  3183   	fcall	i1_IOCBF4_SetInterruptHandler
  5887                           
  5888                           ;clock_functions.c: 860: TRISDbits.TRISD4 = 0;
  5889  03F3  0021               	movlb	1	; select bank1
  5890  03F4  120F               	bcf	15,4	;volatile
  5891                           
  5892                           ;clock_functions.c: 861: TRISDbits.TRISD5 = 0;
  5893  03F5  128F               	bcf	15,5	;volatile
  5894                           
  5895                           ;clock_functions.c: 862: TRISDbits.TRISD6 = 0;
  5896  03F6  130F               	bcf	15,6	;volatile
  5897                           
  5898                           ;clock_functions.c: 863: TRISDbits.TRISD0 = 0;
  5899  03F7  100F               	bcf	15,0	;volatile
  5900                           
  5901                           ;clock_functions.c: 864: TRISDbits.TRISD1 = 0;
  5902  03F8  108F               	bcf	15,1	;volatile
  5903                           
  5904                           ;clock_functions.c: 865: TRISDbits.TRISD2 = 0;
  5905  03F9  110F               	bcf	15,2	;volatile
  5906                           
  5907                           ;clock_functions.c: 866: TRISDbits.TRISD3 = 0;
  5908  03FA  118F               	bcf	15,3	;volatile
  5909                           
  5910                           ;clock_functions.c: 867: TRISDbits.TRISD7 = 0;
  5911  03FB  138F               	bcf	15,7	;volatile
  5912                           
  5913                           ;clock_functions.c: 870: TRISCbits.TRISC3 = 0;
  5914  03FC  118E               	bcf	14,3	;volatile
  5915                           
  5916                           ;clock_functions.c: 871: TRISCbits.TRISC4 = 0;
  5917  03FD  120E               	bcf	14,4	;volatile
  5918                           
  5919                           ;clock_functions.c: 874: LATCbits.LATC3 = 0;
  5920  03FE  0022               	movlb	2	; select bank2
  5921  03FF  118E               	bcf	14,3	;volatile
  5922                           
  5923                           ;clock_functions.c: 875: LATCbits.LATC4 = 0;
  5924  0400  120E               	bcf	14,4	;volatile
  5925                           
  5926                           ;clock_functions.c: 878: TRISBbits.TRISB0 = 1;
  5927  0401  0021               	movlb	1	; select bank1
  5928  0402  140D               	bsf	13,0	;volatile
  5929                           
  5930                           ;clock_functions.c: 879: TRISBbits.TRISB1 = 1;
  5931  0403  148D               	bsf	13,1	;volatile
  5932                           
  5933                           ;clock_functions.c: 880: TRISBbits.TRISB2 = 1;
  5934  0404  150D               	bsf	13,2	;volatile
  5935                           
  5936                           ;clock_functions.c: 883: TRISBbits.TRISB4 = 1;
  5937  0405  160D               	bsf	13,4	;volatile
  5938                           
  5939                           ;clock_functions.c: 886: TRISCbits.TRISC5 = 1;
  5940  0406  168E               	bsf	14,5	;volatile
  5941                           
  5942                           ;clock_functions.c: 889: TRISAbits.TRISA0 = 1;
  5943  0407  140C               	bsf	12,0	;volatile
  5944                           
  5945                           ;clock_functions.c: 890: TRISAbits.TRISA5 = 1;
  5946  0408  168C               	bsf	12,5	;volatile
  5947                           
  5948                           ;clock_functions.c: 891: TRISAbits.TRISA2 = 1;
  5949  0409  150C               	bsf	12,2	;volatile
  5950                           
  5951                           ;clock_functions.c: 894: TRISBbits.TRISB6 = 0;
  5952  040A  130D               	bcf	13,6	;volatile
  5953                           
  5954                           ;clock_functions.c: 895: TRISBbits.TRISB7 = 0;
  5955  040B  138D               	bcf	13,7	;volatile
  5956                           
  5957                           ;clock_functions.c: 896: TRISAbits.TRISA1 = 0;
  5958  040C  108C               	bcf	12,1	;volatile
  5959                           
  5960                           ;clock_functions.c: 897: TRISCbits.TRISC1 = 0;
  5961  040D  108E               	bcf	14,1	;volatile
  5962                           
  5963                           ;clock_functions.c: 900: TRISEbits.TRISE0 = 0;
  5964  040E  1010               	bcf	16,0	;volatile
  5965                           
  5966                           ;clock_functions.c: 903: TRISCbits.TRISC6 = 1;
  5967  040F  170E               	bsf	14,6	;volatile
  5968                           
  5969                           ;clock_functions.c: 906: TRISCbits.TRISC2 = 0;
  5970  0410  110E               	bcf	14,2	;volatile
  5971                           
  5972                           ;clock_functions.c: 907: LATCbits.LATC2 = 0;
  5973  0411  0022               	movlb	2	; select bank2
  5974  0412  110E               	bcf	14,2	;volatile
  5975                           
  5976                           ;clock_functions.c: 910: TRISBbits.TRISB3 = 1;
  5977  0413  0021               	movlb	1	; select bank1
  5978  0414  158D               	bsf	13,3	;volatile
  5979                           
  5980                           ;clock_functions.c: 913: TRISAbits.TRISA3 = 0;
  5981  0415  118C               	bcf	12,3	;volatile
  5982                           
  5983                           ;clock_functions.c: 916: LATEbits.LATE2 = 0;
  5984  0416  0022               	movlb	2	; select bank2
  5985  0417  1110               	bcf	16,2	;volatile
  5986                           
  5987                           ;clock_functions.c: 917: LATEbits.LATE0 = 0;
  5988  0418  1010               	bcf	16,0	;volatile
  5989                           
  5990                           ;clock_functions.c: 920: LATAbits.LATA3 = 0;
  5991  0419  118C               	bcf	12,3	;volatile
  5992                           
  5993                           ;clock_functions.c: 923: IOCBNbits.IOCBN0 = 1;
  5994  041A  0027               	movlb	7	; select bank7
  5995  041B  1415               	bsf	21,0	;volatile
  5996                           
  5997                           ;clock_functions.c: 924: IOCBNbits.IOCBN1 = 1;
  5998  041C  1495               	bsf	21,1	;volatile
  5999                           
  6000                           ;clock_functions.c: 925: IOCBNbits.IOCBN2 = 1;
  6001  041D  1515               	bsf	21,2	;volatile
  6002                           
  6003                           ;clock_functions.c: 926: IOCBNbits.IOCBN3 = 1;
  6004  041E  1595               	bsf	21,3	;volatile
  6005                           
  6006                           ;clock_functions.c: 929: asleep_flag = 0;
  6007  041F  0020               	movlb	0	; select bank0
  6008  0420  106E               	bcf	_asleep_flag/(0+8),_asleep_flag& (0+7)	;volatile
  6009                           
  6010                           ;clock_functions.c: 932: INTCONbits.TMR0IE = 0;
  6011  0421  128B               	bcf	11,5	;volatile
  6012                           
  6013                           ;clock_functions.c: 933: PIE1bits.TMR2IE = 0;
  6014  0422  0021               	movlb	1	; select bank1
  6015  0423  1091               	bcf	17,1	;volatile
  6016                           
  6017                           ;clock_functions.c: 936: TMR0CS = 0;
  6018  0424  1295               	bcf	21,5	;volatile
  6019                           
  6020                           ;clock_functions.c: 937: TMR2_StartTimer();
  6021  0425  318A  22AB  3183   	fcall	i1_TMR2_StartTimer
  6022                           
  6023                           ;clock_functions.c: 941: PIE1bits.TMR1IE = 0;
  6024  0428  0021               	movlb	1	; select bank1
  6025  0429  1011               	bcf	17,0	;volatile
  6026                           
  6027                           ;clock_functions.c: 944: restoreTime();
  6028  042A  3180  2049  3183   	fcall	_restoreTime
  6029                           
  6030                           ;clock_functions.c: 945: twentyFourParse();
  6031  042D  318C  24CE  3183   	fcall	_twentyFourParse
  6032                           
  6033                           ;clock_functions.c: 946: isolateDigits();
  6034  0430  3185  2543  3183   	fcall	_isolateDigits
  6035                           
  6036                           ;clock_functions.c: 947: updateDisplay();
  6037  0433  318D  253A         	fcall	_updateDisplay
  6038                           
  6039                           ;clock_functions.c: 950: PIE1bits.TMR1IE = 1;
  6040  0435  0021               	movlb	1	; select bank1
  6041  0436  1411               	bsf	17,0	;volatile
  6042  0437  0008               	return
  6043  0438                     __end_of_wakeup:	
  6044                           
  6045                           	psect	text44
  6046  0AAB                     __ptext44:	
  6047 ;; *************** function i1_TMR2_StartTimer *****************
  6048 ;; Defined at:
  6049 ;;		line 92 in file "mcc_generated_files/tmr2.c"
  6050 ;; Parameters:    Size  Location     Type
  6051 ;;		None
  6052 ;; Auto vars:     Size  Location     Type
  6053 ;;		None
  6054 ;; Return value:  Size  Location     Type
  6055 ;;                  1    wreg      void 
  6056 ;; Registers used:
  6057 ;;		None
  6058 ;; Tracked objects:
  6059 ;;		On entry : 0/0
  6060 ;;		On exit  : 0/0
  6061 ;;		Unchanged: 0/0
  6062 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6063 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6064 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6065 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6066 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6067 ;;Total ram usage:        0 bytes
  6068 ;; Hardware stack levels used:    1
  6069 ;; This function calls:
  6070 ;;		Nothing
  6071 ;; This function is called by:
  6072 ;;		_muxISR
  6073 ;;		_wakeup
  6074 ;; This function uses a non-reentrant model
  6075 ;;
  6076                           
  6077                           
  6078                           ;psect for function i1_TMR2_StartTimer
  6079  0AAB                     i1_TMR2_StartTimer:	
  6080                           
  6081                           ;tmr2.c: 95: T2CONbits.TMR2ON = 1;
  6082                           
  6083                           ;incstack = 0
  6084                           ; Regs used in i1_TMR2_StartTimer: []
  6085  0AAB  0020               	movlb	0	; select bank0
  6086  0AAC  151C               	bsf	28,2	;volatile
  6087  0AAD  0008               	return
  6088  0AAE                     __end_ofi1_TMR2_StartTimer:	
  6089                           
  6090                           	psect	text45
  6091  0AE9                     __ptext45:	
  6092 ;; *************** function i1_TMR2_SetInterruptHandler *****************
  6093 ;; Defined at:
  6094 ;;		line 137 in file "mcc_generated_files/tmr2.c"
  6095 ;; Parameters:    Size  Location     Type
  6096 ;;  InterruptHan    2    0[COMMON] PTR void 
  6097 ;;		 -> blankISR(1), TMR2_DefaultInterruptHandler(1), 
  6098 ;; Auto vars:     Size  Location     Type
  6099 ;;		None
  6100 ;; Return value:  Size  Location     Type
  6101 ;;                  1    wreg      void 
  6102 ;; Registers used:
  6103 ;;		wreg
  6104 ;; Tracked objects:
  6105 ;;		On entry : 0/0
  6106 ;;		On exit  : 0/0
  6107 ;;		Unchanged: 0/0
  6108 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6109 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6110 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6111 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6112 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6113 ;;Total ram usage:        2 bytes
  6114 ;; Hardware stack levels used:    1
  6115 ;; This function calls:
  6116 ;;		Nothing
  6117 ;; This function is called by:
  6118 ;;		_wakeup
  6119 ;; This function uses a non-reentrant model
  6120 ;;
  6121                           
  6122                           
  6123                           ;psect for function i1_TMR2_SetInterruptHandler
  6124  0AE9                     i1_TMR2_SetInterruptHandler:	
  6125                           
  6126                           ;tmr2.c: 138: TMR2_InterruptHandler = InterruptHandler;
  6127                           
  6128                           ;incstack = 0
  6129                           ; Regs used in i1_TMR2_SetInterruptHandler: [wreg]
  6130  0AE9  0871               	movf	i1TMR2_SetInterruptHandler@InterruptHandler+1,w
  6131  0AEA  0021               	movlb	1	; select bank1
  6132  0AEB  00BF               	movwf	(_TMR2_InterruptHandler+1)^(0+128)
  6133  0AEC  0870               	movf	i1TMR2_SetInterruptHandler@InterruptHandler,w
  6134  0AED  00BE               	movwf	_TMR2_InterruptHandler^(0+128)
  6135  0AEE  0008               	return
  6136  0AEF                     __end_ofi1_TMR2_SetInterruptHandler:	
  6137                           
  6138                           	psect	text46
  6139  0AE3                     __ptext46:	
  6140 ;; *************** function i1_TMR0_SetInterruptHandler *****************
  6141 ;; Defined at:
  6142 ;;		line 125 in file "mcc_generated_files/tmr0.c"
  6143 ;; Parameters:    Size  Location     Type
  6144 ;;  InterruptHan    2    0[COMMON] PTR void 
  6145 ;;		 -> muxISR(1), TMR0_DefaultInterruptHandler(1), 
  6146 ;; Auto vars:     Size  Location     Type
  6147 ;;		None
  6148 ;; Return value:  Size  Location     Type
  6149 ;;                  1    wreg      void 
  6150 ;; Registers used:
  6151 ;;		wreg
  6152 ;; Tracked objects:
  6153 ;;		On entry : 0/0
  6154 ;;		On exit  : 0/0
  6155 ;;		Unchanged: 0/0
  6156 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6157 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6158 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6159 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6160 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6161 ;;Total ram usage:        2 bytes
  6162 ;; Hardware stack levels used:    1
  6163 ;; This function calls:
  6164 ;;		Nothing
  6165 ;; This function is called by:
  6166 ;;		_wakeup
  6167 ;; This function uses a non-reentrant model
  6168 ;;
  6169                           
  6170                           
  6171                           ;psect for function i1_TMR0_SetInterruptHandler
  6172  0AE3                     i1_TMR0_SetInterruptHandler:	
  6173                           
  6174                           ;tmr0.c: 126: TMR0_InterruptHandler = InterruptHandler;
  6175                           
  6176                           ;incstack = 0
  6177                           ; Regs used in i1_TMR0_SetInterruptHandler: [wreg]
  6178  0AE3  0871               	movf	i1TMR0_SetInterruptHandler@InterruptHandler+1,w
  6179  0AE4  0021               	movlb	1	; select bank1
  6180  0AE5  00C5               	movwf	(_TMR0_InterruptHandler+1)^(0+128)
  6181  0AE6  0870               	movf	i1TMR0_SetInterruptHandler@InterruptHandler,w
  6182  0AE7  00C4               	movwf	_TMR0_InterruptHandler^(0+128)
  6183  0AE8  0008               	return
  6184  0AE9                     __end_ofi1_TMR0_SetInterruptHandler:	
  6185                           
  6186                           	psect	text47
  6187  0ADD                     __ptext47:	
  6188 ;; *************** function i1_IOCBF4_SetInterruptHandler *****************
  6189 ;; Defined at:
  6190 ;;		line 317 in file "mcc_generated_files/pin_manager.c"
  6191 ;; Parameters:    Size  Location     Type
  6192 ;;  InterruptHan    2    0[COMMON] PTR void 
  6193 ;;		 -> powerFailISR(1), IOCBF4_DefaultInterruptHandler(1), 
  6194 ;; Auto vars:     Size  Location     Type
  6195 ;;		None
  6196 ;; Return value:  Size  Location     Type
  6197 ;;                  1    wreg      void 
  6198 ;; Registers used:
  6199 ;;		wreg
  6200 ;; Tracked objects:
  6201 ;;		On entry : 0/0
  6202 ;;		On exit  : 0/0
  6203 ;;		Unchanged: 0/0
  6204 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6205 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6206 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6207 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6208 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6209 ;;Total ram usage:        2 bytes
  6210 ;; Hardware stack levels used:    1
  6211 ;; This function calls:
  6212 ;;		Nothing
  6213 ;; This function is called by:
  6214 ;;		_wakeup
  6215 ;; This function uses a non-reentrant model
  6216 ;;
  6217                           
  6218                           
  6219                           ;psect for function i1_IOCBF4_SetInterruptHandler
  6220  0ADD                     i1_IOCBF4_SetInterruptHandler:	
  6221                           
  6222                           ;pin_manager.c: 318: IOCBF4_InterruptHandler = InterruptHandler;
  6223                           
  6224                           ;incstack = 0
  6225                           ; Regs used in i1_IOCBF4_SetInterruptHandler: [wreg]
  6226  0ADD  0871               	movf	i1IOCBF4_SetInterruptHandler@InterruptHandler+1,w
  6227  0ADE  0020               	movlb	0	; select bank0
  6228  0ADF  00ED               	movwf	_IOCBF4_InterruptHandler+1
  6229  0AE0  0870               	movf	i1IOCBF4_SetInterruptHandler@InterruptHandler,w
  6230  0AE1  00EC               	movwf	_IOCBF4_InterruptHandler
  6231  0AE2  0008               	return
  6232  0AE3                     __end_ofi1_IOCBF4_SetInterruptHandler:	
  6233                           
  6234                           	psect	text48
  6235  0AD7                     __ptext48:	
  6236 ;; *************** function i1_IOCBF3_SetInterruptHandler *****************
  6237 ;; Defined at:
  6238 ;;		line 287 in file "mcc_generated_files/pin_manager.c"
  6239 ;; Parameters:    Size  Location     Type
  6240 ;;  InterruptHan    2    0[COMMON] PTR void 
  6241 ;;		 -> displayToggleISR(1), IOCBF3_DefaultInterruptHandler(1), 
  6242 ;; Auto vars:     Size  Location     Type
  6243 ;;		None
  6244 ;; Return value:  Size  Location     Type
  6245 ;;                  1    wreg      void 
  6246 ;; Registers used:
  6247 ;;		wreg
  6248 ;; Tracked objects:
  6249 ;;		On entry : 0/0
  6250 ;;		On exit  : 0/0
  6251 ;;		Unchanged: 0/0
  6252 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6253 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6254 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6255 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6256 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6257 ;;Total ram usage:        2 bytes
  6258 ;; Hardware stack levels used:    1
  6259 ;; This function calls:
  6260 ;;		Nothing
  6261 ;; This function is called by:
  6262 ;;		_wakeup
  6263 ;; This function uses a non-reentrant model
  6264 ;;
  6265                           
  6266                           
  6267                           ;psect for function i1_IOCBF3_SetInterruptHandler
  6268  0AD7                     i1_IOCBF3_SetInterruptHandler:	
  6269                           
  6270                           ;pin_manager.c: 288: IOCBF3_InterruptHandler = InterruptHandler;
  6271                           
  6272                           ;incstack = 0
  6273                           ; Regs used in i1_IOCBF3_SetInterruptHandler: [wreg]
  6274  0AD7  0871               	movf	i1IOCBF3_SetInterruptHandler@InterruptHandler+1,w
  6275  0AD8  0021               	movlb	1	; select bank1
  6276  0AD9  00B7               	movwf	(_IOCBF3_InterruptHandler+1)^(0+128)
  6277  0ADA  0870               	movf	i1IOCBF3_SetInterruptHandler@InterruptHandler,w
  6278  0ADB  00B6               	movwf	_IOCBF3_InterruptHandler^(0+128)
  6279  0ADC  0008               	return
  6280  0ADD                     __end_ofi1_IOCBF3_SetInterruptHandler:	
  6281                           
  6282                           	psect	text49
  6283  0AD1                     __ptext49:	
  6284 ;; *************** function i1_IOCBF2_SetInterruptHandler *****************
  6285 ;; Defined at:
  6286 ;;		line 257 in file "mcc_generated_files/pin_manager.c"
  6287 ;; Parameters:    Size  Location     Type
  6288 ;;  InterruptHan    2    0[COMMON] PTR void 
  6289 ;;		 -> setHoursISR(1), IOCBF2_DefaultInterruptHandler(1), 
  6290 ;; Auto vars:     Size  Location     Type
  6291 ;;		None
  6292 ;; Return value:  Size  Location     Type
  6293 ;;                  1    wreg      void 
  6294 ;; Registers used:
  6295 ;;		wreg
  6296 ;; Tracked objects:
  6297 ;;		On entry : 0/0
  6298 ;;		On exit  : 0/0
  6299 ;;		Unchanged: 0/0
  6300 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6301 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6302 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6303 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6304 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6305 ;;Total ram usage:        2 bytes
  6306 ;; Hardware stack levels used:    1
  6307 ;; This function calls:
  6308 ;;		Nothing
  6309 ;; This function is called by:
  6310 ;;		_wakeup
  6311 ;; This function uses a non-reentrant model
  6312 ;;
  6313                           
  6314                           
  6315                           ;psect for function i1_IOCBF2_SetInterruptHandler
  6316  0AD1                     i1_IOCBF2_SetInterruptHandler:	
  6317                           
  6318                           ;pin_manager.c: 258: IOCBF2_InterruptHandler = InterruptHandler;
  6319                           
  6320                           ;incstack = 0
  6321                           ; Regs used in i1_IOCBF2_SetInterruptHandler: [wreg]
  6322  0AD1  0871               	movf	i1IOCBF2_SetInterruptHandler@InterruptHandler+1,w
  6323  0AD2  0021               	movlb	1	; select bank1
  6324  0AD3  00B9               	movwf	(_IOCBF2_InterruptHandler+1)^(0+128)
  6325  0AD4  0870               	movf	i1IOCBF2_SetInterruptHandler@InterruptHandler,w
  6326  0AD5  00B8               	movwf	_IOCBF2_InterruptHandler^(0+128)
  6327  0AD6  0008               	return
  6328  0AD7                     __end_ofi1_IOCBF2_SetInterruptHandler:	
  6329                           
  6330                           	psect	text50
  6331  0ACB                     __ptext50:	
  6332 ;; *************** function i1_IOCBF1_SetInterruptHandler *****************
  6333 ;; Defined at:
  6334 ;;		line 227 in file "mcc_generated_files/pin_manager.c"
  6335 ;; Parameters:    Size  Location     Type
  6336 ;;  InterruptHan    2    0[COMMON] PTR void 
  6337 ;;		 -> setMinutesISR(1), IOCBF1_DefaultInterruptHandler(1), 
  6338 ;; Auto vars:     Size  Location     Type
  6339 ;;		None
  6340 ;; Return value:  Size  Location     Type
  6341 ;;                  1    wreg      void 
  6342 ;; Registers used:
  6343 ;;		wreg
  6344 ;; Tracked objects:
  6345 ;;		On entry : 0/0
  6346 ;;		On exit  : 0/0
  6347 ;;		Unchanged: 0/0
  6348 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6349 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6350 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6351 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6352 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6353 ;;Total ram usage:        2 bytes
  6354 ;; Hardware stack levels used:    1
  6355 ;; This function calls:
  6356 ;;		Nothing
  6357 ;; This function is called by:
  6358 ;;		_wakeup
  6359 ;; This function uses a non-reentrant model
  6360 ;;
  6361                           
  6362                           
  6363                           ;psect for function i1_IOCBF1_SetInterruptHandler
  6364  0ACB                     i1_IOCBF1_SetInterruptHandler:	
  6365                           
  6366                           ;pin_manager.c: 228: IOCBF1_InterruptHandler = InterruptHandler;
  6367                           
  6368                           ;incstack = 0
  6369                           ; Regs used in i1_IOCBF1_SetInterruptHandler: [wreg]
  6370  0ACB  0871               	movf	i1IOCBF1_SetInterruptHandler@InterruptHandler+1,w
  6371  0ACC  0021               	movlb	1	; select bank1
  6372  0ACD  00BB               	movwf	(_IOCBF1_InterruptHandler+1)^(0+128)
  6373  0ACE  0870               	movf	i1IOCBF1_SetInterruptHandler@InterruptHandler,w
  6374  0ACF  00BA               	movwf	_IOCBF1_InterruptHandler^(0+128)
  6375  0AD0  0008               	return
  6376  0AD1                     __end_ofi1_IOCBF1_SetInterruptHandler:	
  6377                           
  6378                           	psect	text51
  6379  0AC5                     __ptext51:	
  6380 ;; *************** function i1_IOCBF0_SetInterruptHandler *****************
  6381 ;; Defined at:
  6382 ;;		line 197 in file "mcc_generated_files/pin_manager.c"
  6383 ;; Parameters:    Size  Location     Type
  6384 ;;  InterruptHan    2    0[COMMON] PTR void 
  6385 ;;		 -> setSecondsISR(1), IOCBF0_DefaultInterruptHandler(1), 
  6386 ;; Auto vars:     Size  Location     Type
  6387 ;;		None
  6388 ;; Return value:  Size  Location     Type
  6389 ;;                  1    wreg      void 
  6390 ;; Registers used:
  6391 ;;		wreg
  6392 ;; Tracked objects:
  6393 ;;		On entry : 0/0
  6394 ;;		On exit  : 0/0
  6395 ;;		Unchanged: 0/0
  6396 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6397 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6398 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6399 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6400 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6401 ;;Total ram usage:        2 bytes
  6402 ;; Hardware stack levels used:    1
  6403 ;; This function calls:
  6404 ;;		Nothing
  6405 ;; This function is called by:
  6406 ;;		_wakeup
  6407 ;; This function uses a non-reentrant model
  6408 ;;
  6409                           
  6410                           
  6411                           ;psect for function i1_IOCBF0_SetInterruptHandler
  6412  0AC5                     i1_IOCBF0_SetInterruptHandler:	
  6413                           
  6414                           ;pin_manager.c: 198: IOCBF0_InterruptHandler = InterruptHandler;
  6415                           
  6416                           ;incstack = 0
  6417                           ; Regs used in i1_IOCBF0_SetInterruptHandler: [wreg]
  6418  0AC5  0871               	movf	i1IOCBF0_SetInterruptHandler@InterruptHandler+1,w
  6419  0AC6  0021               	movlb	1	; select bank1
  6420  0AC7  00BD               	movwf	(_IOCBF0_InterruptHandler+1)^(0+128)
  6421  0AC8  0870               	movf	i1IOCBF0_SetInterruptHandler@InterruptHandler,w
  6422  0AC9  00BC               	movwf	_IOCBF0_InterruptHandler^(0+128)
  6423  0ACA  0008               	return
  6424  0ACB                     __end_ofi1_IOCBF0_SetInterruptHandler:	
  6425                           
  6426                           	psect	text52
  6427  0049                     __ptext52:	
  6428 ;; *************** function _restoreTime *****************
  6429 ;; Defined at:
  6430 ;;		line 1002 in file "clock_functions.c"
  6431 ;; Parameters:    Size  Location     Type
  6432 ;;		None
  6433 ;; Auto vars:     Size  Location     Type
  6434 ;;  sleepy_secon    3   45[BANK0 ] float 
  6435 ;;  sleepy_secon    3   42[BANK0 ] float 
  6436 ;;  calc_hours      2   52[BANK0 ] int 
  6437 ;;  calc_minutes    2   50[BANK0 ] int 
  6438 ;;  calc_seconds    2   48[BANK0 ] int 
  6439 ;; Return value:  Size  Location     Type
  6440 ;;                  1    wreg      void 
  6441 ;; Registers used:
  6442 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6443 ;; Tracked objects:
  6444 ;;		On entry : 0/0
  6445 ;;		On exit  : 0/0
  6446 ;;		Unchanged: 0/0
  6447 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6448 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6449 ;;      Locals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6450 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6451 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6452 ;;Total ram usage:       15 bytes
  6453 ;; Hardware stack levels used:    1
  6454 ;; Hardware stack levels required when called:    4
  6455 ;; This function calls:
  6456 ;;		___aldiv
  6457 ;;		___almod
  6458 ;;		___ftmul
  6459 ;;		___fttol
  6460 ;;		___ltdiv
  6461 ;;		___ltmod
  6462 ;;		___lttoft
  6463 ;;		_round
  6464 ;; This function is called by:
  6465 ;;		_wakeup
  6466 ;; This function uses a non-reentrant model
  6467 ;;
  6468                           
  6469                           
  6470                           ;psect for function _restoreTime
  6471  0049                     _restoreTime:	
  6472                           
  6473                           ;clock_functions.c: 1009: float sleepy_seconds_adjusted = sleepy_seconds * extended_cali
      +                          bration;
  6474                           
  6475                           ;incstack = 0
  6476                           ; Regs used in _restoreTime: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6477  0049  3008               	movlw	low (_extended_calibration| (0+32768))
  6478  004A  0084               	movwf	4
  6479  004B  3090               	movlw	high (_extended_calibration| (0+32768))
  6480  004C  0085               	movwf	5
  6481  004D  3F00               	moviw [0]fsr0
  6482  004E  0020               	movlb	0	; select bank0
  6483  004F  00A0               	movwf	___ftmul@f1
  6484  0050  3F01               	moviw [1]fsr0
  6485  0051  00A1               	movwf	___ftmul@f1+1
  6486  0052  3F02               	moviw [2]fsr0
  6487  0053  00A2               	movwf	___ftmul@f1+2
  6488  0054  0857               	movf	_sleepy_seconds,w	;volatile
  6489  0055  00F8               	movwf	___lttoft@c
  6490  0056  0858               	movf	_sleepy_seconds+1,w	;volatile
  6491  0057  00F9               	movwf	___lttoft@c+1
  6492  0058  0859               	movf	_sleepy_seconds+2,w	;volatile
  6493  0059  00FA               	movwf	___lttoft@c+2
  6494  005A  318B  23FA  3180   	fcall	___lttoft
  6495  005D  0878               	movf	?___lttoft,w
  6496  005E  0020               	movlb	0	; select bank0
  6497  005F  00A3               	movwf	___ftmul@f2
  6498  0060  0879               	movf	?___lttoft+1,w
  6499  0061  00A4               	movwf	___ftmul@f2+1
  6500  0062  087A               	movf	?___lttoft+2,w
  6501  0063  00A5               	movwf	___ftmul@f2+2
  6502  0064  3182  2241  3180   	fcall	___ftmul
  6503  0067  0020               	movlb	0	; select bank0
  6504  0068  0820               	movf	?___ftmul,w
  6505  0069  00CA               	movwf	restoreTime@sleepy_seconds_adjusted
  6506  006A  0821               	movf	?___ftmul+1,w
  6507  006B  00CB               	movwf	restoreTime@sleepy_seconds_adjusted+1
  6508  006C  0822               	movf	?___ftmul+2,w
  6509  006D  00CC               	movwf	restoreTime@sleepy_seconds_adjusted+2
  6510                           
  6511                           ;clock_functions.c: 1010: float sleepy_seconds_rounded = round(sleepy_seconds_adjusted);
  6512  006E  084A               	movf	restoreTime@sleepy_seconds_adjusted,w
  6513  006F  00C1               	movwf	round@x
  6514  0070  084B               	movf	restoreTime@sleepy_seconds_adjusted+1,w
  6515  0071  00C2               	movwf	round@x+1
  6516  0072  084C               	movf	restoreTime@sleepy_seconds_adjusted+2,w
  6517  0073  00C3               	movwf	round@x+2
  6518  0074  318F  27AF  3180   	fcall	_round
  6519  0077  0020               	movlb	0	; select bank0
  6520  0078  0841               	movf	?_round,w
  6521  0079  00CD               	movwf	restoreTime@sleepy_seconds_rounded
  6522  007A  0842               	movf	?_round+1,w
  6523  007B  00CE               	movwf	restoreTime@sleepy_seconds_rounded+1
  6524  007C  0843               	movf	?_round+2,w
  6525  007D  00CF               	movwf	restoreTime@sleepy_seconds_rounded+2
  6526                           
  6527                           ;clock_functions.c: 1011: sleepy_seconds = (unsigned short long) sleepy_seconds_rounded;
  6528  007E  084D               	movf	restoreTime@sleepy_seconds_rounded,w
  6529  007F  00F0               	movwf	___fttol@f1
  6530  0080  084E               	movf	restoreTime@sleepy_seconds_rounded+1,w
  6531  0081  00F1               	movwf	___fttol@f1+1
  6532  0082  084F               	movf	restoreTime@sleepy_seconds_rounded+2,w
  6533  0083  00F2               	movwf	___fttol@f1+2
  6534  0084  3184  2438  3180   	fcall	___fttol
  6535  0087  0872               	movf	?___fttol+2,w
  6536  0088  0020               	movlb	0	; select bank0
  6537  0089  00D9               	movwf	_sleepy_seconds+2	;volatile
  6538  008A  0871               	movf	?___fttol+1,w
  6539  008B  00D8               	movwf	_sleepy_seconds+1	;volatile
  6540  008C  0870               	movf	?___fttol,w
  6541  008D  00D7               	movwf	_sleepy_seconds	;volatile
  6542  008E                     i1l706:	
  6543                           ;clock_functions.c: 1014: while (sleepy_seconds >= 86400) {
  6544                           
  6545  008E  3001               	movlw	1
  6546  008F  0259               	subwf	_sleepy_seconds+2,w	;volatile
  6547  0090  1D03               	skipz
  6548  0091  2898               	goto	u304_25
  6549  0092  3051               	movlw	81
  6550  0093  0258               	subwf	_sleepy_seconds+1,w	;volatile
  6551  0094  1D03               	skipz
  6552  0095  2898               	goto	u304_25
  6553  0096  3080               	movlw	128
  6554  0097  0257               	subwf	_sleepy_seconds,w	;volatile
  6555  0098                     u304_25:	
  6556  0098  1C03               	btfss	3,0
  6557  0099  28A7               	goto	i1l3000
  6558                           
  6559                           ;clock_functions.c: 1016: sleepy_seconds -= 86400;
  6560  009A  3080               	movlw	128
  6561  009B  00C7               	movwf	??_restoreTime
  6562  009C  3051               	movlw	81
  6563  009D  00C8               	movwf	??_restoreTime+1
  6564  009E  3001               	movlw	1
  6565  009F  00C9               	movwf	??_restoreTime+2
  6566  00A0  0847               	movf	??_restoreTime,w
  6567  00A1  02D7               	subwf	_sleepy_seconds,f	;volatile
  6568  00A2  0848               	movf	??_restoreTime+1,w
  6569  00A3  3BD8               	subwfb	_sleepy_seconds+1,f	;volatile
  6570  00A4  0849               	movf	??_restoreTime+2,w
  6571  00A5  3BD9               	subwfb	_sleepy_seconds+2,f	;volatile
  6572  00A6  288E               	goto	i1l706
  6573  00A7                     i1l3000:	
  6574                           
  6575                           ;clock_functions.c: 1018: }
  6576                           ;clock_functions.c: 1021: int calc_seconds = (sleepy_seconds % 60);
  6577  00A7  303C               	movlw	60
  6578  00A8  00F0               	movwf	___ltmod@divisor
  6579  00A9  3000               	movlw	0
  6580  00AA  00F1               	movwf	___ltmod@divisor+1
  6581  00AB  3000               	movlw	0
  6582  00AC  00F2               	movwf	___ltmod@divisor+2
  6583  00AD  0857               	movf	_sleepy_seconds,w	;volatile
  6584  00AE  00F3               	movwf	___ltmod@dividend
  6585  00AF  0858               	movf	_sleepy_seconds+1,w	;volatile
  6586  00B0  00F4               	movwf	___ltmod@dividend+1
  6587  00B1  0859               	movf	_sleepy_seconds+2,w	;volatile
  6588  00B2  00F5               	movwf	___ltmod@dividend+2
  6589  00B3  318E  2640  3180   	fcall	___ltmod
  6590  00B6  0871               	movf	?___ltmod+1,w
  6591  00B7  0020               	movlb	0	; select bank0
  6592  00B8  00D1               	movwf	restoreTime@calc_seconds+1
  6593  00B9  0870               	movf	?___ltmod,w
  6594  00BA  00D0               	movwf	restoreTime@calc_seconds
  6595                           
  6596                           ;clock_functions.c: 1022: int calc_minutes = (sleepy_seconds % 3600) / 60;
  6597  00BB  303C               	movlw	60
  6598  00BC  00F8               	movwf	___ltdiv@divisor
  6599  00BD  3000               	movlw	0
  6600  00BE  00F9               	movwf	___ltdiv@divisor+1
  6601  00BF  3000               	movlw	0
  6602  00C0  00FA               	movwf	___ltdiv@divisor+2
  6603  00C1  0857               	movf	_sleepy_seconds,w	;volatile
  6604  00C2  00F3               	movwf	___ltmod@dividend
  6605  00C3  0858               	movf	_sleepy_seconds+1,w	;volatile
  6606  00C4  00F4               	movwf	___ltmod@dividend+1
  6607  00C5  0859               	movf	_sleepy_seconds+2,w	;volatile
  6608  00C6  00F5               	movwf	___ltmod@dividend+2
  6609  00C7  3010               	movlw	16
  6610  00C8  00F0               	movwf	___ltmod@divisor
  6611  00C9  300E               	movlw	14
  6612  00CA  00F1               	movwf	___ltmod@divisor+1
  6613  00CB  3000               	movlw	0
  6614  00CC  00F2               	movwf	___ltmod@divisor+2
  6615  00CD  318E  2640  3180   	fcall	___ltmod
  6616  00D0  0870               	movf	?___ltmod,w
  6617  00D1  00FB               	movwf	___ltdiv@dividend
  6618  00D2  0871               	movf	?___ltmod+1,w
  6619  00D3  00FC               	movwf	___ltdiv@dividend+1
  6620  00D4  0872               	movf	?___ltmod+2,w
  6621  00D5  00FD               	movwf	___ltdiv@dividend+2
  6622  00D6  318F  276A  3180   	fcall	___ltdiv
  6623  00D9  0879               	movf	?___ltdiv+1,w
  6624  00DA  0020               	movlb	0	; select bank0
  6625  00DB  00D3               	movwf	restoreTime@calc_minutes+1
  6626  00DC  0878               	movf	?___ltdiv,w
  6627  00DD  00D2               	movwf	restoreTime@calc_minutes
  6628                           
  6629                           ;clock_functions.c: 1023: int calc_hours = (sleepy_seconds % 86400) / 3600;
  6630  00DE  3000               	movlw	0
  6631  00DF  00A3               	movwf	___aldiv@divisor+3
  6632  00E0  3000               	movlw	0
  6633  00E1  00A2               	movwf	___aldiv@divisor+2
  6634  00E2  300E               	movlw	14
  6635  00E3  00A1               	movwf	___aldiv@divisor+1
  6636  00E4  3010               	movlw	16
  6637  00E5  00A0               	movwf	___aldiv@divisor
  6638  00E6  0857               	movf	_sleepy_seconds,w	;volatile
  6639  00E7  00F4               	movwf	___almod@dividend
  6640  00E8  0858               	movf	_sleepy_seconds+1,w	;volatile
  6641  00E9  00F5               	movwf	___almod@dividend+1
  6642  00EA  0859               	movf	_sleepy_seconds+2,w	;volatile
  6643  00EB  00F6               	movwf	___almod@dividend+2
  6644  00EC  01F7               	clrf	___almod@dividend+3
  6645  00ED  3000               	movlw	0
  6646  00EE  00F3               	movwf	___almod@divisor+3
  6647  00EF  3001               	movlw	1
  6648  00F0  00F2               	movwf	___almod@divisor+2
  6649  00F1  3051               	movlw	81
  6650  00F2  00F1               	movwf	___almod@divisor+1
  6651  00F3  3080               	movlw	128
  6652  00F4  00F0               	movwf	___almod@divisor
  6653  00F5  3186  2649  3180   	fcall	___almod
  6654  00F8  0873               	movf	?___almod+3,w
  6655  00F9  0020               	movlb	0	; select bank0
  6656  00FA  00A7               	movwf	___aldiv@dividend+3
  6657  00FB  0872               	movf	?___almod+2,w
  6658  00FC  00A6               	movwf	___aldiv@dividend+2
  6659  00FD  0871               	movf	?___almod+1,w
  6660  00FE  00A5               	movwf	___aldiv@dividend+1
  6661  00FF  0870               	movf	?___almod,w
  6662  0100  00A4               	movwf	___aldiv@dividend
  6663  0101  3185  25C7  3180   	fcall	___aldiv
  6664  0104  0020               	movlb	0	; select bank0
  6665  0105  0821               	movf	?___aldiv+1,w
  6666  0106  00D5               	movwf	restoreTime@calc_hours+1
  6667  0107  0820               	movf	?___aldiv,w
  6668  0108  00D4               	movwf	restoreTime@calc_hours
  6669                           
  6670                           ;clock_functions.c: 1026: seconds = seconds + calc_seconds;
  6671  0109  0866               	movf	_seconds,w	;volatile
  6672  010A  0750               	addwf	restoreTime@calc_seconds,w
  6673  010B  00E6               	movwf	_seconds	;volatile
  6674  010C  0867               	movf	_seconds+1,w	;volatile
  6675  010D  3D51               	addwfc	restoreTime@calc_seconds+1,w
  6676  010E  00E7               	movwf	_seconds+1	;volatile
  6677                           
  6678                           ;clock_functions.c: 1027: minutes = minutes + calc_minutes;
  6679  010F  0864               	movf	_minutes,w	;volatile
  6680  0110  0752               	addwf	restoreTime@calc_minutes,w
  6681  0111  00E4               	movwf	_minutes	;volatile
  6682  0112  0865               	movf	_minutes+1,w	;volatile
  6683  0113  3D53               	addwfc	restoreTime@calc_minutes+1,w
  6684  0114  00E5               	movwf	_minutes+1	;volatile
  6685                           
  6686                           ;clock_functions.c: 1028: hours = hours + calc_hours;
  6687  0115  0862               	movf	_hours,w	;volatile
  6688  0116  0754               	addwf	restoreTime@calc_hours,w
  6689  0117  00E2               	movwf	_hours	;volatile
  6690  0118  0863               	movf	_hours+1,w	;volatile
  6691  0119  3D55               	addwfc	restoreTime@calc_hours+1,w
  6692  011A  00E3               	movwf	_hours+1	;volatile
  6693                           
  6694                           ;clock_functions.c: 1031: if (seconds >= 60) {
  6695  011B  3000               	movlw	0
  6696  011C  0267               	subwf	_seconds+1,w	;volatile
  6697  011D  303C               	movlw	60
  6698  011E  1903               	skipnz
  6699  011F  0266               	subwf	_seconds,w	;volatile
  6700  0120  1C03               	skipc
  6701  0121  292A               	goto	i1l709
  6702                           
  6703                           ;clock_functions.c: 1033: seconds -= 60;
  6704  0122  303C               	movlw	60
  6705  0123  02E6               	subwf	_seconds,f	;volatile
  6706  0124  3000               	movlw	0
  6707  0125  3BE7               	subwfb	_seconds+1,f	;volatile
  6708                           
  6709                           ;clock_functions.c: 1034: minutes++;
  6710  0126  3001               	movlw	1
  6711  0127  07E4               	addwf	_minutes,f	;volatile
  6712  0128  3000               	movlw	0
  6713  0129  3DE5               	addwfc	_minutes+1,f	;volatile
  6714  012A                     i1l709:	
  6715                           
  6716                           ;clock_functions.c: 1035: }
  6717                           ;clock_functions.c: 1037: if (minutes >= 60) {
  6718  012A  3000               	movlw	0
  6719  012B  0265               	subwf	_minutes+1,w	;volatile
  6720  012C  303C               	movlw	60
  6721  012D  1903               	skipnz
  6722  012E  0264               	subwf	_minutes,w	;volatile
  6723  012F  1C03               	skipc
  6724  0130  2939               	goto	i1l710
  6725                           
  6726                           ;clock_functions.c: 1039: minutes -= 60;
  6727  0131  303C               	movlw	60
  6728  0132  02E4               	subwf	_minutes,f	;volatile
  6729  0133  3000               	movlw	0
  6730  0134  3BE5               	subwfb	_minutes+1,f	;volatile
  6731                           
  6732                           ;clock_functions.c: 1040: hours++;
  6733  0135  3001               	movlw	1
  6734  0136  07E2               	addwf	_hours,f	;volatile
  6735  0137  3000               	movlw	0
  6736  0138  3DE3               	addwfc	_hours+1,f	;volatile
  6737  0139                     i1l710:	
  6738                           
  6739                           ;clock_functions.c: 1042: }
  6740                           ;clock_functions.c: 1044: if (hours >= 24) {
  6741  0139  3000               	movlw	0
  6742  013A  0263               	subwf	_hours+1,w	;volatile
  6743  013B  3018               	movlw	24
  6744  013C  1903               	skipnz
  6745  013D  0262               	subwf	_hours,w	;volatile
  6746  013E  1C03               	skipc
  6747  013F  2944               	goto	i1l711
  6748                           
  6749                           ;clock_functions.c: 1046: hours -= 24;
  6750  0140  3018               	movlw	24
  6751  0141  02E2               	subwf	_hours,f	;volatile
  6752  0142  3000               	movlw	0
  6753  0143  3BE3               	subwfb	_hours+1,f	;volatile
  6754  0144                     i1l711:	
  6755                           
  6756                           ;clock_functions.c: 1048: }
  6757                           ;clock_functions.c: 1051: sleepy_seconds = 0;
  6758  0144  3000               	movlw	0
  6759  0145  00D7               	movwf	_sleepy_seconds	;volatile
  6760  0146  3000               	movlw	0
  6761  0147  00D8               	movwf	_sleepy_seconds+1	;volatile
  6762  0148  3000               	movlw	0
  6763  0149  00D9               	movwf	_sleepy_seconds+2	;volatile
  6764  014A  0008               	return
  6765  014B                     __end_of_restoreTime:	
  6766                           
  6767                           	psect	text53
  6768  0FAF                     __ptext53:	
  6769 ;; *************** function _round *****************
  6770 ;; Defined at:
  6771 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\round.c"
  6772 ;; Parameters:    Size  Location     Type
  6773 ;;  x               3   33[BANK0 ] void 
  6774 ;; Auto vars:     Size  Location     Type
  6775 ;;  f               3   36[BANK0 ] void 
  6776 ;; Return value:  Size  Location     Type
  6777 ;;                  3   33[BANK0 ] void 
  6778 ;; Registers used:
  6779 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6780 ;; Tracked objects:
  6781 ;;		On entry : 0/0
  6782 ;;		On exit  : 0/0
  6783 ;;		Unchanged: 0/0
  6784 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6785 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6786 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6787 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6788 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6789 ;;Total ram usage:        6 bytes
  6790 ;; Hardware stack levels used:    1
  6791 ;; Hardware stack levels required when called:    3
  6792 ;; This function calls:
  6793 ;;		___ftadd
  6794 ;;		___ftneg
  6795 ;;		_trunc
  6796 ;; This function is called by:
  6797 ;;		_restoreTime
  6798 ;; This function uses a non-reentrant model
  6799 ;;
  6800                           
  6801                           
  6802                           ;psect for function _round
  6803  0FAF                     _round:	
  6804                           
  6805                           ;incstack = 0
  6806                           ; Regs used in _round: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  6807  0FAF  0020               	movlb	0	; select bank0
  6808  0FB0  0841               	movf	round@x,w
  6809  0FB1  00B4               	movwf	___ftadd@f1
  6810  0FB2  0842               	movf	round@x+1,w
  6811  0FB3  00B5               	movwf	___ftadd@f1+1
  6812  0FB4  0843               	movf	round@x+2,w
  6813  0FB5  00B6               	movwf	___ftadd@f1+2
  6814  0FB6  0841               	movf	round@x,w
  6815  0FB7  00A8               	movwf	trunc@x
  6816  0FB8  0842               	movf	round@x+1,w
  6817  0FB9  00A9               	movwf	trunc@x+1
  6818  0FBA  0843               	movf	round@x+2,w
  6819  0FBB  00AA               	movwf	trunc@x+2
  6820  0FBC  318F  2729  318F   	fcall	_trunc
  6821  0FBF  0020               	movlb	0	; select bank0
  6822  0FC0  0828               	movf	?_trunc,w
  6823  0FC1  00B1               	movwf	___ftneg@f1
  6824  0FC2  0829               	movf	?_trunc+1,w
  6825  0FC3  00B2               	movwf	___ftneg@f1+1
  6826  0FC4  082A               	movf	?_trunc+2,w
  6827  0FC5  00B3               	movwf	___ftneg@f1+2
  6828  0FC6  318B  2325  318F   	fcall	___ftneg
  6829  0FC9  0020               	movlb	0	; select bank0
  6830  0FCA  0831               	movf	?___ftneg,w
  6831  0FCB  00B7               	movwf	___ftadd@f2
  6832  0FCC  0832               	movf	?___ftneg+1,w
  6833  0FCD  00B8               	movwf	___ftadd@f2+1
  6834  0FCE  0833               	movf	?___ftneg+2,w
  6835  0FCF  00B9               	movwf	___ftadd@f2+2
  6836  0FD0  3181  214B  318F   	fcall	___ftadd
  6837  0FD3  0020               	movlb	0	; select bank0
  6838  0FD4  0834               	movf	?___ftadd,w
  6839  0FD5  00C4               	movwf	round@f
  6840  0FD6  0835               	movf	?___ftadd+1,w
  6841  0FD7  00C5               	movwf	round@f+1
  6842  0FD8  0836               	movf	?___ftadd+2,w
  6843  0FD9  00C6               	movwf	round@f+2
  6844  0FDA  0844               	movf	round@f,w
  6845  0FDB  00B4               	movwf	___ftadd@f1
  6846  0FDC  0845               	movf	round@f+1,w
  6847  0FDD  00B5               	movwf	___ftadd@f1+1
  6848  0FDE  0846               	movf	round@f+2,w
  6849  0FDF  00B6               	movwf	___ftadd@f1+2
  6850  0FE0  0841               	movf	round@x,w
  6851  0FE1  00B7               	movwf	___ftadd@f2
  6852  0FE2  0842               	movf	round@x+1,w
  6853  0FE3  00B8               	movwf	___ftadd@f2+1
  6854  0FE4  0843               	movf	round@x+2,w
  6855  0FE5  00B9               	movwf	___ftadd@f2+2
  6856  0FE6  3181  214B  318F   	fcall	___ftadd
  6857  0FE9  0020               	movlb	0	; select bank0
  6858  0FEA  0834               	movf	?___ftadd,w
  6859  0FEB  00C1               	movwf	round@x
  6860  0FEC  0835               	movf	?___ftadd+1,w
  6861  0FED  00C2               	movwf	round@x+1
  6862  0FEE  0836               	movf	?___ftadd+2,w
  6863  0FEF  00C3               	movwf	round@x+2
  6864  0FF0  0841               	movf	round@x,w
  6865  0FF1  00A8               	movwf	trunc@x
  6866  0FF2  0842               	movf	round@x+1,w
  6867  0FF3  00A9               	movwf	trunc@x+1
  6868  0FF4  0843               	movf	round@x+2,w
  6869  0FF5  00AA               	movwf	trunc@x+2
  6870  0FF6  318F  2729         	fcall	_trunc
  6871  0FF8  0020               	movlb	0	; select bank0
  6872  0FF9  0828               	movf	?_trunc,w
  6873  0FFA  00C1               	movwf	?_round
  6874  0FFB  0829               	movf	?_trunc+1,w
  6875  0FFC  00C2               	movwf	?_round+1
  6876  0FFD  082A               	movf	?_trunc+2,w
  6877  0FFE  00C3               	movwf	?_round+2
  6878  0FFF  0008               	return
  6879  1000                     __end_of_round:	
  6880                           
  6881                           	psect	text54
  6882  0F29                     __ptext54:	
  6883 ;; *************** function _trunc *****************
  6884 ;; Defined at:
  6885 ;;		line 13 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\trunc.c"
  6886 ;; Parameters:    Size  Location     Type
  6887 ;;  x               3    8[BANK0 ] void 
  6888 ;; Auto vars:     Size  Location     Type
  6889 ;;  i               3   12[BANK0 ] void 
  6890 ;;  expon           2   15[BANK0 ] int 
  6891 ;; Return value:  Size  Location     Type
  6892 ;;                  3    8[BANK0 ] int 
  6893 ;; Registers used:
  6894 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6895 ;; Tracked objects:
  6896 ;;		On entry : 0/0
  6897 ;;		On exit  : 0/0
  6898 ;;		Unchanged: 0/0
  6899 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6900 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6901 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6902 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6903 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6904 ;;Total ram usage:        9 bytes
  6905 ;; Hardware stack levels used:    1
  6906 ;; Hardware stack levels required when called:    2
  6907 ;; This function calls:
  6908 ;;		___altoft
  6909 ;;		___fttol
  6910 ;;		_frexp
  6911 ;; This function is called by:
  6912 ;;		_round
  6913 ;; This function uses a non-reentrant model
  6914 ;;
  6915                           
  6916                           
  6917                           ;psect for function _trunc
  6918  0F29                     _trunc:	
  6919                           
  6920                           ;incstack = 0
  6921                           ; Regs used in _trunc: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  6922  0F29  0020               	movlb	0	; select bank0
  6923  0F2A  0828               	movf	trunc@x,w
  6924  0F2B  00F0               	movwf	frexp@value
  6925  0F2C  0829               	movf	trunc@x+1,w
  6926  0F2D  00F1               	movwf	frexp@value+1
  6927  0F2E  082A               	movf	trunc@x+2,w
  6928  0F2F  00F2               	movwf	frexp@value+2
  6929  0F30  302F               	movlw	(low (trunc@expon| 0))& (0+255)
  6930  0F31  00AB               	movwf	??_trunc
  6931  0F32  082B               	movf	??_trunc,w
  6932  0F33  00F3               	movwf	frexp@eptr
  6933  0F34  318E  260B  318F   	fcall	_frexp
  6934  0F37  0020               	movlb	0	; select bank0
  6935  0F38  1FB0               	btfss	trunc@expon+1,7
  6936  0F39  2F41               	goto	i1l2738
  6937  0F3A  3000               	movlw	0
  6938  0F3B  00A8               	movwf	?_trunc
  6939  0F3C  3000               	movlw	0
  6940  0F3D  00A9               	movwf	?_trunc+1
  6941  0F3E  3000               	movlw	0
  6942  0F3F  00AA               	movwf	?_trunc+2
  6943  0F40  0008               	return
  6944  0F41                     i1l2738:	
  6945  0F41  3000               	movlw	0
  6946  0F42  0230               	subwf	trunc@expon+1,w
  6947  0F43  3015               	movlw	21
  6948  0F44  1903               	skipnz
  6949  0F45  022F               	subwf	trunc@expon,w
  6950  0F46  1803               	btfsc	3,0
  6951  0F47  0008               	return
  6952  0F48  0828               	movf	trunc@x,w
  6953  0F49  00F0               	movwf	___fttol@f1
  6954  0F4A  0829               	movf	trunc@x+1,w
  6955  0F4B  00F1               	movwf	___fttol@f1+1
  6956  0F4C  082A               	movf	trunc@x+2,w
  6957  0F4D  00F2               	movwf	___fttol@f1+2
  6958  0F4E  3184  2438  318F   	fcall	___fttol
  6959  0F51  0873               	movf	?___fttol+3,w
  6960  0F52  0020               	movlb	0	; select bank0
  6961  0F53  00A3               	movwf	___altoft@c+3
  6962  0F54  0872               	movf	?___fttol+2,w
  6963  0F55  00A2               	movwf	___altoft@c+2
  6964  0F56  0871               	movf	?___fttol+1,w
  6965  0F57  00A1               	movwf	___altoft@c+1
  6966  0F58  0870               	movf	?___fttol,w
  6967  0F59  00A0               	movwf	___altoft@c
  6968  0F5A  318E  26EC         	fcall	___altoft
  6969  0F5C  0020               	movlb	0	; select bank0
  6970  0F5D  0820               	movf	?___altoft,w
  6971  0F5E  00AC               	movwf	trunc@i
  6972  0F5F  0821               	movf	?___altoft+1,w
  6973  0F60  00AD               	movwf	trunc@i+1
  6974  0F61  0822               	movf	?___altoft+2,w
  6975  0F62  00AE               	movwf	trunc@i+2
  6976  0F63  082C               	movf	trunc@i,w
  6977  0F64  00A8               	movwf	?_trunc
  6978  0F65  082D               	movf	trunc@i+1,w
  6979  0F66  00A9               	movwf	?_trunc+1
  6980  0F67  082E               	movf	trunc@i+2,w
  6981  0F68  00AA               	movwf	?_trunc+2
  6982  0F69  0008               	return
  6983  0F6A                     __end_of_trunc:	
  6984                           
  6985                           	psect	text55
  6986  0E0B                     __ptext55:	
  6987 ;; *************** function _frexp *****************
  6988 ;; Defined at:
  6989 ;;		line 254 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\frexp.c"
  6990 ;; Parameters:    Size  Location     Type
  6991 ;;  value           3    0[COMMON] int 
  6992 ;;  eptr            1    3[COMMON] PTR int 
  6993 ;;		 -> trunc@expon(2), 
  6994 ;; Auto vars:     Size  Location     Type
  6995 ;;		None
  6996 ;; Return value:  Size  Location     Type
  6997 ;;                  3    0[COMMON] PTR int 
  6998 ;; Registers used:
  6999 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  7000 ;; Tracked objects:
  7001 ;;		On entry : 0/0
  7002 ;;		On exit  : 0/0
  7003 ;;		Unchanged: 0/0
  7004 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7005 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7006 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7007 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7008 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7009 ;;Total ram usage:        6 bytes
  7010 ;; Hardware stack levels used:    1
  7011 ;; This function calls:
  7012 ;;		Nothing
  7013 ;; This function is called by:
  7014 ;;		_trunc
  7015 ;; This function uses a non-reentrant model
  7016 ;;
  7017                           
  7018                           
  7019                           ;psect for function _frexp
  7020  0E0B                     _frexp:	
  7021                           
  7022                           ;incstack = 0
  7023                           ; Regs used in _frexp: [wreg+fsr1l+fsr1h+status,2+status,0]
  7024  0E0B  0872               	movf	frexp@value+2,w
  7025  0E0C  0471               	iorwf	frexp@value+1,w
  7026  0E0D  0470               	iorwf	frexp@value,w
  7027  0E0E  1D03               	skipz
  7028  0E0F  2E17               	goto	i1l2642
  7029  0E10  0873               	movf	frexp@eptr,w
  7030  0E11  0086               	movwf	6
  7031  0E12  0187               	clrf	7
  7032  0E13  3000               	movlw	0
  7033  0E14  3FC0               	movwi [0]fsr1
  7034  0E15  3FC1               	movwi [1]fsr1
  7035                           
  7036                           ;	Return value of _frexp is never used
  7037  0E16  0008               	return
  7038  0E17                     i1l2642:	
  7039  0E17  0872               	movf	frexp@value+2,w
  7040  0E18  397F               	andlw	127
  7041  0E19  00F4               	movwf	??_frexp
  7042  0E1A  01F5               	clrf	??_frexp+1
  7043  0E1B  35F4               	lslf	??_frexp,f
  7044  0E1C  0DF5               	rlf	??_frexp+1,f
  7045  0E1D  0873               	movf	frexp@eptr,w
  7046  0E1E  0086               	movwf	6
  7047  0E1F  0187               	clrf	7
  7048  0E20  0874               	movf	??_frexp,w
  7049  0E21  3FC0               	movwi [0]fsr1
  7050  0E22  0875               	movf	??_frexp+1,w
  7051  0E23  3FC1               	movwi [1]fsr1
  7052  0E24  0D71               	rlf	frexp@value+1,w
  7053  0E25  0D71               	rlf	frexp@value+1,w
  7054  0E26  3901               	andlw	1
  7055  0E27  00F4               	movwf	??_frexp
  7056  0E28  01F5               	clrf	??_frexp+1
  7057  0E29  0873               	movf	frexp@eptr,w
  7058  0E2A  0086               	movwf	6
  7059  0E2B  0187               	clrf	7
  7060  0E2C  0874               	movf	??_frexp,w
  7061  0E2D  0481               	iorwf	1,f
  7062  0E2E  3141               	addfsr 1,1
  7063  0E2F  0875               	movf	??_frexp+1,w
  7064  0E30  0481               	iorwf	1,f
  7065  0E31  0873               	movf	frexp@eptr,w
  7066  0E32  0086               	movwf	6
  7067  0E33  0187               	clrf	7
  7068  0E34  3082               	movlw	130
  7069  0E35  0781               	addwf	1,f
  7070  0E36  3141               	addfsr 1,1
  7071  0E37  30FF               	movlw	255
  7072  0E38  3D81               	addwfc	1,f
  7073  0E39  317F               	addfsr 1,-1
  7074  0E3A  0872               	movf	frexp@value+2,w
  7075  0E3B  3980               	andlw	-128
  7076  0E3C  383F               	iorlw	63
  7077  0E3D  00F2               	movwf	frexp@value+2
  7078  0E3E  13F1               	bcf	frexp@value+1,7
  7079  0E3F  0008               	return
  7080  0E40                     __end_of_frexp:	
  7081                           ;	Return value of _frexp is never used
  7082                           
  7083                           
  7084                           	psect	text56
  7085  0438                     __ptext56:	
  7086 ;; *************** function ___fttol *****************
  7087 ;; Defined at:
  7088 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\fttol.c"
  7089 ;; Parameters:    Size  Location     Type
  7090 ;;  f1              3    0[COMMON] float 
  7091 ;; Auto vars:     Size  Location     Type
  7092 ;;  lval            4    9[COMMON] unsigned long 
  7093 ;;  exp1            1   13[COMMON] unsigned char 
  7094 ;;  sign1           1    8[COMMON] unsigned char 
  7095 ;; Return value:  Size  Location     Type
  7096 ;;                  4    0[COMMON] long 
  7097 ;; Registers used:
  7098 ;;		wreg, status,2, status,0
  7099 ;; Tracked objects:
  7100 ;;		On entry : 0/0
  7101 ;;		On exit  : 0/0
  7102 ;;		Unchanged: 0/0
  7103 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7104 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7105 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7106 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7107 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7108 ;;Total ram usage:       14 bytes
  7109 ;; Hardware stack levels used:    1
  7110 ;; This function calls:
  7111 ;;		Nothing
  7112 ;; This function is called by:
  7113 ;;		_restoreTime
  7114 ;;		_trunc
  7115 ;; This function uses a non-reentrant model
  7116 ;;
  7117                           
  7118                           
  7119                           ;psect for function ___fttol
  7120  0438                     ___fttol:	
  7121                           
  7122                           ;incstack = 0
  7123                           ; Regs used in ___fttol: [wreg+status,2+status,0]
  7124  0438  0870               	movf	___fttol@f1,w
  7125  0439  00F4               	movwf	??___fttol
  7126  043A  0871               	movf	___fttol@f1+1,w
  7127  043B  00F5               	movwf	??___fttol+1
  7128  043C  0872               	movf	___fttol@f1+2,w
  7129  043D  00F6               	movwf	??___fttol+2
  7130  043E  1003               	clrc
  7131  043F  0D75               	rlf	??___fttol+1,w
  7132  0440  0D76               	rlf	??___fttol+2,w
  7133  0441  00F7               	movwf	??___fttol+3
  7134  0442  0877               	movf	??___fttol+3,w
  7135  0443  00FD               	movwf	___fttol@exp1
  7136  0444  087D               	movf	___fttol@exp1,w
  7137  0445  1D03               	btfss	3,2
  7138  0446  2C50               	goto	i1l2600
  7139  0447  3000               	movlw	0
  7140  0448  00F3               	movwf	?___fttol+3
  7141  0449  3000               	movlw	0
  7142  044A  00F2               	movwf	?___fttol+2
  7143  044B  3000               	movlw	0
  7144  044C  00F1               	movwf	?___fttol+1
  7145  044D  3000               	movlw	0
  7146  044E  00F0               	movwf	?___fttol
  7147  044F  0008               	return
  7148  0450                     i1l2600:	
  7149  0450  0870               	movf	___fttol@f1,w
  7150  0451  00F4               	movwf	??___fttol
  7151  0452  0871               	movf	___fttol@f1+1,w
  7152  0453  00F5               	movwf	??___fttol+1
  7153  0454  0872               	movf	___fttol@f1+2,w
  7154  0455  00F6               	movwf	??___fttol+2
  7155  0456  3017               	movlw	23
  7156  0457                     u208_25:	
  7157  0457  36F6               	lsrf	??___fttol+2,f
  7158  0458  0CF5               	rrf	??___fttol+1,f
  7159  0459  0CF4               	rrf	??___fttol,f
  7160  045A  0B89               	decfsz	9,f
  7161  045B  2C57               	goto	u208_25
  7162  045C  0874               	movf	??___fttol,w
  7163  045D  00F7               	movwf	??___fttol+3
  7164  045E  0877               	movf	??___fttol+3,w
  7165  045F  00F8               	movwf	___fttol@sign1
  7166  0460  17F1               	bsf	___fttol@f1+1,7
  7167  0461  30FF               	movlw	255
  7168  0462  05F0               	andwf	___fttol@f1,f
  7169  0463  30FF               	movlw	255
  7170  0464  05F1               	andwf	___fttol@f1+1,f
  7171  0465  3000               	movlw	0
  7172  0466  05F2               	andwf	___fttol@f1+2,f
  7173  0467  0870               	movf	___fttol@f1,w
  7174  0468  00F9               	movwf	___fttol@lval
  7175  0469  0871               	movf	___fttol@f1+1,w
  7176  046A  00FA               	movwf	___fttol@lval+1
  7177  046B  0872               	movf	___fttol@f1+2,w
  7178  046C  00FB               	movwf	___fttol@lval+2
  7179  046D  01FC               	clrf	___fttol@lval+3
  7180  046E  308E               	movlw	142
  7181  046F  02FD               	subwf	___fttol@exp1,f
  7182  0470  1FFD               	btfss	___fttol@exp1,7
  7183  0471  2C8E               	goto	i1l2620
  7184  0472  087D               	movf	___fttol@exp1,w
  7185  0473  3A80               	xorlw	128
  7186  0474  3E8F               	addlw	143
  7187  0475  1803               	skipnc
  7188  0476  2C80               	goto	i1l2618
  7189  0477  3000               	movlw	0
  7190  0478  00F3               	movwf	?___fttol+3
  7191  0479  3000               	movlw	0
  7192  047A  00F2               	movwf	?___fttol+2
  7193  047B  3000               	movlw	0
  7194  047C  00F1               	movwf	?___fttol+1
  7195  047D  3000               	movlw	0
  7196  047E  00F0               	movwf	?___fttol
  7197  047F  0008               	return
  7198  0480                     i1l2618:	
  7199  0480  3001               	movlw	1
  7200  0481                     u211_25:	
  7201  0481  36FC               	lsrf	___fttol@lval+3,f
  7202  0482  0CFB               	rrf	___fttol@lval+2,f
  7203  0483  0CFA               	rrf	___fttol@lval+1,f
  7204  0484  0CF9               	rrf	___fttol@lval,f
  7205  0485  0B89               	decfsz	9,f
  7206  0486  2C81               	goto	u211_25
  7207  0487  3001               	movlw	1
  7208  0488  00F4               	movwf	??___fttol
  7209  0489  0874               	movf	??___fttol,w
  7210  048A  07FD               	addwf	___fttol@exp1,f
  7211  048B  1903               	btfsc	3,2
  7212  048C  2CA7               	goto	i1l2628
  7213  048D  2C80               	goto	i1l2618
  7214  048E                     i1l2620:	
  7215  048E  3018               	movlw	24
  7216  048F  027D               	subwf	___fttol@exp1,w
  7217  0490  1C03               	skipc
  7218  0491  2CA4               	goto	i1l1036
  7219  0492  3000               	movlw	0
  7220  0493  00F3               	movwf	?___fttol+3
  7221  0494  3000               	movlw	0
  7222  0495  00F2               	movwf	?___fttol+2
  7223  0496  3000               	movlw	0
  7224  0497  00F1               	movwf	?___fttol+1
  7225  0498  3000               	movlw	0
  7226  0499  00F0               	movwf	?___fttol
  7227  049A  0008               	return
  7228  049B                     i1l2626:	
  7229  049B  3001               	movlw	1
  7230  049C                     u214_25:	
  7231  049C  35F9               	lslf	___fttol@lval,f
  7232  049D  0DFA               	rlf	___fttol@lval+1,f
  7233  049E  0DFB               	rlf	___fttol@lval+2,f
  7234  049F  0DFC               	rlf	___fttol@lval+3,f
  7235  04A0  0B89               	decfsz	9,f
  7236  04A1  2C9C               	goto	u214_25
  7237  04A2  3001               	movlw	1
  7238  04A3  02FD               	subwf	___fttol@exp1,f
  7239  04A4                     i1l1036:	
  7240  04A4  087D               	movf	___fttol@exp1,w
  7241  04A5  1D03               	btfss	3,2
  7242  04A6  2C9B               	goto	i1l2626
  7243  04A7                     i1l2628:	
  7244  04A7  0878               	movf	___fttol@sign1,w
  7245  04A8  1903               	btfsc	3,2
  7246  04A9  2CB5               	goto	i1l2632
  7247  04AA  09F9               	comf	___fttol@lval,f
  7248  04AB  09FA               	comf	___fttol@lval+1,f
  7249  04AC  09FB               	comf	___fttol@lval+2,f
  7250  04AD  09FC               	comf	___fttol@lval+3,f
  7251  04AE  0AF9               	incf	___fttol@lval,f
  7252  04AF  1903               	skipnz
  7253  04B0  0AFA               	incf	___fttol@lval+1,f
  7254  04B1  1903               	skipnz
  7255  04B2  0AFB               	incf	___fttol@lval+2,f
  7256  04B3  1903               	skipnz
  7257  04B4  0AFC               	incf	___fttol@lval+3,f
  7258  04B5                     i1l2632:	
  7259  04B5  087C               	movf	___fttol@lval+3,w
  7260  04B6  00F3               	movwf	?___fttol+3
  7261  04B7  087B               	movf	___fttol@lval+2,w
  7262  04B8  00F2               	movwf	?___fttol+2
  7263  04B9  087A               	movf	___fttol@lval+1,w
  7264  04BA  00F1               	movwf	?___fttol+1
  7265  04BB  0879               	movf	___fttol@lval,w
  7266  04BC  00F0               	movwf	?___fttol
  7267  04BD  0008               	return
  7268  04BE                     __end_of___fttol:	
  7269                           
  7270                           	psect	text57
  7271  0EEC                     __ptext57:	
  7272 ;; *************** function ___altoft *****************
  7273 ;; Defined at:
  7274 ;;		line 42 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\altoft.c"
  7275 ;; Parameters:    Size  Location     Type
  7276 ;;  c               4    0[BANK0 ] long 
  7277 ;; Auto vars:     Size  Location     Type
  7278 ;;  sign            1    7[BANK0 ] unsigned char 
  7279 ;;  exp             1    6[BANK0 ] unsigned char 
  7280 ;; Return value:  Size  Location     Type
  7281 ;;                  3    0[BANK0 ] float 
  7282 ;; Registers used:
  7283 ;;		wreg, status,2, status,0, pclath, cstack
  7284 ;; Tracked objects:
  7285 ;;		On entry : 0/0
  7286 ;;		On exit  : 0/0
  7287 ;;		Unchanged: 0/0
  7288 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7289 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7290 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7291 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7292 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7293 ;;Total ram usage:        8 bytes
  7294 ;; Hardware stack levels used:    1
  7295 ;; Hardware stack levels required when called:    1
  7296 ;; This function calls:
  7297 ;;		___ftpack
  7298 ;; This function is called by:
  7299 ;;		_trunc
  7300 ;; This function uses a non-reentrant model
  7301 ;;
  7302                           
  7303                           
  7304                           ;psect for function ___altoft
  7305  0EEC                     ___altoft:	
  7306                           
  7307                           ;incstack = 0
  7308                           ; Regs used in ___altoft: [wreg+status,2+status,0+pclath+cstack]
  7309  0EEC  0020               	movlb	0	; select bank0
  7310  0EED  01A7               	clrf	___altoft@sign
  7311  0EEE  308E               	movlw	142
  7312  0EEF  00A4               	movwf	??___altoft
  7313  0EF0  0824               	movf	??___altoft,w
  7314  0EF1  00A6               	movwf	___altoft@exp
  7315  0EF2  1FA3               	btfss	___altoft@c+3,7
  7316  0EF3  2F01               	goto	i1l2588
  7317  0EF4  09A0               	comf	___altoft@c,f
  7318  0EF5  09A1               	comf	___altoft@c+1,f
  7319  0EF6  09A2               	comf	___altoft@c+2,f
  7320  0EF7  09A3               	comf	___altoft@c+3,f
  7321  0EF8  0AA0               	incf	___altoft@c,f
  7322  0EF9  1903               	skipnz
  7323  0EFA  0AA1               	incf	___altoft@c+1,f
  7324  0EFB  1903               	skipnz
  7325  0EFC  0AA2               	incf	___altoft@c+2,f
  7326  0EFD  1903               	skipnz
  7327  0EFE  0AA3               	incf	___altoft@c+3,f
  7328  0EFF  01A7               	clrf	___altoft@sign
  7329  0F00  0AA7               	incf	___altoft@sign,f
  7330  0F01                     i1l2588:	
  7331  0F01  30FF               	movlw	255
  7332  0F02  0523               	andwf	___altoft@c+3,w
  7333  0F03  1903               	btfsc	3,2
  7334  0F04  2F11               	goto	i1l2590
  7335  0F05  3001               	movlw	1
  7336  0F06                     u205_25:	
  7337  0F06  36A3               	lsrf	___altoft@c+3,f
  7338  0F07  0CA2               	rrf	___altoft@c+2,f
  7339  0F08  0CA1               	rrf	___altoft@c+1,f
  7340  0F09  0CA0               	rrf	___altoft@c,f
  7341  0F0A  0B89               	decfsz	9,f
  7342  0F0B  2F06               	goto	u205_25
  7343  0F0C  3001               	movlw	1
  7344  0F0D  00A4               	movwf	??___altoft
  7345  0F0E  0824               	movf	??___altoft,w
  7346  0F0F  07A6               	addwf	___altoft@exp,f
  7347  0F10  2F01               	goto	i1l2588
  7348  0F11                     i1l2590:	
  7349  0F11  0820               	movf	___altoft@c,w
  7350  0F12  00F0               	movwf	___ftpack@arg
  7351  0F13  0821               	movf	___altoft@c+1,w
  7352  0F14  00F1               	movwf	___ftpack@arg+1
  7353  0F15  0822               	movf	___altoft@c+2,w
  7354  0F16  00F2               	movwf	___ftpack@arg+2
  7355  0F17  0826               	movf	___altoft@exp,w
  7356  0F18  00A4               	movwf	??___altoft
  7357  0F19  0824               	movf	??___altoft,w
  7358  0F1A  00F3               	movwf	___ftpack@exp
  7359  0F1B  0827               	movf	___altoft@sign,w
  7360  0F1C  00A5               	movwf	??___altoft+1
  7361  0F1D  0825               	movf	??___altoft+1,w
  7362  0F1E  00F4               	movwf	___ftpack@sign
  7363  0F1F  3187  271B         	fcall	___ftpack
  7364  0F21  0870               	movf	?___ftpack,w
  7365  0F22  0020               	movlb	0	; select bank0
  7366  0F23  00A0               	movwf	?___altoft
  7367  0F24  0871               	movf	?___ftpack+1,w
  7368  0F25  00A1               	movwf	?___altoft+1
  7369  0F26  0872               	movf	?___ftpack+2,w
  7370  0F27  00A2               	movwf	?___altoft+2
  7371  0F28  0008               	return
  7372  0F29                     __end_of___altoft:	
  7373                           
  7374                           	psect	text58
  7375  0B25                     __ptext58:	
  7376 ;; *************** function ___ftneg *****************
  7377 ;; Defined at:
  7378 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftneg.c"
  7379 ;; Parameters:    Size  Location     Type
  7380 ;;  f1              3   17[BANK0 ] float 
  7381 ;; Auto vars:     Size  Location     Type
  7382 ;;		None
  7383 ;; Return value:  Size  Location     Type
  7384 ;;                  3   17[BANK0 ] float 
  7385 ;; Registers used:
  7386 ;;		wreg
  7387 ;; Tracked objects:
  7388 ;;		On entry : 0/0
  7389 ;;		On exit  : 0/0
  7390 ;;		Unchanged: 0/0
  7391 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7392 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7393 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7394 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7395 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7396 ;;Total ram usage:        3 bytes
  7397 ;; Hardware stack levels used:    1
  7398 ;; This function calls:
  7399 ;;		Nothing
  7400 ;; This function is called by:
  7401 ;;		_round
  7402 ;; This function uses a non-reentrant model
  7403 ;;
  7404                           
  7405                           
  7406                           ;psect for function ___ftneg
  7407  0B25                     ___ftneg:	
  7408                           
  7409                           ;incstack = 0
  7410                           ; Regs used in ___ftneg: [wreg]
  7411  0B25  0020               	movlb	0	; select bank0
  7412  0B26  0833               	movf	___ftneg@f1+2,w
  7413  0B27  0432               	iorwf	___ftneg@f1+1,w
  7414  0B28  0431               	iorwf	___ftneg@f1,w
  7415  0B29  1903               	skipnz
  7416  0B2A  0008               	return
  7417  0B2B  3080               	movlw	128
  7418  0B2C  06B3               	xorwf	___ftneg@f1+2,f
  7419  0B2D  0008               	return
  7420  0B2E                     __end_of___ftneg:	
  7421                           
  7422                           	psect	text59
  7423  014B                     __ptext59:	
  7424 ;; *************** function ___ftadd *****************
  7425 ;; Defined at:
  7426 ;;		line 86 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftadd.c"
  7427 ;; Parameters:    Size  Location     Type
  7428 ;;  f1              3   20[BANK0 ] float 
  7429 ;;  f2              3   23[BANK0 ] float 
  7430 ;; Auto vars:     Size  Location     Type
  7431 ;;  exp1            1   32[BANK0 ] unsigned char 
  7432 ;;  exp2            1   31[BANK0 ] unsigned char 
  7433 ;;  sign            1   30[BANK0 ] unsigned char 
  7434 ;; Return value:  Size  Location     Type
  7435 ;;                  3   20[BANK0 ] float 
  7436 ;; Registers used:
  7437 ;;		wreg, status,2, status,0, pclath, cstack
  7438 ;; Tracked objects:
  7439 ;;		On entry : 0/0
  7440 ;;		On exit  : 0/0
  7441 ;;		Unchanged: 0/0
  7442 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7443 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7444 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7445 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7446 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7447 ;;Total ram usage:       13 bytes
  7448 ;; Hardware stack levels used:    1
  7449 ;; Hardware stack levels required when called:    1
  7450 ;; This function calls:
  7451 ;;		___ftpack
  7452 ;; This function is called by:
  7453 ;;		_round
  7454 ;; This function uses a non-reentrant model
  7455 ;;
  7456                           
  7457                           
  7458                           ;psect for function ___ftadd
  7459  014B                     ___ftadd:	
  7460                           
  7461                           ;incstack = 0
  7462                           ; Regs used in ___ftadd: [wreg+status,2+status,0+pclath+cstack]
  7463  014B  0020               	movlb	0	; select bank0
  7464  014C  0834               	movf	___ftadd@f1,w
  7465  014D  00BA               	movwf	??___ftadd
  7466  014E  0835               	movf	___ftadd@f1+1,w
  7467  014F  00BB               	movwf	??___ftadd+1
  7468  0150  0836               	movf	___ftadd@f1+2,w
  7469  0151  00BC               	movwf	??___ftadd+2
  7470  0152  1003               	clrc
  7471  0153  0D3B               	rlf	??___ftadd+1,w
  7472  0154  0D3C               	rlf	??___ftadd+2,w
  7473  0155  00BD               	movwf	??___ftadd+3
  7474  0156  083D               	movf	??___ftadd+3,w
  7475  0157  00C0               	movwf	___ftadd@exp1
  7476  0158  0837               	movf	___ftadd@f2,w
  7477  0159  00BA               	movwf	??___ftadd
  7478  015A  0838               	movf	___ftadd@f2+1,w
  7479  015B  00BB               	movwf	??___ftadd+1
  7480  015C  0839               	movf	___ftadd@f2+2,w
  7481  015D  00BC               	movwf	??___ftadd+2
  7482  015E  1003               	clrc
  7483  015F  0D3B               	rlf	??___ftadd+1,w
  7484  0160  0D3C               	rlf	??___ftadd+2,w
  7485  0161  00BD               	movwf	??___ftadd+3
  7486  0162  083D               	movf	??___ftadd+3,w
  7487  0163  00BF               	movwf	___ftadd@exp2
  7488  0164  0840               	movf	___ftadd@exp1,w
  7489  0165  1903               	btfsc	3,2
  7490  0166  2973               	goto	i1l2658
  7491  0167  083F               	movf	___ftadd@exp2,w
  7492  0168  0240               	subwf	___ftadd@exp1,w
  7493  0169  1803               	skipnc
  7494  016A  297A               	goto	i1l2662
  7495  016B  0340               	decf	___ftadd@exp1,w
  7496  016C  3AFF               	xorlw	255
  7497  016D  073F               	addwf	___ftadd@exp2,w
  7498  016E  00BA               	movwf	??___ftadd
  7499  016F  3019               	movlw	25
  7500  0170  023A               	subwf	??___ftadd,w
  7501  0171  1C03               	skipc
  7502  0172  297A               	goto	i1l2662
  7503  0173                     i1l2658:	
  7504  0173  0837               	movf	___ftadd@f2,w
  7505  0174  00B4               	movwf	?___ftadd
  7506  0175  0838               	movf	___ftadd@f2+1,w
  7507  0176  00B5               	movwf	?___ftadd+1
  7508  0177  0839               	movf	___ftadd@f2+2,w
  7509  0178  00B6               	movwf	?___ftadd+2
  7510  0179  0008               	return
  7511  017A                     i1l2662:	
  7512  017A  083F               	movf	___ftadd@exp2,w
  7513  017B  1903               	btfsc	3,2
  7514  017C  0008               	return
  7515  017D  0840               	movf	___ftadd@exp1,w
  7516  017E  023F               	subwf	___ftadd@exp2,w
  7517  017F  1803               	skipnc
  7518  0180  2989               	goto	i1l2668
  7519  0181  033F               	decf	___ftadd@exp2,w
  7520  0182  3AFF               	xorlw	255
  7521  0183  0740               	addwf	___ftadd@exp1,w
  7522  0184  00BA               	movwf	??___ftadd
  7523  0185  3019               	movlw	25
  7524  0186  023A               	subwf	??___ftadd,w
  7525  0187  1803               	btfsc	3,0
  7526  0188  0008               	return
  7527  0189                     i1l2668:	
  7528  0189  3006               	movlw	6
  7529  018A  00BA               	movwf	??___ftadd
  7530  018B  083A               	movf	??___ftadd,w
  7531  018C  00BE               	movwf	___ftadd@sign
  7532  018D  1BB6               	btfsc	___ftadd@f1+2,7
  7533  018E  17BE               	bsf	___ftadd@sign,7
  7534  018F  1BB9               	btfsc	___ftadd@f2+2,7
  7535  0190  173E               	bsf	___ftadd@sign,6
  7536  0191  17B5               	bsf	___ftadd@f1+1,7
  7537  0192  30FF               	movlw	255
  7538  0193  05B4               	andwf	___ftadd@f1,f
  7539  0194  30FF               	movlw	255
  7540  0195  05B5               	andwf	___ftadd@f1+1,f
  7541  0196  3000               	movlw	0
  7542  0197  05B6               	andwf	___ftadd@f1+2,f
  7543  0198  17B8               	bsf	___ftadd@f2+1,7
  7544  0199  30FF               	movlw	255
  7545  019A  05B7               	andwf	___ftadd@f2,f
  7546  019B  30FF               	movlw	255
  7547  019C  05B8               	andwf	___ftadd@f2+1,f
  7548  019D  3000               	movlw	0
  7549  019E  05B9               	andwf	___ftadd@f2+2,f
  7550  019F  083F               	movf	___ftadd@exp2,w
  7551  01A0  0240               	subwf	___ftadd@exp1,w
  7552  01A1  1803               	skipnc
  7553  01A2  29C5               	goto	i1l2690
  7554  01A3                     i1l2680:	
  7555  01A3  3001               	movlw	1
  7556  01A4                     u227_25:	
  7557  01A4  35B7               	lslf	___ftadd@f2,f
  7558  01A5  0DB8               	rlf	___ftadd@f2+1,f
  7559  01A6  0DB9               	rlf	___ftadd@f2+2,f
  7560  01A7  0B89               	decfsz	9,f
  7561  01A8  29A4               	goto	u227_25
  7562  01A9  3001               	movlw	1
  7563  01AA  02BF               	subwf	___ftadd@exp2,f
  7564  01AB  083F               	movf	___ftadd@exp2,w
  7565  01AC  0640               	xorwf	___ftadd@exp1,w
  7566  01AD  1903               	skipnz
  7567  01AE  29C0               	goto	i1l2688
  7568  01AF  3001               	movlw	1
  7569  01B0  02BE               	subwf	___ftadd@sign,f
  7570  01B1  083E               	movf	___ftadd@sign,w
  7571  01B2  3907               	andlw	7
  7572  01B3  1903               	btfsc	3,2
  7573  01B4  29C0               	goto	i1l2688
  7574  01B5  29A3               	goto	i1l2680
  7575  01B6                     i1l2686:	
  7576  01B6  3001               	movlw	1
  7577  01B7                     u230_25:	
  7578  01B7  36B6               	lsrf	___ftadd@f1+2,f
  7579  01B8  0CB5               	rrf	___ftadd@f1+1,f
  7580  01B9  0CB4               	rrf	___ftadd@f1,f
  7581  01BA  0B89               	decfsz	9,f
  7582  01BB  29B7               	goto	u230_25
  7583  01BC  3001               	movlw	1
  7584  01BD  00BA               	movwf	??___ftadd
  7585  01BE  083A               	movf	??___ftadd,w
  7586  01BF  07C0               	addwf	___ftadd@exp1,f
  7587  01C0                     i1l2688:	
  7588  01C0  0840               	movf	___ftadd@exp1,w
  7589  01C1  063F               	xorwf	___ftadd@exp2,w
  7590  01C2  1903               	btfsc	3,2
  7591  01C3  29EA               	goto	i1l976
  7592  01C4  29B6               	goto	i1l2686
  7593  01C5                     i1l2690:	
  7594  01C5  0840               	movf	___ftadd@exp1,w
  7595  01C6  023F               	subwf	___ftadd@exp2,w
  7596  01C7  1803               	skipnc
  7597  01C8  29EA               	goto	i1l976
  7598  01C9                     i1l2692:	
  7599  01C9  3001               	movlw	1
  7600  01CA                     u233_25:	
  7601  01CA  35B4               	lslf	___ftadd@f1,f
  7602  01CB  0DB5               	rlf	___ftadd@f1+1,f
  7603  01CC  0DB6               	rlf	___ftadd@f1+2,f
  7604  01CD  0B89               	decfsz	9,f
  7605  01CE  29CA               	goto	u233_25
  7606  01CF  3001               	movlw	1
  7607  01D0  02C0               	subwf	___ftadd@exp1,f
  7608  01D1  083F               	movf	___ftadd@exp2,w
  7609  01D2  0640               	xorwf	___ftadd@exp1,w
  7610  01D3  1903               	skipnz
  7611  01D4  29E6               	goto	i1l2700
  7612  01D5  3001               	movlw	1
  7613  01D6  02BE               	subwf	___ftadd@sign,f
  7614  01D7  083E               	movf	___ftadd@sign,w
  7615  01D8  3907               	andlw	7
  7616  01D9  1903               	btfsc	3,2
  7617  01DA  29E6               	goto	i1l2700
  7618  01DB  29C9               	goto	i1l2692
  7619  01DC                     i1l2698:	
  7620  01DC  3001               	movlw	1
  7621  01DD                     u236_25:	
  7622  01DD  36B9               	lsrf	___ftadd@f2+2,f
  7623  01DE  0CB8               	rrf	___ftadd@f2+1,f
  7624  01DF  0CB7               	rrf	___ftadd@f2,f
  7625  01E0  0B89               	decfsz	9,f
  7626  01E1  29DD               	goto	u236_25
  7627  01E2  3001               	movlw	1
  7628  01E3  00BA               	movwf	??___ftadd
  7629  01E4  083A               	movf	??___ftadd,w
  7630  01E5  07BF               	addwf	___ftadd@exp2,f
  7631  01E6                     i1l2700:	
  7632  01E6  0840               	movf	___ftadd@exp1,w
  7633  01E7  063F               	xorwf	___ftadd@exp2,w
  7634  01E8  1D03               	skipz
  7635  01E9  29DC               	goto	i1l2698
  7636  01EA                     i1l976:	
  7637  01EA  1FBE               	btfss	___ftadd@sign,7
  7638  01EB  29FC               	goto	i1l2704
  7639  01EC  30FF               	movlw	255
  7640  01ED  06B4               	xorwf	___ftadd@f1,f
  7641  01EE  30FF               	movlw	255
  7642  01EF  06B5               	xorwf	___ftadd@f1+1,f
  7643  01F0  30FF               	movlw	255
  7644  01F1  06B6               	xorwf	___ftadd@f1+2,f
  7645  01F2  3001               	movlw	1
  7646  01F3  07B4               	addwf	___ftadd@f1,f
  7647  01F4  3000               	movlw	0
  7648  01F5  1803               	skipnc
  7649  01F6  3001               	movlw	1
  7650  01F7  07B5               	addwf	___ftadd@f1+1,f
  7651  01F8  3000               	movlw	0
  7652  01F9  1803               	skipnc
  7653  01FA  3001               	movlw	1
  7654  01FB  07B6               	addwf	___ftadd@f1+2,f
  7655  01FC                     i1l2704:	
  7656  01FC  1F3E               	btfss	___ftadd@sign,6
  7657  01FD  2A0E               	goto	i1l2708
  7658  01FE  30FF               	movlw	255
  7659  01FF  06B7               	xorwf	___ftadd@f2,f
  7660  0200  30FF               	movlw	255
  7661  0201  06B8               	xorwf	___ftadd@f2+1,f
  7662  0202  30FF               	movlw	255
  7663  0203  06B9               	xorwf	___ftadd@f2+2,f
  7664  0204  3001               	movlw	1
  7665  0205  07B7               	addwf	___ftadd@f2,f
  7666  0206  3000               	movlw	0
  7667  0207  1803               	skipnc
  7668  0208  3001               	movlw	1
  7669  0209  07B8               	addwf	___ftadd@f2+1,f
  7670  020A  3000               	movlw	0
  7671  020B  1803               	skipnc
  7672  020C  3001               	movlw	1
  7673  020D  07B9               	addwf	___ftadd@f2+2,f
  7674  020E                     i1l2708:	
  7675  020E  01BE               	clrf	___ftadd@sign
  7676  020F  0834               	movf	___ftadd@f1,w
  7677  0210  07B7               	addwf	___ftadd@f2,f
  7678  0211  0835               	movf	___ftadd@f1+1,w
  7679  0212  3DB8               	addwfc	___ftadd@f2+1,f
  7680  0213  0836               	movf	___ftadd@f1+2,w
  7681  0214  3DB9               	addwfc	___ftadd@f2+2,f
  7682  0215  1FB9               	btfss	___ftadd@f2+2,7
  7683  0216  2A29               	goto	i1l2718
  7684  0217  30FF               	movlw	255
  7685  0218  06B7               	xorwf	___ftadd@f2,f
  7686  0219  30FF               	movlw	255
  7687  021A  06B8               	xorwf	___ftadd@f2+1,f
  7688  021B  30FF               	movlw	255
  7689  021C  06B9               	xorwf	___ftadd@f2+2,f
  7690  021D  3001               	movlw	1
  7691  021E  07B7               	addwf	___ftadd@f2,f
  7692  021F  3000               	movlw	0
  7693  0220  1803               	skipnc
  7694  0221  3001               	movlw	1
  7695  0222  07B8               	addwf	___ftadd@f2+1,f
  7696  0223  3000               	movlw	0
  7697  0224  1803               	skipnc
  7698  0225  3001               	movlw	1
  7699  0226  07B9               	addwf	___ftadd@f2+2,f
  7700  0227  01BE               	clrf	___ftadd@sign
  7701  0228  0ABE               	incf	___ftadd@sign,f
  7702  0229                     i1l2718:	
  7703  0229  0837               	movf	___ftadd@f2,w
  7704  022A  00F0               	movwf	___ftpack@arg
  7705  022B  0838               	movf	___ftadd@f2+1,w
  7706  022C  00F1               	movwf	___ftpack@arg+1
  7707  022D  0839               	movf	___ftadd@f2+2,w
  7708  022E  00F2               	movwf	___ftpack@arg+2
  7709  022F  0840               	movf	___ftadd@exp1,w
  7710  0230  00BA               	movwf	??___ftadd
  7711  0231  083A               	movf	??___ftadd,w
  7712  0232  00F3               	movwf	___ftpack@exp
  7713  0233  083E               	movf	___ftadd@sign,w
  7714  0234  00BB               	movwf	??___ftadd+1
  7715  0235  083B               	movf	??___ftadd+1,w
  7716  0236  00F4               	movwf	___ftpack@sign
  7717  0237  3187  271B         	fcall	___ftpack
  7718  0239  0870               	movf	?___ftpack,w
  7719  023A  0020               	movlb	0	; select bank0
  7720  023B  00B4               	movwf	?___ftadd
  7721  023C  0871               	movf	?___ftpack+1,w
  7722  023D  00B5               	movwf	?___ftadd+1
  7723  023E  0872               	movf	?___ftpack+2,w
  7724  023F  00B6               	movwf	?___ftadd+2
  7725  0240  0008               	return
  7726  0241                     __end_of___ftadd:	
  7727                           
  7728                           	psect	text60
  7729  0BFA                     __ptext60:	
  7730 ;; *************** function ___lttoft *****************
  7731 ;; Defined at:
  7732 ;;		line 30 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lttoft.c"
  7733 ;; Parameters:    Size  Location     Type
  7734 ;;  c               3    8[COMMON] unsigned um
  7735 ;; Auto vars:     Size  Location     Type
  7736 ;;		None
  7737 ;; Return value:  Size  Location     Type
  7738 ;;                  3    8[COMMON] float 
  7739 ;; Registers used:
  7740 ;;		wreg, status,2, status,0, pclath, cstack
  7741 ;; Tracked objects:
  7742 ;;		On entry : 0/0
  7743 ;;		On exit  : 0/0
  7744 ;;		Unchanged: 0/0
  7745 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7746 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7747 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7748 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7749 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7750 ;;Total ram usage:        4 bytes
  7751 ;; Hardware stack levels used:    1
  7752 ;; Hardware stack levels required when called:    1
  7753 ;; This function calls:
  7754 ;;		___ftpack
  7755 ;; This function is called by:
  7756 ;;		_restoreTime
  7757 ;; This function uses a non-reentrant model
  7758 ;;
  7759                           
  7760                           
  7761                           ;psect for function ___lttoft
  7762  0BFA                     ___lttoft:	
  7763                           
  7764                           ;incstack = 0
  7765                           ; Regs used in ___lttoft: [wreg+status,2+status,0+pclath+cstack]
  7766  0BFA  0878               	movf	___lttoft@c,w
  7767  0BFB  00F0               	movwf	___ftpack@arg
  7768  0BFC  0879               	movf	___lttoft@c+1,w
  7769  0BFD  00F1               	movwf	___ftpack@arg+1
  7770  0BFE  087A               	movf	___lttoft@c+2,w
  7771  0BFF  00F2               	movwf	___ftpack@arg+2
  7772  0C00  308E               	movlw	142
  7773  0C01  00FB               	movwf	??___lttoft
  7774  0C02  087B               	movf	??___lttoft,w
  7775  0C03  00F3               	movwf	___ftpack@exp
  7776  0C04  01F4               	clrf	___ftpack@sign
  7777  0C05  3187  271B         	fcall	___ftpack
  7778  0C07  0870               	movf	?___ftpack,w
  7779  0C08  00F8               	movwf	?___lttoft
  7780  0C09  0871               	movf	?___ftpack+1,w
  7781  0C0A  00F9               	movwf	?___lttoft+1
  7782  0C0B  0872               	movf	?___ftpack+2,w
  7783  0C0C  00FA               	movwf	?___lttoft+2
  7784  0C0D  0008               	return
  7785  0C0E                     __end_of___lttoft:	
  7786                           
  7787                           	psect	text61
  7788  0E40                     __ptext61:	
  7789 ;; *************** function ___ltmod *****************
  7790 ;; Defined at:
  7791 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ltmod.c"
  7792 ;; Parameters:    Size  Location     Type
  7793 ;;  divisor         3    0[COMMON] unsigned um
  7794 ;;  dividend        3    3[COMMON] unsigned um
  7795 ;; Auto vars:     Size  Location     Type
  7796 ;;  counter         1    7[COMMON] unsigned char 
  7797 ;; Return value:  Size  Location     Type
  7798 ;;                  3    0[COMMON] unsigned um
  7799 ;; Registers used:
  7800 ;;		wreg, status,2, status,0
  7801 ;; Tracked objects:
  7802 ;;		On entry : 0/0
  7803 ;;		On exit  : 0/0
  7804 ;;		Unchanged: 0/0
  7805 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7806 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7807 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7808 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7809 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7810 ;;Total ram usage:        8 bytes
  7811 ;; Hardware stack levels used:    1
  7812 ;; This function calls:
  7813 ;;		Nothing
  7814 ;; This function is called by:
  7815 ;;		_restoreTime
  7816 ;; This function uses a non-reentrant model
  7817 ;;
  7818                           
  7819                           
  7820                           ;psect for function ___ltmod
  7821  0E40                     ___ltmod:	
  7822                           
  7823                           ;incstack = 0
  7824                           ; Regs used in ___ltmod: [wreg+status,2+status,0]
  7825  0E40  0872               	movf	___ltmod@divisor+2,w
  7826  0E41  0471               	iorwf	___ltmod@divisor+1,w
  7827  0E42  0470               	iorwf	___ltmod@divisor,w
  7828  0E43  1903               	skipnz
  7829  0E44  2E70               	goto	i1l2918
  7830  0E45  01F7               	clrf	___ltmod@counter
  7831  0E46  0AF7               	incf	___ltmod@counter,f
  7832  0E47                     i1l2908:	
  7833  0E47  1BF2               	btfsc	___ltmod@divisor+2,7
  7834  0E48  2E54               	goto	i1l2910
  7835  0E49  3001               	movlw	1
  7836  0E4A                     u283_25:	
  7837  0E4A  35F0               	lslf	___ltmod@divisor,f
  7838  0E4B  0DF1               	rlf	___ltmod@divisor+1,f
  7839  0E4C  0DF2               	rlf	___ltmod@divisor+2,f
  7840  0E4D  0B89               	decfsz	9,f
  7841  0E4E  2E4A               	goto	u283_25
  7842  0E4F  3001               	movlw	1
  7843  0E50  00F6               	movwf	??___ltmod
  7844  0E51  0876               	movf	??___ltmod,w
  7845  0E52  07F7               	addwf	___ltmod@counter,f
  7846  0E53  2E47               	goto	i1l2908
  7847  0E54                     i1l2910:	
  7848  0E54  0872               	movf	___ltmod@divisor+2,w
  7849  0E55  0275               	subwf	___ltmod@dividend+2,w
  7850  0E56  1D03               	skipz
  7851  0E57  2E5E               	goto	u285_25
  7852  0E58  0871               	movf	___ltmod@divisor+1,w
  7853  0E59  0274               	subwf	___ltmod@dividend+1,w
  7854  0E5A  1D03               	skipz
  7855  0E5B  2E5E               	goto	u285_25
  7856  0E5C  0870               	movf	___ltmod@divisor,w
  7857  0E5D  0273               	subwf	___ltmod@dividend,w
  7858  0E5E                     u285_25:	
  7859  0E5E  1C03               	skipc
  7860  0E5F  2E66               	goto	i1l2914
  7861  0E60  0870               	movf	___ltmod@divisor,w
  7862  0E61  02F3               	subwf	___ltmod@dividend,f
  7863  0E62  0871               	movf	___ltmod@divisor+1,w
  7864  0E63  3BF4               	subwfb	___ltmod@dividend+1,f
  7865  0E64  0872               	movf	___ltmod@divisor+2,w
  7866  0E65  3BF5               	subwfb	___ltmod@dividend+2,f
  7867  0E66                     i1l2914:	
  7868  0E66  3001               	movlw	1
  7869  0E67                     u286_25:	
  7870  0E67  36F2               	lsrf	___ltmod@divisor+2,f
  7871  0E68  0CF1               	rrf	___ltmod@divisor+1,f
  7872  0E69  0CF0               	rrf	___ltmod@divisor,f
  7873  0E6A  0B89               	decfsz	9,f
  7874  0E6B  2E67               	goto	u286_25
  7875  0E6C  3001               	movlw	1
  7876  0E6D  02F7               	subwf	___ltmod@counter,f
  7877  0E6E  1D03               	btfss	3,2
  7878  0E6F  2E54               	goto	i1l2910
  7879  0E70                     i1l2918:	
  7880  0E70  0873               	movf	___ltmod@dividend,w
  7881  0E71  00F0               	movwf	?___ltmod
  7882  0E72  0874               	movf	___ltmod@dividend+1,w
  7883  0E73  00F1               	movwf	?___ltmod+1
  7884  0E74  0875               	movf	___ltmod@dividend+2,w
  7885  0E75  00F2               	movwf	?___ltmod+2
  7886  0E76  0008               	return
  7887  0E77                     __end_of___ltmod:	
  7888                           
  7889                           	psect	text62
  7890  0F6A                     __ptext62:	
  7891 ;; *************** function ___ltdiv *****************
  7892 ;; Defined at:
  7893 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ltdiv.c"
  7894 ;; Parameters:    Size  Location     Type
  7895 ;;  divisor         3    8[COMMON] unsigned um
  7896 ;;  dividend        3   11[COMMON] unsigned um
  7897 ;; Auto vars:     Size  Location     Type
  7898 ;;  quotient        3    1[BANK0 ] unsigned um
  7899 ;;  counter         1    4[BANK0 ] unsigned char 
  7900 ;; Return value:  Size  Location     Type
  7901 ;;                  3    8[COMMON] unsigned um
  7902 ;; Registers used:
  7903 ;;		wreg, status,2, status,0
  7904 ;; Tracked objects:
  7905 ;;		On entry : 0/0
  7906 ;;		On exit  : 0/0
  7907 ;;		Unchanged: 0/0
  7908 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7909 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7910 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7911 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7912 ;;      Totals:         6       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7913 ;;Total ram usage:       11 bytes
  7914 ;; Hardware stack levels used:    1
  7915 ;; This function calls:
  7916 ;;		Nothing
  7917 ;; This function is called by:
  7918 ;;		_restoreTime
  7919 ;; This function uses a non-reentrant model
  7920 ;;
  7921                           
  7922                           
  7923                           ;psect for function ___ltdiv
  7924  0F6A                     ___ltdiv:	
  7925                           
  7926                           ;incstack = 0
  7927                           ; Regs used in ___ltdiv: [wreg+status,2+status,0]
  7928  0F6A  3000               	movlw	0
  7929  0F6B  0020               	movlb	0	; select bank0
  7930  0F6C  00A1               	movwf	___ltdiv@quotient
  7931  0F6D  3000               	movlw	0
  7932  0F6E  00A2               	movwf	___ltdiv@quotient+1
  7933  0F6F  3000               	movlw	0
  7934  0F70  00A3               	movwf	___ltdiv@quotient+2
  7935  0F71  087A               	movf	___ltdiv@divisor+2,w
  7936  0F72  0479               	iorwf	___ltdiv@divisor+1,w
  7937  0F73  0478               	iorwf	___ltdiv@divisor,w
  7938  0F74  1903               	skipnz
  7939  0F75  2FA8               	goto	i1l2898
  7940  0F76  01A4               	clrf	___ltdiv@counter
  7941  0F77  0AA4               	incf	___ltdiv@counter,f
  7942  0F78                     i1l2884:	
  7943  0F78  1BFA               	btfsc	___ltdiv@divisor+2,7
  7944  0F79  2F85               	goto	i1l2886
  7945  0F7A  3001               	movlw	1
  7946  0F7B                     u276_25:	
  7947  0F7B  35F8               	lslf	___ltdiv@divisor,f
  7948  0F7C  0DF9               	rlf	___ltdiv@divisor+1,f
  7949  0F7D  0DFA               	rlf	___ltdiv@divisor+2,f
  7950  0F7E  0B89               	decfsz	9,f
  7951  0F7F  2F7B               	goto	u276_25
  7952  0F80  3001               	movlw	1
  7953  0F81  00A0               	movwf	??___ltdiv
  7954  0F82  0820               	movf	??___ltdiv,w
  7955  0F83  07A4               	addwf	___ltdiv@counter,f
  7956  0F84  2F78               	goto	i1l2884
  7957  0F85                     i1l2886:	
  7958  0F85  3001               	movlw	1
  7959  0F86                     u278_25:	
  7960  0F86  35A1               	lslf	___ltdiv@quotient,f
  7961  0F87  0DA2               	rlf	___ltdiv@quotient+1,f
  7962  0F88  0DA3               	rlf	___ltdiv@quotient+2,f
  7963  0F89  0B89               	decfsz	9,f
  7964  0F8A  2F86               	goto	u278_25
  7965  0F8B  087A               	movf	___ltdiv@divisor+2,w
  7966  0F8C  027D               	subwf	___ltdiv@dividend+2,w
  7967  0F8D  1D03               	skipz
  7968  0F8E  2F95               	goto	u279_25
  7969  0F8F  0879               	movf	___ltdiv@divisor+1,w
  7970  0F90  027C               	subwf	___ltdiv@dividend+1,w
  7971  0F91  1D03               	skipz
  7972  0F92  2F95               	goto	u279_25
  7973  0F93  0878               	movf	___ltdiv@divisor,w
  7974  0F94  027B               	subwf	___ltdiv@dividend,w
  7975  0F95                     u279_25:	
  7976  0F95  1C03               	skipc
  7977  0F96  2F9E               	goto	i1l2894
  7978  0F97  0878               	movf	___ltdiv@divisor,w
  7979  0F98  02FB               	subwf	___ltdiv@dividend,f
  7980  0F99  0879               	movf	___ltdiv@divisor+1,w
  7981  0F9A  3BFC               	subwfb	___ltdiv@dividend+1,f
  7982  0F9B  087A               	movf	___ltdiv@divisor+2,w
  7983  0F9C  3BFD               	subwfb	___ltdiv@dividend+2,f
  7984  0F9D  1421               	bsf	___ltdiv@quotient,0
  7985  0F9E                     i1l2894:	
  7986  0F9E  3001               	movlw	1
  7987  0F9F                     u280_25:	
  7988  0F9F  36FA               	lsrf	___ltdiv@divisor+2,f
  7989  0FA0  0CF9               	rrf	___ltdiv@divisor+1,f
  7990  0FA1  0CF8               	rrf	___ltdiv@divisor,f
  7991  0FA2  0B89               	decfsz	9,f
  7992  0FA3  2F9F               	goto	u280_25
  7993  0FA4  3001               	movlw	1
  7994  0FA5  02A4               	subwf	___ltdiv@counter,f
  7995  0FA6  1D03               	btfss	3,2
  7996  0FA7  2F85               	goto	i1l2886
  7997  0FA8                     i1l2898:	
  7998  0FA8  0821               	movf	___ltdiv@quotient,w
  7999  0FA9  00F8               	movwf	?___ltdiv
  8000  0FAA  0822               	movf	___ltdiv@quotient+1,w
  8001  0FAB  00F9               	movwf	?___ltdiv+1
  8002  0FAC  0823               	movf	___ltdiv@quotient+2,w
  8003  0FAD  00FA               	movwf	?___ltdiv+2
  8004  0FAE  0008               	return
  8005  0FAF                     __end_of___ltdiv:	
  8006                           
  8007                           	psect	text63
  8008  0241                     __ptext63:	
  8009 ;; *************** function ___ftmul *****************
  8010 ;; Defined at:
  8011 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftmul.c"
  8012 ;; Parameters:    Size  Location     Type
  8013 ;;  f1              3    0[BANK0 ] float 
  8014 ;;  f2              3    3[BANK0 ] float 
  8015 ;; Auto vars:     Size  Location     Type
  8016 ;;  f3_as_produc    3   11[BANK0 ] unsigned um
  8017 ;;  sign            1   15[BANK0 ] unsigned char 
  8018 ;;  cntr            1   14[BANK0 ] unsigned char 
  8019 ;;  exp             1   10[BANK0 ] unsigned char 
  8020 ;; Return value:  Size  Location     Type
  8021 ;;                  3    0[BANK0 ] float 
  8022 ;; Registers used:
  8023 ;;		wreg, status,2, status,0, pclath, cstack
  8024 ;; Tracked objects:
  8025 ;;		On entry : 0/0
  8026 ;;		On exit  : 0/0
  8027 ;;		Unchanged: 0/0
  8028 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8029 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8030 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8031 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8032 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8033 ;;Total ram usage:       16 bytes
  8034 ;; Hardware stack levels used:    1
  8035 ;; Hardware stack levels required when called:    1
  8036 ;; This function calls:
  8037 ;;		___ftpack
  8038 ;; This function is called by:
  8039 ;;		_restoreTime
  8040 ;; This function uses a non-reentrant model
  8041 ;;
  8042                           
  8043                           
  8044                           ;psect for function ___ftmul
  8045  0241                     ___ftmul:	
  8046                           
  8047                           ;incstack = 0
  8048                           ; Regs used in ___ftmul: [wreg+status,2+status,0+pclath+cstack]
  8049  0241  0020               	movlb	0	; select bank0
  8050  0242  0820               	movf	___ftmul@f1,w
  8051  0243  00A6               	movwf	??___ftmul
  8052  0244  0821               	movf	___ftmul@f1+1,w
  8053  0245  00A7               	movwf	??___ftmul+1
  8054  0246  0822               	movf	___ftmul@f1+2,w
  8055  0247  00A8               	movwf	??___ftmul+2
  8056  0248  1003               	clrc
  8057  0249  0D27               	rlf	??___ftmul+1,w
  8058  024A  0D28               	rlf	??___ftmul+2,w
  8059  024B  00A9               	movwf	??___ftmul+3
  8060  024C  0829               	movf	??___ftmul+3,w
  8061  024D  00AA               	movwf	___ftmul@exp
  8062  024E  082A               	movf	___ftmul@exp,w
  8063  024F  1D03               	btfss	3,2
  8064  0250  2A58               	goto	i1l2834
  8065  0251  3000               	movlw	0
  8066  0252  00A0               	movwf	?___ftmul
  8067  0253  3000               	movlw	0
  8068  0254  00A1               	movwf	?___ftmul+1
  8069  0255  3000               	movlw	0
  8070  0256  00A2               	movwf	?___ftmul+2
  8071  0257  0008               	return
  8072  0258                     i1l2834:	
  8073  0258  0823               	movf	___ftmul@f2,w
  8074  0259  00A6               	movwf	??___ftmul
  8075  025A  0824               	movf	___ftmul@f2+1,w
  8076  025B  00A7               	movwf	??___ftmul+1
  8077  025C  0825               	movf	___ftmul@f2+2,w
  8078  025D  00A8               	movwf	??___ftmul+2
  8079  025E  1003               	clrc
  8080  025F  0D27               	rlf	??___ftmul+1,w
  8081  0260  0D28               	rlf	??___ftmul+2,w
  8082  0261  00A9               	movwf	??___ftmul+3
  8083  0262  0829               	movf	??___ftmul+3,w
  8084  0263  00AF               	movwf	___ftmul@sign
  8085  0264  082F               	movf	___ftmul@sign,w
  8086  0265  1D03               	btfss	3,2
  8087  0266  2A6E               	goto	i1l2840
  8088  0267  3000               	movlw	0
  8089  0268  00A0               	movwf	?___ftmul
  8090  0269  3000               	movlw	0
  8091  026A  00A1               	movwf	?___ftmul+1
  8092  026B  3000               	movlw	0
  8093  026C  00A2               	movwf	?___ftmul+2
  8094  026D  0008               	return
  8095  026E                     i1l2840:	
  8096  026E  082F               	movf	___ftmul@sign,w
  8097  026F  3E7B               	addlw	123
  8098  0270  00A6               	movwf	??___ftmul
  8099  0271  0826               	movf	??___ftmul,w
  8100  0272  07AA               	addwf	___ftmul@exp,f
  8101  0273  0820               	movf	___ftmul@f1,w
  8102  0274  00A6               	movwf	??___ftmul
  8103  0275  0821               	movf	___ftmul@f1+1,w
  8104  0276  00A7               	movwf	??___ftmul+1
  8105  0277  0822               	movf	___ftmul@f1+2,w
  8106  0278  00A8               	movwf	??___ftmul+2
  8107  0279  3010               	movlw	16
  8108  027A                     u265_25:	
  8109  027A  36A8               	lsrf	??___ftmul+2,f
  8110  027B  0CA7               	rrf	??___ftmul+1,f
  8111  027C  0CA6               	rrf	??___ftmul,f
  8112  027D  0B89               	decfsz	9,f
  8113  027E  2A7A               	goto	u265_25
  8114  027F  0826               	movf	??___ftmul,w
  8115  0280  00A9               	movwf	??___ftmul+3
  8116  0281  0829               	movf	??___ftmul+3,w
  8117  0282  00AF               	movwf	___ftmul@sign
  8118  0283  0823               	movf	___ftmul@f2,w
  8119  0284  00A6               	movwf	??___ftmul
  8120  0285  0824               	movf	___ftmul@f2+1,w
  8121  0286  00A7               	movwf	??___ftmul+1
  8122  0287  0825               	movf	___ftmul@f2+2,w
  8123  0288  00A8               	movwf	??___ftmul+2
  8124  0289  3010               	movlw	16
  8125  028A                     u266_25:	
  8126  028A  36A8               	lsrf	??___ftmul+2,f
  8127  028B  0CA7               	rrf	??___ftmul+1,f
  8128  028C  0CA6               	rrf	??___ftmul,f
  8129  028D  0B89               	decfsz	9,f
  8130  028E  2A8A               	goto	u266_25
  8131  028F  0826               	movf	??___ftmul,w
  8132  0290  00A9               	movwf	??___ftmul+3
  8133  0291  0829               	movf	??___ftmul+3,w
  8134  0292  06AF               	xorwf	___ftmul@sign,f
  8135  0293  3080               	movlw	128
  8136  0294  00A6               	movwf	??___ftmul
  8137  0295  0826               	movf	??___ftmul,w
  8138  0296  05AF               	andwf	___ftmul@sign,f
  8139  0297  17A1               	bsf	___ftmul@f1+1,7
  8140  0298  17A4               	bsf	___ftmul@f2+1,7
  8141  0299  30FF               	movlw	255
  8142  029A  05A3               	andwf	___ftmul@f2,f
  8143  029B  30FF               	movlw	255
  8144  029C  05A4               	andwf	___ftmul@f2+1,f
  8145  029D  3000               	movlw	0
  8146  029E  05A5               	andwf	___ftmul@f2+2,f
  8147  029F  3000               	movlw	0
  8148  02A0  00AB               	movwf	___ftmul@f3_as_product
  8149  02A1  3000               	movlw	0
  8150  02A2  00AC               	movwf	___ftmul@f3_as_product+1
  8151  02A3  3000               	movlw	0
  8152  02A4  00AD               	movwf	___ftmul@f3_as_product+2
  8153  02A5  3007               	movlw	7
  8154  02A6  00A6               	movwf	??___ftmul
  8155  02A7  0826               	movf	??___ftmul,w
  8156  02A8  00AE               	movwf	___ftmul@cntr
  8157  02A9                     i1l2852:	
  8158  02A9  1C20               	btfss	___ftmul@f1,0
  8159  02AA  2AB1               	goto	i1l2856
  8160  02AB  0823               	movf	___ftmul@f2,w
  8161  02AC  07AB               	addwf	___ftmul@f3_as_product,f
  8162  02AD  0824               	movf	___ftmul@f2+1,w
  8163  02AE  3DAC               	addwfc	___ftmul@f3_as_product+1,f
  8164  02AF  0825               	movf	___ftmul@f2+2,w
  8165  02B0  3DAD               	addwfc	___ftmul@f3_as_product+2,f
  8166  02B1                     i1l2856:	
  8167  02B1  3001               	movlw	1
  8168  02B2                     u268_25:	
  8169  02B2  36A2               	lsrf	___ftmul@f1+2,f
  8170  02B3  0CA1               	rrf	___ftmul@f1+1,f
  8171  02B4  0CA0               	rrf	___ftmul@f1,f
  8172  02B5  0B89               	decfsz	9,f
  8173  02B6  2AB2               	goto	u268_25
  8174  02B7  3001               	movlw	1
  8175  02B8                     u269_25:	
  8176  02B8  35A3               	lslf	___ftmul@f2,f
  8177  02B9  0DA4               	rlf	___ftmul@f2+1,f
  8178  02BA  0DA5               	rlf	___ftmul@f2+2,f
  8179  02BB  0B89               	decfsz	9,f
  8180  02BC  2AB8               	goto	u269_25
  8181  02BD  3001               	movlw	1
  8182  02BE  02AE               	subwf	___ftmul@cntr,f
  8183  02BF  1D03               	btfss	3,2
  8184  02C0  2AA9               	goto	i1l2852
  8185  02C1  3009               	movlw	9
  8186  02C2  00A6               	movwf	??___ftmul
  8187  02C3  0826               	movf	??___ftmul,w
  8188  02C4  00AE               	movwf	___ftmul@cntr
  8189  02C5                     i1l2864:	
  8190  02C5  1C20               	btfss	___ftmul@f1,0
  8191  02C6  2ACD               	goto	i1l2868
  8192  02C7  0823               	movf	___ftmul@f2,w
  8193  02C8  07AB               	addwf	___ftmul@f3_as_product,f
  8194  02C9  0824               	movf	___ftmul@f2+1,w
  8195  02CA  3DAC               	addwfc	___ftmul@f3_as_product+1,f
  8196  02CB  0825               	movf	___ftmul@f2+2,w
  8197  02CC  3DAD               	addwfc	___ftmul@f3_as_product+2,f
  8198  02CD                     i1l2868:	
  8199  02CD  3001               	movlw	1
  8200  02CE                     u272_25:	
  8201  02CE  36A2               	lsrf	___ftmul@f1+2,f
  8202  02CF  0CA1               	rrf	___ftmul@f1+1,f
  8203  02D0  0CA0               	rrf	___ftmul@f1,f
  8204  02D1  0B89               	decfsz	9,f
  8205  02D2  2ACE               	goto	u272_25
  8206  02D3  3001               	movlw	1
  8207  02D4                     u273_25:	
  8208  02D4  36AD               	lsrf	___ftmul@f3_as_product+2,f
  8209  02D5  0CAC               	rrf	___ftmul@f3_as_product+1,f
  8210  02D6  0CAB               	rrf	___ftmul@f3_as_product,f
  8211  02D7  0B89               	decfsz	9,f
  8212  02D8  2AD4               	goto	u273_25
  8213  02D9  3001               	movlw	1
  8214  02DA  02AE               	subwf	___ftmul@cntr,f
  8215  02DB  1D03               	btfss	3,2
  8216  02DC  2AC5               	goto	i1l2864
  8217  02DD  082B               	movf	___ftmul@f3_as_product,w
  8218  02DE  00F0               	movwf	___ftpack@arg
  8219  02DF  082C               	movf	___ftmul@f3_as_product+1,w
  8220  02E0  00F1               	movwf	___ftpack@arg+1
  8221  02E1  082D               	movf	___ftmul@f3_as_product+2,w
  8222  02E2  00F2               	movwf	___ftpack@arg+2
  8223  02E3  082A               	movf	___ftmul@exp,w
  8224  02E4  00A6               	movwf	??___ftmul
  8225  02E5  0826               	movf	??___ftmul,w
  8226  02E6  00F3               	movwf	___ftpack@exp
  8227  02E7  082F               	movf	___ftmul@sign,w
  8228  02E8  00A7               	movwf	??___ftmul+1
  8229  02E9  0827               	movf	??___ftmul+1,w
  8230  02EA  00F4               	movwf	___ftpack@sign
  8231  02EB  3187  271B         	fcall	___ftpack
  8232  02ED  0870               	movf	?___ftpack,w
  8233  02EE  0020               	movlb	0	; select bank0
  8234  02EF  00A0               	movwf	?___ftmul
  8235  02F0  0871               	movf	?___ftpack+1,w
  8236  02F1  00A1               	movwf	?___ftmul+1
  8237  02F2  0872               	movf	?___ftpack+2,w
  8238  02F3  00A2               	movwf	?___ftmul+2
  8239  02F4  0008               	return
  8240  02F5                     __end_of___ftmul:	
  8241                           
  8242                           	psect	text64
  8243  071B                     __ptext64:	
  8244 ;; *************** function ___ftpack *****************
  8245 ;; Defined at:
  8246 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\float.c"
  8247 ;; Parameters:    Size  Location     Type
  8248 ;;  arg             3    0[COMMON] unsigned um
  8249 ;;  exp             1    3[COMMON] unsigned char 
  8250 ;;  sign            1    4[COMMON] unsigned char 
  8251 ;; Auto vars:     Size  Location     Type
  8252 ;;		None
  8253 ;; Return value:  Size  Location     Type
  8254 ;;                  3    0[COMMON] float 
  8255 ;; Registers used:
  8256 ;;		wreg, status,2, status,0
  8257 ;; Tracked objects:
  8258 ;;		On entry : 0/0
  8259 ;;		On exit  : 0/0
  8260 ;;		Unchanged: 0/0
  8261 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8262 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8263 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8264 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8265 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8266 ;;Total ram usage:        8 bytes
  8267 ;; Hardware stack levels used:    1
  8268 ;; This function calls:
  8269 ;;		Nothing
  8270 ;; This function is called by:
  8271 ;;		___altoft
  8272 ;;		___ftadd
  8273 ;;		___ftmul
  8274 ;;		___lttoft
  8275 ;; This function uses a non-reentrant model
  8276 ;;
  8277                           
  8278                           
  8279                           ;psect for function ___ftpack
  8280  071B                     ___ftpack:	
  8281                           
  8282                           ;incstack = 0
  8283                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
  8284  071B  0873               	movf	___ftpack@exp,w
  8285  071C  1903               	btfsc	3,2
  8286  071D  2F23               	goto	i1l2550
  8287  071E  0872               	movf	___ftpack@arg+2,w
  8288  071F  0471               	iorwf	___ftpack@arg+1,w
  8289  0720  0470               	iorwf	___ftpack@arg,w
  8290  0721  1D03               	skipz
  8291  0722  2F34               	goto	i1l2556
  8292  0723                     i1l2550:	
  8293  0723  3000               	movlw	0
  8294  0724  00F0               	movwf	?___ftpack
  8295  0725  3000               	movlw	0
  8296  0726  00F1               	movwf	?___ftpack+1
  8297  0727  3000               	movlw	0
  8298  0728  00F2               	movwf	?___ftpack+2
  8299  0729  0008               	return
  8300  072A                     i1l2554:	
  8301  072A  3001               	movlw	1
  8302  072B  00F5               	movwf	??___ftpack
  8303  072C  0875               	movf	??___ftpack,w
  8304  072D  07F3               	addwf	___ftpack@exp,f
  8305  072E  3001               	movlw	1
  8306  072F                     u194_25:	
  8307  072F  36F2               	lsrf	___ftpack@arg+2,f
  8308  0730  0CF1               	rrf	___ftpack@arg+1,f
  8309  0731  0CF0               	rrf	___ftpack@arg,f
  8310  0732  0B89               	decfsz	9,f
  8311  0733  2F2F               	goto	u194_25
  8312  0734                     i1l2556:	
  8313  0734  30FE               	movlw	254
  8314  0735  0572               	andwf	___ftpack@arg+2,w
  8315  0736  1903               	btfsc	3,2
  8316  0737  2F4D               	goto	i1l945
  8317  0738  2F2A               	goto	i1l2554
  8318  0739                     i1l2558:	
  8319  0739  3001               	movlw	1
  8320  073A  00F5               	movwf	??___ftpack
  8321  073B  0875               	movf	??___ftpack,w
  8322  073C  07F3               	addwf	___ftpack@exp,f
  8323  073D  3001               	movlw	1
  8324  073E  07F0               	addwf	___ftpack@arg,f
  8325  073F  3000               	movlw	0
  8326  0740  1803               	skipnc
  8327  0741  3001               	movlw	1
  8328  0742  07F1               	addwf	___ftpack@arg+1,f
  8329  0743  3000               	movlw	0
  8330  0744  1803               	skipnc
  8331  0745  3001               	movlw	1
  8332  0746  07F2               	addwf	___ftpack@arg+2,f
  8333  0747  3001               	movlw	1
  8334  0748                     u196_25:	
  8335  0748  36F2               	lsrf	___ftpack@arg+2,f
  8336  0749  0CF1               	rrf	___ftpack@arg+1,f
  8337  074A  0CF0               	rrf	___ftpack@arg,f
  8338  074B  0B89               	decfsz	9,f
  8339  074C  2F48               	goto	u196_25
  8340  074D                     i1l945:	
  8341  074D  30FF               	movlw	255
  8342  074E  0572               	andwf	___ftpack@arg+2,w
  8343  074F  1903               	btfsc	3,2
  8344  0750  2F5A               	goto	i1l2566
  8345  0751  2F39               	goto	i1l2558
  8346  0752                     i1l2564:	
  8347  0752  3001               	movlw	1
  8348  0753  02F3               	subwf	___ftpack@exp,f
  8349  0754  3001               	movlw	1
  8350  0755                     u198_25:	
  8351  0755  35F0               	lslf	___ftpack@arg,f
  8352  0756  0DF1               	rlf	___ftpack@arg+1,f
  8353  0757  0DF2               	rlf	___ftpack@arg+2,f
  8354  0758  0B89               	decfsz	9,f
  8355  0759  2F55               	goto	u198_25
  8356  075A                     i1l2566:	
  8357  075A  1BF1               	btfsc	___ftpack@arg+1,7
  8358  075B  2F60               	goto	i1l952
  8359  075C  3002               	movlw	2
  8360  075D  0273               	subwf	___ftpack@exp,w
  8361  075E  1803               	skipnc
  8362  075F  2F52               	goto	i1l2564
  8363  0760                     i1l952:	
  8364  0760  1873               	btfsc	___ftpack@exp,0
  8365  0761  2F68               	goto	i1l953
  8366  0762  30FF               	movlw	255
  8367  0763  05F0               	andwf	___ftpack@arg,f
  8368  0764  307F               	movlw	127
  8369  0765  05F1               	andwf	___ftpack@arg+1,f
  8370  0766  30FF               	movlw	255
  8371  0767  05F2               	andwf	___ftpack@arg+2,f
  8372  0768                     i1l953:	
  8373  0768  1003               	clrc
  8374  0769  0CF3               	rrf	___ftpack@exp,f
  8375  076A  0873               	movf	___ftpack@exp,w
  8376  076B  00F5               	movwf	??___ftpack
  8377  076C  01F6               	clrf	??___ftpack+1
  8378  076D  01F7               	clrf	??___ftpack+2
  8379  076E  3010               	movlw	16
  8380  076F                     u202_25:	
  8381  076F  35F5               	lslf	??___ftpack,f
  8382  0770  0DF6               	rlf	??___ftpack+1,f
  8383  0771  0DF7               	rlf	??___ftpack+2,f
  8384  0772  0B89               	decfsz	9,f
  8385  0773  2F6F               	goto	u202_25
  8386  0774  0875               	movf	??___ftpack,w
  8387  0775  04F0               	iorwf	___ftpack@arg,f
  8388  0776  0876               	movf	??___ftpack+1,w
  8389  0777  04F1               	iorwf	___ftpack@arg+1,f
  8390  0778  0877               	movf	??___ftpack+2,w
  8391  0779  04F2               	iorwf	___ftpack@arg+2,f
  8392  077A  0874               	movf	___ftpack@sign,w
  8393  077B  1903               	btfsc	3,2
  8394  077C  0008               	return
  8395  077D  17F2               	bsf	___ftpack@arg+2,7
  8396  077E  0008               	return
  8397  077F                     __end_of___ftpack:	
  8398                           
  8399                           	psect	text65
  8400  0649                     __ptext65:	
  8401 ;; *************** function ___almod *****************
  8402 ;; Defined at:
  8403 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\almod.c"
  8404 ;; Parameters:    Size  Location     Type
  8405 ;;  divisor         4    0[COMMON] long 
  8406 ;;  dividend        4    4[COMMON] long 
  8407 ;; Auto vars:     Size  Location     Type
  8408 ;;  sign            1   10[COMMON] unsigned char 
  8409 ;;  counter         1    9[COMMON] unsigned char 
  8410 ;; Return value:  Size  Location     Type
  8411 ;;                  4    0[COMMON] long 
  8412 ;; Registers used:
  8413 ;;		wreg, status,2, status,0
  8414 ;; Tracked objects:
  8415 ;;		On entry : 0/0
  8416 ;;		On exit  : 0/0
  8417 ;;		Unchanged: 0/0
  8418 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8419 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8420 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8421 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8422 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8423 ;;Total ram usage:       11 bytes
  8424 ;; Hardware stack levels used:    1
  8425 ;; This function calls:
  8426 ;;		Nothing
  8427 ;; This function is called by:
  8428 ;;		_restoreTime
  8429 ;; This function uses a non-reentrant model
  8430 ;;
  8431                           
  8432                           
  8433                           ;psect for function ___almod
  8434  0649                     ___almod:	
  8435                           
  8436                           ;incstack = 0
  8437                           ; Regs used in ___almod: [wreg+status,2+status,0]
  8438  0649  01FA               	clrf	___almod@sign
  8439  064A  1FF7               	btfss	___almod@dividend+3,7
  8440  064B  2E59               	goto	i1l852
  8441  064C  09F4               	comf	___almod@dividend,f
  8442  064D  09F5               	comf	___almod@dividend+1,f
  8443  064E  09F6               	comf	___almod@dividend+2,f
  8444  064F  09F7               	comf	___almod@dividend+3,f
  8445  0650  0AF4               	incf	___almod@dividend,f
  8446  0651  1903               	skipnz
  8447  0652  0AF5               	incf	___almod@dividend+1,f
  8448  0653  1903               	skipnz
  8449  0654  0AF6               	incf	___almod@dividend+2,f
  8450  0655  1903               	skipnz
  8451  0656  0AF7               	incf	___almod@dividend+3,f
  8452  0657  01FA               	clrf	___almod@sign
  8453  0658  0AFA               	incf	___almod@sign,f
  8454  0659                     i1l852:	
  8455  0659  1FF3               	btfss	___almod@divisor+3,7
  8456  065A  2E66               	goto	i1l2804
  8457  065B  09F0               	comf	___almod@divisor,f
  8458  065C  09F1               	comf	___almod@divisor+1,f
  8459  065D  09F2               	comf	___almod@divisor+2,f
  8460  065E  09F3               	comf	___almod@divisor+3,f
  8461  065F  0AF0               	incf	___almod@divisor,f
  8462  0660  1903               	skipnz
  8463  0661  0AF1               	incf	___almod@divisor+1,f
  8464  0662  1903               	skipnz
  8465  0663  0AF2               	incf	___almod@divisor+2,f
  8466  0664  1903               	skipnz
  8467  0665  0AF3               	incf	___almod@divisor+3,f
  8468  0666                     i1l2804:	
  8469  0666  0873               	movf	___almod@divisor+3,w
  8470  0667  0472               	iorwf	___almod@divisor+2,w
  8471  0668  0471               	iorwf	___almod@divisor+1,w
  8472  0669  0470               	iorwf	___almod@divisor,w
  8473  066A  1903               	skipnz
  8474  066B  2E9F               	goto	i1l2820
  8475  066C  01F9               	clrf	___almod@counter
  8476  066D  0AF9               	incf	___almod@counter,f
  8477  066E                     i1l2810:	
  8478  066E  1BF3               	btfsc	___almod@divisor+3,7
  8479  066F  2E7C               	goto	i1l2812
  8480  0670  3001               	movlw	1
  8481  0671                     u257_25:	
  8482  0671  35F0               	lslf	___almod@divisor,f
  8483  0672  0DF1               	rlf	___almod@divisor+1,f
  8484  0673  0DF2               	rlf	___almod@divisor+2,f
  8485  0674  0DF3               	rlf	___almod@divisor+3,f
  8486  0675  0B89               	decfsz	9,f
  8487  0676  2E71               	goto	u257_25
  8488  0677  3001               	movlw	1
  8489  0678  00F8               	movwf	??___almod
  8490  0679  0878               	movf	??___almod,w
  8491  067A  07F9               	addwf	___almod@counter,f
  8492  067B  2E6E               	goto	i1l2810
  8493  067C                     i1l2812:	
  8494  067C  0873               	movf	___almod@divisor+3,w
  8495  067D  0277               	subwf	___almod@dividend+3,w
  8496  067E  1D03               	skipz
  8497  067F  2E8A               	goto	u259_25
  8498  0680  0872               	movf	___almod@divisor+2,w
  8499  0681  0276               	subwf	___almod@dividend+2,w
  8500  0682  1D03               	skipz
  8501  0683  2E8A               	goto	u259_25
  8502  0684  0871               	movf	___almod@divisor+1,w
  8503  0685  0275               	subwf	___almod@dividend+1,w
  8504  0686  1D03               	skipz
  8505  0687  2E8A               	goto	u259_25
  8506  0688  0870               	movf	___almod@divisor,w
  8507  0689  0274               	subwf	___almod@dividend,w
  8508  068A                     u259_25:	
  8509  068A  1C03               	skipc
  8510  068B  2E94               	goto	i1l2816
  8511  068C  0870               	movf	___almod@divisor,w
  8512  068D  02F4               	subwf	___almod@dividend,f
  8513  068E  0871               	movf	___almod@divisor+1,w
  8514  068F  3BF5               	subwfb	___almod@dividend+1,f
  8515  0690  0872               	movf	___almod@divisor+2,w
  8516  0691  3BF6               	subwfb	___almod@dividend+2,f
  8517  0692  0873               	movf	___almod@divisor+3,w
  8518  0693  3BF7               	subwfb	___almod@dividend+3,f
  8519  0694                     i1l2816:	
  8520  0694  3001               	movlw	1
  8521  0695                     u260_25:	
  8522  0695  36F3               	lsrf	___almod@divisor+3,f
  8523  0696  0CF2               	rrf	___almod@divisor+2,f
  8524  0697  0CF1               	rrf	___almod@divisor+1,f
  8525  0698  0CF0               	rrf	___almod@divisor,f
  8526  0699  0B89               	decfsz	9,f
  8527  069A  2E95               	goto	u260_25
  8528  069B  3001               	movlw	1
  8529  069C  02F9               	subwf	___almod@counter,f
  8530  069D  1D03               	btfss	3,2
  8531  069E  2E7C               	goto	i1l2812
  8532  069F                     i1l2820:	
  8533  069F  087A               	movf	___almod@sign,w
  8534  06A0  1903               	btfsc	3,2
  8535  06A1  2EAD               	goto	i1l2824
  8536  06A2  09F4               	comf	___almod@dividend,f
  8537  06A3  09F5               	comf	___almod@dividend+1,f
  8538  06A4  09F6               	comf	___almod@dividend+2,f
  8539  06A5  09F7               	comf	___almod@dividend+3,f
  8540  06A6  0AF4               	incf	___almod@dividend,f
  8541  06A7  1903               	skipnz
  8542  06A8  0AF5               	incf	___almod@dividend+1,f
  8543  06A9  1903               	skipnz
  8544  06AA  0AF6               	incf	___almod@dividend+2,f
  8545  06AB  1903               	skipnz
  8546  06AC  0AF7               	incf	___almod@dividend+3,f
  8547  06AD                     i1l2824:	
  8548  06AD  0877               	movf	___almod@dividend+3,w
  8549  06AE  00F3               	movwf	?___almod+3
  8550  06AF  0876               	movf	___almod@dividend+2,w
  8551  06B0  00F2               	movwf	?___almod+2
  8552  06B1  0875               	movf	___almod@dividend+1,w
  8553  06B2  00F1               	movwf	?___almod+1
  8554  06B3  0874               	movf	___almod@dividend,w
  8555  06B4  00F0               	movwf	?___almod
  8556  06B5  0008               	return
  8557  06B6                     __end_of___almod:	
  8558                           
  8559                           	psect	text66
  8560  05C7                     __ptext66:	
  8561 ;; *************** function ___aldiv *****************
  8562 ;; Defined at:
  8563 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\aldiv.c"
  8564 ;; Parameters:    Size  Location     Type
  8565 ;;  divisor         4    0[BANK0 ] long 
  8566 ;;  dividend        4    4[BANK0 ] long 
  8567 ;; Auto vars:     Size  Location     Type
  8568 ;;  quotient        4   10[BANK0 ] long 
  8569 ;;  sign            1    9[BANK0 ] unsigned char 
  8570 ;;  counter         1    8[BANK0 ] unsigned char 
  8571 ;; Return value:  Size  Location     Type
  8572 ;;                  4    0[BANK0 ] long 
  8573 ;; Registers used:
  8574 ;;		wreg, status,2, status,0
  8575 ;; Tracked objects:
  8576 ;;		On entry : 0/0
  8577 ;;		On exit  : 0/0
  8578 ;;		Unchanged: 0/0
  8579 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8580 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8581 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8582 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8583 ;;      Totals:         1      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8584 ;;Total ram usage:       15 bytes
  8585 ;; Hardware stack levels used:    1
  8586 ;; This function calls:
  8587 ;;		Nothing
  8588 ;; This function is called by:
  8589 ;;		_restoreTime
  8590 ;; This function uses a non-reentrant model
  8591 ;;
  8592                           
  8593                           
  8594                           ;psect for function ___aldiv
  8595  05C7                     ___aldiv:	
  8596                           
  8597                           ;incstack = 0
  8598                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
  8599  05C7  0020               	movlb	0	; select bank0
  8600  05C8  01A9               	clrf	___aldiv@sign
  8601  05C9  1FA3               	btfss	___aldiv@divisor+3,7
  8602  05CA  2DD8               	goto	i1l839
  8603  05CB  09A0               	comf	___aldiv@divisor,f
  8604  05CC  09A1               	comf	___aldiv@divisor+1,f
  8605  05CD  09A2               	comf	___aldiv@divisor+2,f
  8606  05CE  09A3               	comf	___aldiv@divisor+3,f
  8607  05CF  0AA0               	incf	___aldiv@divisor,f
  8608  05D0  1903               	skipnz
  8609  05D1  0AA1               	incf	___aldiv@divisor+1,f
  8610  05D2  1903               	skipnz
  8611  05D3  0AA2               	incf	___aldiv@divisor+2,f
  8612  05D4  1903               	skipnz
  8613  05D5  0AA3               	incf	___aldiv@divisor+3,f
  8614  05D6  01A9               	clrf	___aldiv@sign
  8615  05D7  0AA9               	incf	___aldiv@sign,f
  8616  05D8                     i1l839:	
  8617  05D8  1FA7               	btfss	___aldiv@dividend+3,7
  8618  05D9  2DE9               	goto	i1l2766
  8619  05DA  09A4               	comf	___aldiv@dividend,f
  8620  05DB  09A5               	comf	___aldiv@dividend+1,f
  8621  05DC  09A6               	comf	___aldiv@dividend+2,f
  8622  05DD  09A7               	comf	___aldiv@dividend+3,f
  8623  05DE  0AA4               	incf	___aldiv@dividend,f
  8624  05DF  1903               	skipnz
  8625  05E0  0AA5               	incf	___aldiv@dividend+1,f
  8626  05E1  1903               	skipnz
  8627  05E2  0AA6               	incf	___aldiv@dividend+2,f
  8628  05E3  1903               	skipnz
  8629  05E4  0AA7               	incf	___aldiv@dividend+3,f
  8630  05E5  3001               	movlw	1
  8631  05E6  00FB               	movwf	??___aldiv
  8632  05E7  087B               	movf	??___aldiv,w
  8633  05E8  06A9               	xorwf	___aldiv@sign,f
  8634  05E9                     i1l2766:	
  8635  05E9  3000               	movlw	0
  8636  05EA  00AD               	movwf	___aldiv@quotient+3
  8637  05EB  3000               	movlw	0
  8638  05EC  00AC               	movwf	___aldiv@quotient+2
  8639  05ED  3000               	movlw	0
  8640  05EE  00AB               	movwf	___aldiv@quotient+1
  8641  05EF  3000               	movlw	0
  8642  05F0  00AA               	movwf	___aldiv@quotient
  8643  05F1  0823               	movf	___aldiv@divisor+3,w
  8644  05F2  0422               	iorwf	___aldiv@divisor+2,w
  8645  05F3  0421               	iorwf	___aldiv@divisor+1,w
  8646  05F4  0420               	iorwf	___aldiv@divisor,w
  8647  05F5  1903               	skipnz
  8648  05F6  2E32               	goto	i1l2788
  8649  05F7  01A8               	clrf	___aldiv@counter
  8650  05F8  0AA8               	incf	___aldiv@counter,f
  8651  05F9                     i1l2774:	
  8652  05F9  1BA3               	btfsc	___aldiv@divisor+3,7
  8653  05FA  2E07               	goto	i1l2776
  8654  05FB  3001               	movlw	1
  8655  05FC                     u247_25:	
  8656  05FC  35A0               	lslf	___aldiv@divisor,f
  8657  05FD  0DA1               	rlf	___aldiv@divisor+1,f
  8658  05FE  0DA2               	rlf	___aldiv@divisor+2,f
  8659  05FF  0DA3               	rlf	___aldiv@divisor+3,f
  8660  0600  0B89               	decfsz	9,f
  8661  0601  2DFC               	goto	u247_25
  8662  0602  3001               	movlw	1
  8663  0603  00FB               	movwf	??___aldiv
  8664  0604  087B               	movf	??___aldiv,w
  8665  0605  07A8               	addwf	___aldiv@counter,f
  8666  0606  2DF9               	goto	i1l2774
  8667  0607                     i1l2776:	
  8668  0607  3001               	movlw	1
  8669  0608                     u249_25:	
  8670  0608  35AA               	lslf	___aldiv@quotient,f
  8671  0609  0DAB               	rlf	___aldiv@quotient+1,f
  8672  060A  0DAC               	rlf	___aldiv@quotient+2,f
  8673  060B  0DAD               	rlf	___aldiv@quotient+3,f
  8674  060C  0B89               	decfsz	9,f
  8675  060D  2E08               	goto	u249_25
  8676  060E  0823               	movf	___aldiv@divisor+3,w
  8677  060F  0227               	subwf	___aldiv@dividend+3,w
  8678  0610  1D03               	skipz
  8679  0611  2E1C               	goto	u250_25
  8680  0612  0822               	movf	___aldiv@divisor+2,w
  8681  0613  0226               	subwf	___aldiv@dividend+2,w
  8682  0614  1D03               	skipz
  8683  0615  2E1C               	goto	u250_25
  8684  0616  0821               	movf	___aldiv@divisor+1,w
  8685  0617  0225               	subwf	___aldiv@dividend+1,w
  8686  0618  1D03               	skipz
  8687  0619  2E1C               	goto	u250_25
  8688  061A  0820               	movf	___aldiv@divisor,w
  8689  061B  0224               	subwf	___aldiv@dividend,w
  8690  061C                     u250_25:	
  8691  061C  1C03               	skipc
  8692  061D  2E27               	goto	i1l2784
  8693  061E  0820               	movf	___aldiv@divisor,w
  8694  061F  02A4               	subwf	___aldiv@dividend,f
  8695  0620  0821               	movf	___aldiv@divisor+1,w
  8696  0621  3BA5               	subwfb	___aldiv@dividend+1,f
  8697  0622  0822               	movf	___aldiv@divisor+2,w
  8698  0623  3BA6               	subwfb	___aldiv@dividend+2,f
  8699  0624  0823               	movf	___aldiv@divisor+3,w
  8700  0625  3BA7               	subwfb	___aldiv@dividend+3,f
  8701  0626  142A               	bsf	___aldiv@quotient,0
  8702  0627                     i1l2784:	
  8703  0627  3001               	movlw	1
  8704  0628                     u251_25:	
  8705  0628  36A3               	lsrf	___aldiv@divisor+3,f
  8706  0629  0CA2               	rrf	___aldiv@divisor+2,f
  8707  062A  0CA1               	rrf	___aldiv@divisor+1,f
  8708  062B  0CA0               	rrf	___aldiv@divisor,f
  8709  062C  0B89               	decfsz	9,f
  8710  062D  2E28               	goto	u251_25
  8711  062E  3001               	movlw	1
  8712  062F  02A8               	subwf	___aldiv@counter,f
  8713  0630  1D03               	btfss	3,2
  8714  0631  2E07               	goto	i1l2776
  8715  0632                     i1l2788:	
  8716  0632  0829               	movf	___aldiv@sign,w
  8717  0633  1903               	btfsc	3,2
  8718  0634  2E40               	goto	i1l2792
  8719  0635  09AA               	comf	___aldiv@quotient,f
  8720  0636  09AB               	comf	___aldiv@quotient+1,f
  8721  0637  09AC               	comf	___aldiv@quotient+2,f
  8722  0638  09AD               	comf	___aldiv@quotient+3,f
  8723  0639  0AAA               	incf	___aldiv@quotient,f
  8724  063A  1903               	skipnz
  8725  063B  0AAB               	incf	___aldiv@quotient+1,f
  8726  063C  1903               	skipnz
  8727  063D  0AAC               	incf	___aldiv@quotient+2,f
  8728  063E  1903               	skipnz
  8729  063F  0AAD               	incf	___aldiv@quotient+3,f
  8730  0640                     i1l2792:	
  8731  0640  082D               	movf	___aldiv@quotient+3,w
  8732  0641  00A3               	movwf	?___aldiv+3
  8733  0642  082C               	movf	___aldiv@quotient+2,w
  8734  0643  00A2               	movwf	?___aldiv+2
  8735  0644  082B               	movf	___aldiv@quotient+1,w
  8736  0645  00A1               	movwf	?___aldiv+1
  8737  0646  082A               	movf	___aldiv@quotient,w
  8738  0647  00A0               	movwf	?___aldiv
  8739  0648  0008               	return
  8740  0649                     __end_of___aldiv:	
  8741                           
  8742                           	psect	text67
  8743  0EB0                     __ptext67:	
  8744 ;; *************** function _shutdown *****************
  8745 ;; Defined at:
  8746 ;;		line 726 in file "clock_functions.c"
  8747 ;; Parameters:    Size  Location     Type
  8748 ;;		None
  8749 ;; Auto vars:     Size  Location     Type
  8750 ;;		None
  8751 ;; Return value:  Size  Location     Type
  8752 ;;                  1    wreg      void 
  8753 ;; Registers used:
  8754 ;;		wreg, status,2, status,0, pclath, cstack
  8755 ;; Tracked objects:
  8756 ;;		On entry : 0/0
  8757 ;;		On exit  : 0/0
  8758 ;;		Unchanged: 0/0
  8759 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8760 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8761 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8762 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8763 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8764 ;;Total ram usage:        0 bytes
  8765 ;; Hardware stack levels used:    1
  8766 ;; Hardware stack levels required when called:    1
  8767 ;; This function calls:
  8768 ;;		i1_TMR1_SetInterruptHandler
  8769 ;;		i1_TMR2_StopTimer
  8770 ;; This function is called by:
  8771 ;;		_powerFailISR
  8772 ;; This function uses a non-reentrant model
  8773 ;;
  8774                           
  8775                           
  8776                           ;psect for function _shutdown
  8777  0EB0                     _shutdown:	
  8778                           
  8779                           ;clock_functions.c: 732: IOCBNbits.IOCBN0 = 0;
  8780                           
  8781                           ;incstack = 0
  8782                           ; Regs used in _shutdown: [wreg+status,2+status,0+pclath+cstack]
  8783  0EB0  0027               	movlb	7	; select bank7
  8784  0EB1  1015               	bcf	21,0	;volatile
  8785                           
  8786                           ;clock_functions.c: 733: IOCBNbits.IOCBN1 = 0;
  8787  0EB2  1095               	bcf	21,1	;volatile
  8788                           
  8789                           ;clock_functions.c: 734: IOCBNbits.IOCBN2 = 0;
  8790  0EB3  1115               	bcf	21,2	;volatile
  8791                           
  8792                           ;clock_functions.c: 735: IOCBNbits.IOCBN3 = 0;
  8793  0EB4  1195               	bcf	21,3	;volatile
  8794                           
  8795                           ;clock_functions.c: 738: LATEbits.LATE0 = 0;
  8796  0EB5  0022               	movlb	2	; select bank2
  8797  0EB6  1010               	bcf	16,0	;volatile
  8798                           
  8799                           ;clock_functions.c: 741: LATEbits.LATE1 = 0;
  8800  0EB7  1090               	bcf	16,1	;volatile
  8801                           
  8802                           ;clock_functions.c: 744: LATEbits.LATE2 = 0;
  8803  0EB8  1110               	bcf	16,2	;volatile
  8804                           
  8805                           ;clock_functions.c: 747: LATCbits.LATC3 = 0;
  8806  0EB9  118E               	bcf	14,3	;volatile
  8807                           
  8808                           ;clock_functions.c: 748: LATCbits.LATC4 = 0;
  8809  0EBA  120E               	bcf	14,4	;volatile
  8810                           
  8811                           ;clock_functions.c: 751: LATCbits.LATC2 = 0;
  8812  0EBB  110E               	bcf	14,2	;volatile
  8813                           
  8814                           ;clock_functions.c: 754: ParallelPort.BCO = 0;
  8815  0EBC  308F               	movlw	-113
  8816  0EBD  058F               	andwf	15,f	;volatile
  8817                           
  8818                           ;clock_functions.c: 755: ParallelPort.BCD = 0;
  8819  0EBE  30F0               	movlw	-16
  8820  0EBF  058F               	andwf	15,f	;volatile
  8821                           
  8822                           ;clock_functions.c: 758: LATDbits.LATD7 = 1;
  8823  0EC0  178F               	bsf	15,7	;volatile
  8824                           
  8825                           ;clock_functions.c: 761: TRISA = 0xFD;
  8826  0EC1  30FD               	movlw	253
  8827  0EC2  0021               	movlb	1	; select bank1
  8828  0EC3  008C               	movwf	12	;volatile
  8829                           
  8830                           ;clock_functions.c: 762: TRISB = 0x3F;
  8831  0EC4  303F               	movlw	63
  8832  0EC5  008D               	movwf	13	;volatile
  8833                           
  8834                           ;clock_functions.c: 763: TRISC = 0xFD;
  8835  0EC6  30FD               	movlw	253
  8836  0EC7  008E               	movwf	14	;volatile
  8837                           
  8838                           ;clock_functions.c: 764: TRISD = 0xFF;
  8839  0EC8  30FF               	movlw	255
  8840  0EC9  008F               	movwf	15	;volatile
  8841                           
  8842                           ;clock_functions.c: 765: TRISE = 0xF;
  8843  0ECA  300F               	movlw	15
  8844  0ECB  0090               	movwf	16	;volatile
  8845                           
  8846                           ;clock_functions.c: 768: LATAbits.LATA3 = 0;
  8847  0ECC  0022               	movlb	2	; select bank2
  8848  0ECD  118C               	bcf	12,3	;volatile
  8849                           
  8850                           ;clock_functions.c: 771: asleep_flag = 1;
  8851  0ECE  0020               	movlb	0	; select bank0
  8852  0ECF  146E               	bsf	_asleep_flag/(0+8),_asleep_flag& (0+7)	;volatile
  8853                           
  8854                           ;clock_functions.c: 774: INTCONbits.TMR0IE = 0;
  8855  0ED0  128B               	bcf	11,5	;volatile
  8856                           
  8857                           ;clock_functions.c: 775: PIE1bits.TMR2IE = 0;
  8858  0ED1  0021               	movlb	1	; select bank1
  8859  0ED2  1091               	bcf	17,1	;volatile
  8860                           
  8861                           ;clock_functions.c: 778: TMR0CS = 1;
  8862  0ED3  1695               	bsf	21,5	;volatile
  8863                           
  8864                           ;clock_functions.c: 779: TMR2_StopTimer();
  8865  0ED4  318A  22A8  318E   	fcall	i1_TMR2_StopTimer
  8866                           
  8867                           ;clock_functions.c: 782: nT1SYNC = 1;
  8868  0ED7  0020               	movlb	0	; select bank0
  8869  0ED8  1518               	bsf	24,2	;volatile
  8870                           
  8871                           ;clock_functions.c: 785: TMR1_SetInterruptHandler(sleepyTickISR);
  8872  0ED9  3040               	movlw	low _sleepyTickISR
  8873  0EDA  00F0               	movwf	i1TMR1_SetInterruptHandler@InterruptHandler
  8874  0EDB  300B               	movlw	high _sleepyTickISR
  8875  0EDC  00F1               	movwf	i1TMR1_SetInterruptHandler@InterruptHandler+1
  8876  0EDD  318A  22BF  318E   	fcall	i1_TMR1_SetInterruptHandler
  8877                           
  8878                           ;clock_functions.c: 789: OSCCONbits.IRCF = 0b0000;
  8879  0EE0  3087               	movlw	-121
  8880  0EE1  0021               	movlb	1	; select bank1
  8881  0EE2  0599               	andwf	25,f	;volatile
  8882  0EE3                     i1l682:	
  8883                           ;clock_functions.c: 790: while(!LFIOFR);
  8884                           
  8885  0EE3  1C9A               	btfss	26,1	;volatile
  8886  0EE4  2EE3               	goto	i1l682
  8887                           
  8888                           ;clock_functions.c: 791: OSCCONbits.SCS = 0b11;
  8889  0EE5  3003               	movlw	3
  8890  0EE6  0499               	iorwf	25,f	;volatile
  8891  0EE7                     i1l685:	
  8892                           ;clock_functions.c: 792: while(!LFIOFR);
  8893                           
  8894  0EE7  1C9A               	btfss	26,1	;volatile
  8895  0EE8  2EE7               	goto	i1l685
  8896  0EE9  0063               	sleep	;# 
  8897                           
  8898                           ;clock_functions.c: 798: __nop();
  8899  0EEA  0000               	nop
  8900  0EEB  0008               	return
  8901  0EEC                     __end_of_shutdown:	
  8902                           
  8903                           	psect	text68
  8904  0AA8                     __ptext68:	
  8905 ;; *************** function i1_TMR2_StopTimer *****************
  8906 ;; Defined at:
  8907 ;;		line 98 in file "mcc_generated_files/tmr2.c"
  8908 ;; Parameters:    Size  Location     Type
  8909 ;;		None
  8910 ;; Auto vars:     Size  Location     Type
  8911 ;;		None
  8912 ;; Return value:  Size  Location     Type
  8913 ;;                  1    wreg      void 
  8914 ;; Registers used:
  8915 ;;		None
  8916 ;; Tracked objects:
  8917 ;;		On entry : 0/0
  8918 ;;		On exit  : 0/0
  8919 ;;		Unchanged: 0/0
  8920 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8921 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8922 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8923 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8924 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8925 ;;Total ram usage:        0 bytes
  8926 ;; Hardware stack levels used:    1
  8927 ;; This function calls:
  8928 ;;		Nothing
  8929 ;; This function is called by:
  8930 ;;		_blankISR
  8931 ;;		_shutdown
  8932 ;; This function uses a non-reentrant model
  8933 ;;
  8934                           
  8935                           
  8936                           ;psect for function i1_TMR2_StopTimer
  8937  0AA8                     i1_TMR2_StopTimer:	
  8938                           
  8939                           ;tmr2.c: 101: T2CONbits.TMR2ON = 0;
  8940                           
  8941                           ;incstack = 0
  8942                           ; Regs used in i1_TMR2_StopTimer: []
  8943  0AA8  0020               	movlb	0	; select bank0
  8944  0AA9  111C               	bcf	28,2	;volatile
  8945  0AAA  0008               	return
  8946  0AAB                     __end_ofi1_TMR2_StopTimer:	
  8947                           
  8948                           	psect	text69
  8949  0ABF                     __ptext69:	
  8950 ;; *************** function i1_TMR1_SetInterruptHandler *****************
  8951 ;; Defined at:
  8952 ;;		line 171 in file "mcc_generated_files/tmr1.c"
  8953 ;; Parameters:    Size  Location     Type
  8954 ;;  InterruptHan    2    0[COMMON] PTR void 
  8955 ;;		 -> sleepyTickISR(1), tickISR(1), TMR1_DefaultInterruptHandler(1), 
  8956 ;; Auto vars:     Size  Location     Type
  8957 ;;		None
  8958 ;; Return value:  Size  Location     Type
  8959 ;;                  1    wreg      void 
  8960 ;; Registers used:
  8961 ;;		wreg
  8962 ;; Tracked objects:
  8963 ;;		On entry : 0/0
  8964 ;;		On exit  : 0/0
  8965 ;;		Unchanged: 0/0
  8966 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8967 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8968 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8969 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8970 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8971 ;;Total ram usage:        2 bytes
  8972 ;; Hardware stack levels used:    1
  8973 ;; This function calls:
  8974 ;;		Nothing
  8975 ;; This function is called by:
  8976 ;;		_shutdown
  8977 ;;		_wakeup
  8978 ;; This function uses a non-reentrant model
  8979 ;;
  8980                           
  8981                           
  8982                           ;psect for function i1_TMR1_SetInterruptHandler
  8983  0ABF                     i1_TMR1_SetInterruptHandler:	
  8984                           
  8985                           ;tmr1.c: 172: TMR1_InterruptHandler = InterruptHandler;
  8986                           
  8987                           ;incstack = 0
  8988                           ; Regs used in i1_TMR1_SetInterruptHandler: [wreg]
  8989  0ABF  0871               	movf	i1TMR1_SetInterruptHandler@InterruptHandler+1,w
  8990  0AC0  0021               	movlb	1	; select bank1
  8991  0AC1  00C1               	movwf	(_TMR1_InterruptHandler+1)^(0+128)
  8992  0AC2  0870               	movf	i1TMR1_SetInterruptHandler@InterruptHandler,w
  8993  0AC3  00C0               	movwf	_TMR1_InterruptHandler^(0+128)
  8994  0AC4  0008               	return
  8995  0AC5                     __end_ofi1_TMR1_SetInterruptHandler:	
  8996                           
  8997                           	psect	text70
  8998  0B73                     __ptext70:	
  8999 ;; *************** function _IOCBF3_ISR *****************
  9000 ;; Defined at:
  9001 ;;		line 272 in file "mcc_generated_files/pin_manager.c"
  9002 ;; Parameters:    Size  Location     Type
  9003 ;;		None
  9004 ;; Auto vars:     Size  Location     Type
  9005 ;;		None
  9006 ;; Return value:  Size  Location     Type
  9007 ;;                  1    wreg      void 
  9008 ;; Registers used:
  9009 ;;		wreg, status,2, status,0, pclath, cstack
  9010 ;; Tracked objects:
  9011 ;;		On entry : 0/0
  9012 ;;		On exit  : 0/0
  9013 ;;		Unchanged: 0/0
  9014 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9015 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9016 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9017 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9018 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9019 ;;Total ram usage:        0 bytes
  9020 ;; Hardware stack levels used:    1
  9021 ;; Hardware stack levels required when called:    1
  9022 ;; This function calls:
  9023 ;;		Absolute function
  9024 ;;		_IOCBF3_DefaultInterruptHandler
  9025 ;;		_displayToggleISR
  9026 ;; This function is called by:
  9027 ;;		_PIN_MANAGER_IOC
  9028 ;; This function uses a non-reentrant model
  9029 ;;
  9030                           
  9031                           
  9032                           ;psect for function _IOCBF3_ISR
  9033  0B73                     _IOCBF3_ISR:	
  9034                           
  9035                           ;pin_manager.c: 277: if(IOCBF3_InterruptHandler)
  9036                           
  9037                           ;incstack = 0
  9038                           ; Regs used in _IOCBF3_ISR: [wreg+status,2+status,0+pclath+cstack]
  9039  0B73  0021               	movlb	1	; select bank1
  9040  0B74  0836               	movf	_IOCBF3_InterruptHandler^(0+128),w
  9041  0B75  0437               	iorwf	(_IOCBF3_InterruptHandler+1)^(0+128),w
  9042  0B76  1903               	btfsc	3,2
  9043  0B77  2B7D               	goto	i1l3472
  9044                           
  9045                           ;pin_manager.c: 278: {
  9046                           ;pin_manager.c: 279: IOCBF3_InterruptHandler();
  9047  0B78  0837               	movf	(_IOCBF3_InterruptHandler+1)^(0+128),w
  9048  0B79  008A               	movwf	10
  9049  0B7A  0836               	movf	_IOCBF3_InterruptHandler^(0+128),w
  9050  0B7B  000A               	callw
  9051  0B7C  318B               	pagesel	$
  9052  0B7D                     i1l3472:	
  9053                           
  9054                           ;pin_manager.c: 280: }
  9055                           ;pin_manager.c: 281: IOCBFbits.IOCBF3 = 0;
  9056  0B7D  0027               	movlb	7	; select bank7
  9057  0B7E  1196               	bcf	22,3	;volatile
  9058  0B7F  0008               	return
  9059  0B80                     __end_of_IOCBF3_ISR:	
  9060                           
  9061                           	psect	text71
  9062  0AA2                     __ptext71:	
  9063 ;; *************** function _IOCBF3_DefaultInterruptHandler *****************
  9064 ;; Defined at:
  9065 ;;		line 294 in file "mcc_generated_files/pin_manager.c"
  9066 ;; Parameters:    Size  Location     Type
  9067 ;;		None
  9068 ;; Auto vars:     Size  Location     Type
  9069 ;;		None
  9070 ;; Return value:  Size  Location     Type
  9071 ;;                  1    wreg      void 
  9072 ;; Registers used:
  9073 ;;		None
  9074 ;; Tracked objects:
  9075 ;;		On entry : 0/0
  9076 ;;		On exit  : 0/0
  9077 ;;		Unchanged: 0/0
  9078 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9079 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9080 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9081 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9082 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9083 ;;Total ram usage:        0 bytes
  9084 ;; Hardware stack levels used:    1
  9085 ;; This function calls:
  9086 ;;		Nothing
  9087 ;; This function is called by:
  9088 ;;		_PIN_MANAGER_Initialize
  9089 ;;		_IOCBF3_ISR
  9090 ;; This function uses a non-reentrant model
  9091 ;;
  9092                           
  9093                           
  9094                           ;psect for function _IOCBF3_DefaultInterruptHandler
  9095  0AA2                     _IOCBF3_DefaultInterruptHandler:	
  9096                           
  9097                           ;incstack = 0
  9098                           ; Regs used in _IOCBF3_DefaultInterruptHandler: []
  9099  0AA2  0008               	return
  9100  0AA3                     __end_of_IOCBF3_DefaultInterruptHandler:	
  9101                           
  9102                           	psect	text72
  9103  0D84                     __ptext72:	
  9104 ;; *************** function _displayToggleISR *****************
  9105 ;; Defined at:
  9106 ;;		line 469 in file "clock_functions.c"
  9107 ;; Parameters:    Size  Location     Type
  9108 ;;		None
  9109 ;; Auto vars:     Size  Location     Type
  9110 ;;		None
  9111 ;; Return value:  Size  Location     Type
  9112 ;;                  1    wreg      void 
  9113 ;; Registers used:
  9114 ;;		status,0
  9115 ;; Tracked objects:
  9116 ;;		On entry : 0/0
  9117 ;;		On exit  : 0/0
  9118 ;;		Unchanged: 0/0
  9119 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9120 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9121 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9122 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9123 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9124 ;;Total ram usage:        0 bytes
  9125 ;; Hardware stack levels used:    1
  9126 ;; This function calls:
  9127 ;;		Nothing
  9128 ;; This function is called by:
  9129 ;;		_startup
  9130 ;;		_wakeup
  9131 ;;		_IOCBF3_ISR
  9132 ;; This function uses a non-reentrant model
  9133 ;;
  9134                           
  9135                           
  9136                           ;psect for function _displayToggleISR
  9137  0D84                     _displayToggleISR:	
  9138                           
  9139                           ;clock_functions.c: 476: if (PORTBbits.RB3 == 0) {
  9140                           
  9141                           ;incstack = 0
  9142                           ; Regs used in _displayToggleISR: [status,0]
  9143  0D84  0020               	movlb	0	; select bank0
  9144  0D85  198D               	btfsc	13,3	;volatile
  9145  0D86  0008               	return
  9146                           
  9147                           ;clock_functions.c: 479: if (LATAbits.LATA3 == 0) {
  9148  0D87  0022               	movlb	2	; select bank2
  9149  0D88  198C               	btfsc	12,3	;volatile
  9150  0D89  2DA1               	goto	i1l637
  9151                           
  9152                           ;clock_functions.c: 481: LATAbits.LATA3 = !(PORTCbits.RC5);
  9153  0D8A  1003               	clrc
  9154  0D8B  0020               	movlb	0	; select bank0
  9155  0D8C  1E8E               	btfss	14,5	;volatile
  9156  0D8D  1403               	setc
  9157  0D8E  1C03               	btfss	3,0
  9158  0D8F  2D93               	goto	u324_20
  9159  0D90  0022               	movlb	2	; select bank2
  9160  0D91  158C               	bsf	12,3	;volatile
  9161  0D92  2D95               	goto	i1l3444
  9162  0D93                     u324_20:	
  9163  0D93  0022               	movlb	2	; select bank2
  9164  0D94  118C               	bcf	12,3	;volatile
  9165  0D95                     i1l3444:	
  9166                           
  9167                           ;clock_functions.c: 482: LATEbits.LATE0 = 1;
  9168  0D95  1410               	bsf	16,0	;volatile
  9169  0D96                     i1l638:	
  9170                           ;clock_functions.c: 484: while (PORTAbits.RA2 == 0);
  9171                           
  9172  0D96  0020               	movlb	0	; select bank0
  9173  0D97  1D0C               	btfss	12,2	;volatile
  9174  0D98  2D96               	goto	i1l638
  9175                           
  9176                           ;clock_functions.c: 487: INTCONbits.TMR0IE = 1;
  9177  0D99  168B               	bsf	11,5	;volatile
  9178                           
  9179                           ;clock_functions.c: 488: PIE1bits.TMR2IE = 1;
  9180  0D9A  0021               	movlb	1	; select bank1
  9181  0D9B  1491               	bsf	17,1	;volatile
  9182                           
  9183                           ;clock_functions.c: 490: IOCBNbits.IOCBN0 = 1;
  9184  0D9C  0027               	movlb	7	; select bank7
  9185  0D9D  1415               	bsf	21,0	;volatile
  9186                           
  9187                           ;clock_functions.c: 491: IOCBNbits.IOCBN1 = 1;
  9188  0D9E  1495               	bsf	21,1	;volatile
  9189                           
  9190                           ;clock_functions.c: 492: IOCBNbits.IOCBN2 = 1;
  9191  0D9F  1515               	bsf	21,2	;volatile
  9192                           
  9193                           ;clock_functions.c: 496: }
  9194  0DA0  0008               	return
  9195  0DA1                     i1l637:	
  9196                           
  9197                           ;clock_functions.c: 499: else {
  9198                           ;clock_functions.c: 501: LATAbits.LATA3 = 0;
  9199  0DA1  118C               	bcf	12,3	;volatile
  9200                           
  9201                           ;clock_functions.c: 502: LATEbits.LATE0 = 0;
  9202  0DA2  1010               	bcf	16,0	;volatile
  9203                           
  9204                           ;clock_functions.c: 505: INTCONbits.TMR0IE = 0;
  9205  0DA3  128B               	bcf	11,5	;volatile
  9206                           
  9207                           ;clock_functions.c: 506: PIE1bits.TMR2IE = 0;
  9208  0DA4  0021               	movlb	1	; select bank1
  9209  0DA5  1091               	bcf	17,1	;volatile
  9210                           
  9211                           ;clock_functions.c: 508: IOCBNbits.IOCBN0 = 0;
  9212  0DA6  0027               	movlb	7	; select bank7
  9213  0DA7  1015               	bcf	21,0	;volatile
  9214                           
  9215                           ;clock_functions.c: 509: IOCBNbits.IOCBN1 = 0;
  9216  0DA8  1095               	bcf	21,1	;volatile
  9217                           
  9218                           ;clock_functions.c: 510: IOCBNbits.IOCBN2 = 0;
  9219  0DA9  1115               	bcf	21,2	;volatile
  9220  0DAA  0008               	return
  9221  0DAB                     __end_of_displayToggleISR:	
  9222                           
  9223                           	psect	text73
  9224  0B66                     __ptext73:	
  9225 ;; *************** function _IOCBF2_ISR *****************
  9226 ;; Defined at:
  9227 ;;		line 242 in file "mcc_generated_files/pin_manager.c"
  9228 ;; Parameters:    Size  Location     Type
  9229 ;;		None
  9230 ;; Auto vars:     Size  Location     Type
  9231 ;;		None
  9232 ;; Return value:  Size  Location     Type
  9233 ;;                  1    wreg      void 
  9234 ;; Registers used:
  9235 ;;		wreg, status,2, status,0, pclath, cstack
  9236 ;; Tracked objects:
  9237 ;;		On entry : 0/0
  9238 ;;		On exit  : 0/0
  9239 ;;		Unchanged: 0/0
  9240 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9241 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9242 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9243 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9244 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9245 ;;Total ram usage:        0 bytes
  9246 ;; Hardware stack levels used:    1
  9247 ;; Hardware stack levels required when called:    3
  9248 ;; This function calls:
  9249 ;;		Absolute function
  9250 ;;		_IOCBF2_DefaultInterruptHandler
  9251 ;;		_setHoursISR
  9252 ;; This function is called by:
  9253 ;;		_PIN_MANAGER_IOC
  9254 ;; This function uses a non-reentrant model
  9255 ;;
  9256                           
  9257                           
  9258                           ;psect for function _IOCBF2_ISR
  9259  0B66                     _IOCBF2_ISR:	
  9260                           
  9261                           ;pin_manager.c: 247: if(IOCBF2_InterruptHandler)
  9262                           
  9263                           ;incstack = 0
  9264                           ; Regs used in _IOCBF2_ISR: [wreg+status,2+status,0+pclath+cstack]
  9265  0B66  0021               	movlb	1	; select bank1
  9266  0B67  0838               	movf	_IOCBF2_InterruptHandler^(0+128),w
  9267  0B68  0439               	iorwf	(_IOCBF2_InterruptHandler+1)^(0+128),w
  9268  0B69  1903               	btfsc	3,2
  9269  0B6A  2B70               	goto	i1l3466
  9270                           
  9271                           ;pin_manager.c: 248: {
  9272                           ;pin_manager.c: 249: IOCBF2_InterruptHandler();
  9273  0B6B  0839               	movf	(_IOCBF2_InterruptHandler+1)^(0+128),w
  9274  0B6C  008A               	movwf	10
  9275  0B6D  0838               	movf	_IOCBF2_InterruptHandler^(0+128),w
  9276  0B6E  000A               	callw
  9277  0B6F  318B               	pagesel	$
  9278  0B70                     i1l3466:	
  9279                           
  9280                           ;pin_manager.c: 250: }
  9281                           ;pin_manager.c: 251: IOCBFbits.IOCBF2 = 0;
  9282  0B70  0027               	movlb	7	; select bank7
  9283  0B71  1116               	bcf	22,2	;volatile
  9284  0B72  0008               	return
  9285  0B73                     __end_of_IOCBF2_ISR:	
  9286                           
  9287                           	psect	text74
  9288  0AA1                     __ptext74:	
  9289 ;; *************** function _IOCBF2_DefaultInterruptHandler *****************
  9290 ;; Defined at:
  9291 ;;		line 264 in file "mcc_generated_files/pin_manager.c"
  9292 ;; Parameters:    Size  Location     Type
  9293 ;;		None
  9294 ;; Auto vars:     Size  Location     Type
  9295 ;;		None
  9296 ;; Return value:  Size  Location     Type
  9297 ;;                  1    wreg      void 
  9298 ;; Registers used:
  9299 ;;		None
  9300 ;; Tracked objects:
  9301 ;;		On entry : 0/0
  9302 ;;		On exit  : 0/0
  9303 ;;		Unchanged: 0/0
  9304 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9305 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9306 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9307 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9308 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9309 ;;Total ram usage:        0 bytes
  9310 ;; Hardware stack levels used:    1
  9311 ;; This function calls:
  9312 ;;		Nothing
  9313 ;; This function is called by:
  9314 ;;		_PIN_MANAGER_Initialize
  9315 ;;		_IOCBF2_ISR
  9316 ;; This function uses a non-reentrant model
  9317 ;;
  9318                           
  9319                           
  9320                           ;psect for function _IOCBF2_DefaultInterruptHandler
  9321  0AA1                     _IOCBF2_DefaultInterruptHandler:	
  9322                           
  9323                           ;incstack = 0
  9324                           ; Regs used in _IOCBF2_DefaultInterruptHandler: []
  9325  0AA1  0008               	return
  9326  0AA2                     __end_of_IOCBF2_DefaultInterruptHandler:	
  9327                           
  9328                           	psect	text75
  9329  0CF2                     __ptext75:	
  9330 ;; *************** function _setHoursISR *****************
  9331 ;; Defined at:
  9332 ;;		line 386 in file "clock_functions.c"
  9333 ;; Parameters:    Size  Location     Type
  9334 ;;		None
  9335 ;; Auto vars:     Size  Location     Type
  9336 ;;		None
  9337 ;; Return value:  Size  Location     Type
  9338 ;;                  1    wreg      void 
  9339 ;; Registers used:
  9340 ;;		wreg, status,2, status,0, pclath, cstack
  9341 ;; Tracked objects:
  9342 ;;		On entry : 0/0
  9343 ;;		On exit  : 0/0
  9344 ;;		Unchanged: 0/0
  9345 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9346 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9347 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9348 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9349 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9350 ;;Total ram usage:        0 bytes
  9351 ;; Hardware stack levels used:    1
  9352 ;; Hardware stack levels required when called:    2
  9353 ;; This function calls:
  9354 ;;		_TMR1_StopTimer
  9355 ;;		_isolateDigits
  9356 ;;		_twentyFourParse
  9357 ;;		_updateDisplay
  9358 ;; This function is called by:
  9359 ;;		_startup
  9360 ;;		_wakeup
  9361 ;;		_IOCBF2_ISR
  9362 ;; This function uses a non-reentrant model
  9363 ;;
  9364                           
  9365                           
  9366                           ;psect for function _setHoursISR
  9367  0CF2                     _setHoursISR:	
  9368                           
  9369                           ;clock_functions.c: 393: if (PORTBbits.RB2 == 0) {
  9370                           
  9371                           ;incstack = 0
  9372                           ; Regs used in _setHoursISR: [wreg+status,2+status,0+pclath+cstack]
  9373  0CF2  0020               	movlb	0	; select bank0
  9374  0CF3  190D               	btfsc	13,2	;volatile
  9375  0CF4  0008               	return
  9376                           
  9377                           ;clock_functions.c: 396: PIE1bits.TMR1IE = 0;
  9378  0CF5  0021               	movlb	1	; select bank1
  9379  0CF6  1011               	bcf	17,0	;volatile
  9380                           
  9381                           ;clock_functions.c: 399: LATCbits.LATC3 = 1;
  9382  0CF7  0022               	movlb	2	; select bank2
  9383  0CF8  158E               	bsf	14,3	;volatile
  9384                           
  9385                           ;clock_functions.c: 400: LATCbits.LATC4 = 1;
  9386  0CF9  160E               	bsf	14,4	;volatile
  9387                           
  9388                           ;clock_functions.c: 403: IOCBNbits.IOCBN2 = 0;
  9389  0CFA  0027               	movlb	7	; select bank7
  9390  0CFB  1115               	bcf	21,2	;volatile
  9391                           
  9392                           ;clock_functions.c: 406: hours++;
  9393  0CFC  3001               	movlw	1
  9394  0CFD  0020               	movlb	0	; select bank0
  9395  0CFE  07E2               	addwf	_hours,f	;volatile
  9396  0CFF  3000               	movlw	0
  9397  0D00  3DE3               	addwfc	_hours+1,f	;volatile
  9398                           
  9399                           ;clock_functions.c: 411: if (hours == 24) {
  9400  0D01  3018               	movlw	24
  9401  0D02  0662               	xorwf	_hours,w	;volatile
  9402  0D03  0463               	iorwf	_hours+1,w	;volatile
  9403  0D04  1D03               	btfss	3,2
  9404  0D05  2D08               	goto	i1l3422
  9405                           
  9406                           ;clock_functions.c: 413: hours = 0;
  9407  0D06  01E2               	clrf	_hours	;volatile
  9408  0D07  01E3               	clrf	_hours+1	;volatile
  9409  0D08                     i1l3422:	
  9410                           
  9411                           ;clock_functions.c: 415: }
  9412                           ;clock_functions.c: 417: twentyFourParse();
  9413  0D08  318C  24CE  318C   	fcall	_twentyFourParse
  9414                           
  9415                           ;clock_functions.c: 418: isolateDigits();
  9416  0D0B  3185  2543  318C   	fcall	_isolateDigits
  9417                           
  9418                           ;clock_functions.c: 419: updateDisplay();
  9419  0D0E  318D  253A  318C   	fcall	_updateDisplay
  9420                           
  9421                           ;clock_functions.c: 422: IOCBNbits.IOCBN2 = 1;
  9422  0D11  0027               	movlb	7	; select bank7
  9423  0D12  1515               	bsf	21,2	;volatile
  9424                           
  9425                           ;clock_functions.c: 426: TMR1_StopTimer();
  9426  0D13  318A  22A5         	fcall	_TMR1_StopTimer
  9427  0D15  0008               	return
  9428  0D16                     __end_of_setHoursISR:	
  9429                           
  9430                           	psect	text76
  9431  0CCE                     __ptext76:	
  9432 ;; *************** function _twentyFourParse *****************
  9433 ;; Defined at:
  9434 ;;		line 593 in file "clock_functions.c"
  9435 ;; Parameters:    Size  Location     Type
  9436 ;;		None
  9437 ;; Auto vars:     Size  Location     Type
  9438 ;;		None
  9439 ;; Return value:  Size  Location     Type
  9440 ;;                  1    wreg      void 
  9441 ;; Registers used:
  9442 ;;		wreg, status,2, status,0
  9443 ;; Tracked objects:
  9444 ;;		On entry : 0/0
  9445 ;;		On exit  : 0/0
  9446 ;;		Unchanged: 0/0
  9447 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9448 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9449 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9450 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9451 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9452 ;;Total ram usage:        0 bytes
  9453 ;; Hardware stack levels used:    1
  9454 ;; This function calls:
  9455 ;;		Nothing
  9456 ;; This function is called by:
  9457 ;;		_tickISR
  9458 ;;		_setHoursISR
  9459 ;;		_wakeup
  9460 ;; This function uses a non-reentrant model
  9461 ;;
  9462                           
  9463                           
  9464                           ;psect for function _twentyFourParse
  9465  0CCE                     _twentyFourParse:	
  9466                           
  9467                           ;clock_functions.c: 600: if (PORTCbits.RC6 == 1) {
  9468                           
  9469                           ;incstack = 0
  9470                           ; Regs used in _twentyFourParse: [wreg+status,2+status,0]
  9471  0CCE  0020               	movlb	0	; select bank0
  9472  0CCF  1F0E               	btfss	14,6	;volatile
  9473  0CD0  2CED               	goto	i1l2986
  9474                           
  9475                           ;clock_functions.c: 603: if (hours == 0) {
  9476  0CD1  0862               	movf	_hours,w	;volatile
  9477  0CD2  0463               	iorwf	_hours+1,w	;volatile
  9478  0CD3  1D03               	btfss	3,2
  9479  0CD4  2CDA               	goto	i1l2980
  9480                           
  9481                           ;clock_functions.c: 605: display_hours = 12;
  9482  0CD5  300C               	movlw	12
  9483  0CD6  00E0               	movwf	_display_hours	;volatile
  9484  0CD7  3000               	movlw	0
  9485  0CD8  00E1               	movwf	_display_hours+1	;volatile
  9486                           
  9487                           ;clock_functions.c: 607: }
  9488  0CD9  0008               	return
  9489  0CDA                     i1l2980:	
  9490                           
  9491                           ;clock_functions.c: 610: else if (hours > 12) {
  9492  0CDA  3000               	movlw	0
  9493  0CDB  0263               	subwf	_hours+1,w	;volatile
  9494  0CDC  300D               	movlw	13
  9495  0CDD  1903               	skipnz
  9496  0CDE  0262               	subwf	_hours,w	;volatile
  9497  0CDF  1C03               	skipc
  9498  0CE0  2CE8               	goto	i1l2984
  9499                           
  9500                           ;clock_functions.c: 612: display_hours = hours - 12;
  9501  0CE1  0862               	movf	_hours,w	;volatile
  9502  0CE2  3EF4               	addlw	244
  9503  0CE3  00E0               	movwf	_display_hours	;volatile
  9504  0CE4  30FF               	movlw	255
  9505  0CE5  3D63               	addwfc	_hours+1,w	;volatile
  9506  0CE6  00E1               	movwf	_display_hours+1	;volatile
  9507                           
  9508                           ;clock_functions.c: 614: }
  9509  0CE7  0008               	return
  9510  0CE8                     i1l2984:	
  9511                           
  9512                           ;clock_functions.c: 617: else {
  9513                           ;clock_functions.c: 619: display_hours = hours;
  9514  0CE8  0863               	movf	_hours+1,w	;volatile
  9515  0CE9  00E1               	movwf	_display_hours+1	;volatile
  9516  0CEA  0862               	movf	_hours,w	;volatile
  9517  0CEB  00E0               	movwf	_display_hours	;volatile
  9518                           
  9519                           ;clock_functions.c: 621: }
  9520                           ;clock_functions.c: 623: }
  9521  0CEC  0008               	return
  9522  0CED                     i1l2986:	
  9523                           
  9524                           ;clock_functions.c: 626: else {
  9525                           ;clock_functions.c: 628: display_hours = hours;
  9526  0CED  0863               	movf	_hours+1,w	;volatile
  9527  0CEE  00E1               	movwf	_display_hours+1	;volatile
  9528  0CEF  0862               	movf	_hours,w	;volatile
  9529  0CF0  00E0               	movwf	_display_hours	;volatile
  9530  0CF1  0008               	return
  9531  0CF2                     __end_of_twentyFourParse:	
  9532                           
  9533                           	psect	text77
  9534  0B59                     __ptext77:	
  9535 ;; *************** function _IOCBF1_ISR *****************
  9536 ;; Defined at:
  9537 ;;		line 212 in file "mcc_generated_files/pin_manager.c"
  9538 ;; Parameters:    Size  Location     Type
  9539 ;;		None
  9540 ;; Auto vars:     Size  Location     Type
  9541 ;;		None
  9542 ;; Return value:  Size  Location     Type
  9543 ;;                  1    wreg      void 
  9544 ;; Registers used:
  9545 ;;		wreg, status,2, status,0, pclath, cstack
  9546 ;; Tracked objects:
  9547 ;;		On entry : 0/0
  9548 ;;		On exit  : 0/0
  9549 ;;		Unchanged: 0/0
  9550 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9551 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9552 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9553 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9554 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9555 ;;Total ram usage:        0 bytes
  9556 ;; Hardware stack levels used:    1
  9557 ;; Hardware stack levels required when called:    3
  9558 ;; This function calls:
  9559 ;;		Absolute function
  9560 ;;		_IOCBF1_DefaultInterruptHandler
  9561 ;;		_setMinutesISR
  9562 ;; This function is called by:
  9563 ;;		_PIN_MANAGER_IOC
  9564 ;; This function uses a non-reentrant model
  9565 ;;
  9566                           
  9567                           
  9568                           ;psect for function _IOCBF1_ISR
  9569  0B59                     _IOCBF1_ISR:	
  9570                           
  9571                           ;pin_manager.c: 217: if(IOCBF1_InterruptHandler)
  9572                           
  9573                           ;incstack = 0
  9574                           ; Regs used in _IOCBF1_ISR: [wreg+status,2+status,0+pclath+cstack]
  9575  0B59  0021               	movlb	1	; select bank1
  9576  0B5A  083A               	movf	_IOCBF1_InterruptHandler^(0+128),w
  9577  0B5B  043B               	iorwf	(_IOCBF1_InterruptHandler+1)^(0+128),w
  9578  0B5C  1903               	btfsc	3,2
  9579  0B5D  2B63               	goto	i1l3460
  9580                           
  9581                           ;pin_manager.c: 218: {
  9582                           ;pin_manager.c: 219: IOCBF1_InterruptHandler();
  9583  0B5E  083B               	movf	(_IOCBF1_InterruptHandler+1)^(0+128),w
  9584  0B5F  008A               	movwf	10
  9585  0B60  083A               	movf	_IOCBF1_InterruptHandler^(0+128),w
  9586  0B61  000A               	callw
  9587  0B62  318B               	pagesel	$
  9588  0B63                     i1l3460:	
  9589                           
  9590                           ;pin_manager.c: 220: }
  9591                           ;pin_manager.c: 221: IOCBFbits.IOCBF1 = 0;
  9592  0B63  0027               	movlb	7	; select bank7
  9593  0B64  1096               	bcf	22,1	;volatile
  9594  0B65  0008               	return
  9595  0B66                     __end_of_IOCBF1_ISR:	
  9596                           
  9597                           	psect	text78
  9598  0AA0                     __ptext78:	
  9599 ;; *************** function _IOCBF1_DefaultInterruptHandler *****************
  9600 ;; Defined at:
  9601 ;;		line 234 in file "mcc_generated_files/pin_manager.c"
  9602 ;; Parameters:    Size  Location     Type
  9603 ;;		None
  9604 ;; Auto vars:     Size  Location     Type
  9605 ;;		None
  9606 ;; Return value:  Size  Location     Type
  9607 ;;                  1    wreg      void 
  9608 ;; Registers used:
  9609 ;;		None
  9610 ;; Tracked objects:
  9611 ;;		On entry : 0/0
  9612 ;;		On exit  : 0/0
  9613 ;;		Unchanged: 0/0
  9614 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9615 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9616 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9617 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9618 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9619 ;;Total ram usage:        0 bytes
  9620 ;; Hardware stack levels used:    1
  9621 ;; This function calls:
  9622 ;;		Nothing
  9623 ;; This function is called by:
  9624 ;;		_PIN_MANAGER_Initialize
  9625 ;;		_IOCBF1_ISR
  9626 ;; This function uses a non-reentrant model
  9627 ;;
  9628                           
  9629                           
  9630                           ;psect for function _IOCBF1_DefaultInterruptHandler
  9631  0AA0                     _IOCBF1_DefaultInterruptHandler:	
  9632                           
  9633                           ;incstack = 0
  9634                           ; Regs used in _IOCBF1_DefaultInterruptHandler: []
  9635  0AA0  0008               	return
  9636  0AA1                     __end_of_IOCBF1_DefaultInterruptHandler:	
  9637                           
  9638                           	psect	text79
  9639  0CAD                     __ptext79:	
  9640 ;; *************** function _setMinutesISR *****************
  9641 ;; Defined at:
  9642 ;;		line 333 in file "clock_functions.c"
  9643 ;; Parameters:    Size  Location     Type
  9644 ;;		None
  9645 ;; Auto vars:     Size  Location     Type
  9646 ;;		None
  9647 ;; Return value:  Size  Location     Type
  9648 ;;                  1    wreg      void 
  9649 ;; Registers used:
  9650 ;;		wreg, status,2, status,0, pclath, cstack
  9651 ;; Tracked objects:
  9652 ;;		On entry : 0/0
  9653 ;;		On exit  : 0/0
  9654 ;;		Unchanged: 0/0
  9655 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9656 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9657 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9658 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9659 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9660 ;;Total ram usage:        0 bytes
  9661 ;; Hardware stack levels used:    1
  9662 ;; Hardware stack levels required when called:    2
  9663 ;; This function calls:
  9664 ;;		_TMR1_StopTimer
  9665 ;;		_isolateDigits
  9666 ;;		_updateDisplay
  9667 ;; This function is called by:
  9668 ;;		_startup
  9669 ;;		_wakeup
  9670 ;;		_IOCBF1_ISR
  9671 ;; This function uses a non-reentrant model
  9672 ;;
  9673                           
  9674                           
  9675                           ;psect for function _setMinutesISR
  9676  0CAD                     _setMinutesISR:	
  9677                           
  9678                           ;clock_functions.c: 340: if (PORTBbits.RB1 == 0) {
  9679                           
  9680                           ;incstack = 0
  9681                           ; Regs used in _setMinutesISR: [wreg+status,2+status,0+pclath+cstack]
  9682  0CAD  0020               	movlb	0	; select bank0
  9683  0CAE  188D               	btfsc	13,1	;volatile
  9684  0CAF  0008               	return
  9685                           
  9686                           ;clock_functions.c: 343: PIE1bits.TMR1IE = 0;
  9687  0CB0  0021               	movlb	1	; select bank1
  9688  0CB1  1011               	bcf	17,0	;volatile
  9689                           
  9690                           ;clock_functions.c: 346: LATCbits.LATC3 = 1;
  9691  0CB2  0022               	movlb	2	; select bank2
  9692  0CB3  158E               	bsf	14,3	;volatile
  9693                           
  9694                           ;clock_functions.c: 347: LATCbits.LATC4 = 1;
  9695  0CB4  160E               	bsf	14,4	;volatile
  9696                           
  9697                           ;clock_functions.c: 350: IOCBNbits.IOCBN1 = 0;
  9698  0CB5  0027               	movlb	7	; select bank7
  9699  0CB6  1095               	bcf	21,1	;volatile
  9700                           
  9701                           ;clock_functions.c: 353: minutes++;
  9702  0CB7  3001               	movlw	1
  9703  0CB8  0020               	movlb	0	; select bank0
  9704  0CB9  07E4               	addwf	_minutes,f	;volatile
  9705  0CBA  3000               	movlw	0
  9706  0CBB  3DE5               	addwfc	_minutes+1,f	;volatile
  9707                           
  9708                           ;clock_functions.c: 358: if (minutes == 60) {
  9709  0CBC  303C               	movlw	60
  9710  0CBD  0664               	xorwf	_minutes,w	;volatile
  9711  0CBE  0465               	iorwf	_minutes+1,w	;volatile
  9712  0CBF  1D03               	btfss	3,2
  9713  0CC0  2CC3               	goto	i1l3404
  9714                           
  9715                           ;clock_functions.c: 360: minutes = 0;
  9716  0CC1  01E4               	clrf	_minutes	;volatile
  9717  0CC2  01E5               	clrf	_minutes+1	;volatile
  9718  0CC3                     i1l3404:	
  9719                           
  9720                           ;clock_functions.c: 362: }
  9721                           ;clock_functions.c: 364: isolateDigits();
  9722  0CC3  3185  2543  318C   	fcall	_isolateDigits
  9723                           
  9724                           ;clock_functions.c: 365: updateDisplay();
  9725  0CC6  318D  253A  318C   	fcall	_updateDisplay
  9726                           
  9727                           ;clock_functions.c: 368: IOCBNbits.IOCBN1 = 1;
  9728  0CC9  0027               	movlb	7	; select bank7
  9729  0CCA  1495               	bsf	21,1	;volatile
  9730                           
  9731                           ;clock_functions.c: 372: TMR1_StopTimer();
  9732  0CCB  318A  22A5         	fcall	_TMR1_StopTimer
  9733  0CCD  0008               	return
  9734  0CCE                     __end_of_setMinutesISR:	
  9735                           
  9736                           	psect	text80
  9737  0B4C                     __ptext80:	
  9738 ;; *************** function _IOCBF0_ISR *****************
  9739 ;; Defined at:
  9740 ;;		line 182 in file "mcc_generated_files/pin_manager.c"
  9741 ;; Parameters:    Size  Location     Type
  9742 ;;		None
  9743 ;; Auto vars:     Size  Location     Type
  9744 ;;		None
  9745 ;; Return value:  Size  Location     Type
  9746 ;;                  1    wreg      void 
  9747 ;; Registers used:
  9748 ;;		wreg, status,2, status,0, pclath, cstack
  9749 ;; Tracked objects:
  9750 ;;		On entry : 0/0
  9751 ;;		On exit  : 0/0
  9752 ;;		Unchanged: 0/0
  9753 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9754 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9755 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9756 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9757 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9758 ;;Total ram usage:        0 bytes
  9759 ;; Hardware stack levels used:    1
  9760 ;; Hardware stack levels required when called:    3
  9761 ;; This function calls:
  9762 ;;		Absolute function
  9763 ;;		_IOCBF0_DefaultInterruptHandler
  9764 ;;		_setSecondsISR
  9765 ;; This function is called by:
  9766 ;;		_PIN_MANAGER_IOC
  9767 ;; This function uses a non-reentrant model
  9768 ;;
  9769                           
  9770                           
  9771                           ;psect for function _IOCBF0_ISR
  9772  0B4C                     _IOCBF0_ISR:	
  9773                           
  9774                           ;pin_manager.c: 187: if(IOCBF0_InterruptHandler)
  9775                           
  9776                           ;incstack = 0
  9777                           ; Regs used in _IOCBF0_ISR: [wreg+status,2+status,0+pclath+cstack]
  9778  0B4C  0021               	movlb	1	; select bank1
  9779  0B4D  083C               	movf	_IOCBF0_InterruptHandler^(0+128),w
  9780  0B4E  043D               	iorwf	(_IOCBF0_InterruptHandler+1)^(0+128),w
  9781  0B4F  1903               	btfsc	3,2
  9782  0B50  2B56               	goto	i1l3454
  9783                           
  9784                           ;pin_manager.c: 188: {
  9785                           ;pin_manager.c: 189: IOCBF0_InterruptHandler();
  9786  0B51  083D               	movf	(_IOCBF0_InterruptHandler+1)^(0+128),w
  9787  0B52  008A               	movwf	10
  9788  0B53  083C               	movf	_IOCBF0_InterruptHandler^(0+128),w
  9789  0B54  000A               	callw
  9790  0B55  318B               	pagesel	$
  9791  0B56                     i1l3454:	
  9792                           
  9793                           ;pin_manager.c: 190: }
  9794                           ;pin_manager.c: 191: IOCBFbits.IOCBF0 = 0;
  9795  0B56  0027               	movlb	7	; select bank7
  9796  0B57  1016               	bcf	22,0	;volatile
  9797  0B58  0008               	return
  9798  0B59                     __end_of_IOCBF0_ISR:	
  9799                           
  9800                           	psect	text81
  9801  0A9F                     __ptext81:	
  9802 ;; *************** function _IOCBF0_DefaultInterruptHandler *****************
  9803 ;; Defined at:
  9804 ;;		line 204 in file "mcc_generated_files/pin_manager.c"
  9805 ;; Parameters:    Size  Location     Type
  9806 ;;		None
  9807 ;; Auto vars:     Size  Location     Type
  9808 ;;		None
  9809 ;; Return value:  Size  Location     Type
  9810 ;;                  1    wreg      void 
  9811 ;; Registers used:
  9812 ;;		None
  9813 ;; Tracked objects:
  9814 ;;		On entry : 0/0
  9815 ;;		On exit  : 0/0
  9816 ;;		Unchanged: 0/0
  9817 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9818 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9819 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9820 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9821 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9822 ;;Total ram usage:        0 bytes
  9823 ;; Hardware stack levels used:    1
  9824 ;; This function calls:
  9825 ;;		Nothing
  9826 ;; This function is called by:
  9827 ;;		_PIN_MANAGER_Initialize
  9828 ;;		_IOCBF0_ISR
  9829 ;; This function uses a non-reentrant model
  9830 ;;
  9831                           
  9832                           
  9833                           ;psect for function _IOCBF0_DefaultInterruptHandler
  9834  0A9F                     _IOCBF0_DefaultInterruptHandler:	
  9835                           
  9836                           ;incstack = 0
  9837                           ; Regs used in _IOCBF0_DefaultInterruptHandler: []
  9838  0A9F  0008               	return
  9839  0AA0                     __end_of_IOCBF0_DefaultInterruptHandler:	
  9840                           
  9841                           	psect	text82
  9842  0C8C                     __ptext82:	
  9843 ;; *************** function _setSecondsISR *****************
  9844 ;; Defined at:
  9845 ;;		line 282 in file "clock_functions.c"
  9846 ;; Parameters:    Size  Location     Type
  9847 ;;		None
  9848 ;; Auto vars:     Size  Location     Type
  9849 ;;		None
  9850 ;; Return value:  Size  Location     Type
  9851 ;;                  1    wreg      void 
  9852 ;; Registers used:
  9853 ;;		wreg, status,2, status,0, pclath, cstack
  9854 ;; Tracked objects:
  9855 ;;		On entry : 0/0
  9856 ;;		On exit  : 0/0
  9857 ;;		Unchanged: 0/0
  9858 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9859 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9860 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9861 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9862 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9863 ;;Total ram usage:        0 bytes
  9864 ;; Hardware stack levels used:    1
  9865 ;; Hardware stack levels required when called:    2
  9866 ;; This function calls:
  9867 ;;		_TMR1_StopTimer
  9868 ;;		_isolateDigits
  9869 ;;		_updateDisplay
  9870 ;; This function is called by:
  9871 ;;		_startup
  9872 ;;		_wakeup
  9873 ;;		_IOCBF0_ISR
  9874 ;; This function uses a non-reentrant model
  9875 ;;
  9876                           
  9877                           
  9878                           ;psect for function _setSecondsISR
  9879  0C8C                     _setSecondsISR:	
  9880                           
  9881                           ;clock_functions.c: 289: if (PORTBbits.RB0 == 0) {
  9882                           
  9883                           ;incstack = 0
  9884                           ; Regs used in _setSecondsISR: [wreg+status,2+status,0+pclath+cstack]
  9885  0C8C  0020               	movlb	0	; select bank0
  9886  0C8D  180D               	btfsc	13,0	;volatile
  9887  0C8E  0008               	return
  9888                           
  9889                           ;clock_functions.c: 292: PIE1bits.TMR1IE = 0;
  9890  0C8F  0021               	movlb	1	; select bank1
  9891  0C90  1011               	bcf	17,0	;volatile
  9892                           
  9893                           ;clock_functions.c: 295: LATCbits.LATC3 = 1;
  9894  0C91  0022               	movlb	2	; select bank2
  9895  0C92  158E               	bsf	14,3	;volatile
  9896                           
  9897                           ;clock_functions.c: 296: LATCbits.LATC4 = 1;
  9898  0C93  160E               	bsf	14,4	;volatile
  9899                           
  9900                           ;clock_functions.c: 299: IOCBNbits.IOCBN0 = 0;
  9901  0C94  0027               	movlb	7	; select bank7
  9902  0C95  1015               	bcf	21,0	;volatile
  9903                           
  9904                           ;clock_functions.c: 302: seconds++;
  9905  0C96  3001               	movlw	1
  9906  0C97  0020               	movlb	0	; select bank0
  9907  0C98  07E6               	addwf	_seconds,f	;volatile
  9908  0C99  3000               	movlw	0
  9909  0C9A  3DE7               	addwfc	_seconds+1,f	;volatile
  9910                           
  9911                           ;clock_functions.c: 307: if (seconds == 60) {
  9912  0C9B  303C               	movlw	60
  9913  0C9C  0666               	xorwf	_seconds,w	;volatile
  9914  0C9D  0467               	iorwf	_seconds+1,w	;volatile
  9915  0C9E  1D03               	btfss	3,2
  9916  0C9F  2CA2               	goto	i1l3386
  9917                           
  9918                           ;clock_functions.c: 309: seconds = 0;
  9919  0CA0  01E6               	clrf	_seconds	;volatile
  9920  0CA1  01E7               	clrf	_seconds+1	;volatile
  9921  0CA2                     i1l3386:	
  9922                           
  9923                           ;clock_functions.c: 311: }
  9924                           ;clock_functions.c: 313: isolateDigits();
  9925  0CA2  3185  2543  318C   	fcall	_isolateDigits
  9926                           
  9927                           ;clock_functions.c: 314: updateDisplay();
  9928  0CA5  318D  253A  318C   	fcall	_updateDisplay
  9929                           
  9930                           ;clock_functions.c: 317: IOCBNbits.IOCBN0 = 1;
  9931  0CA8  0027               	movlb	7	; select bank7
  9932  0CA9  1415               	bsf	21,0	;volatile
  9933                           
  9934                           ;clock_functions.c: 321: TMR1_StopTimer();
  9935  0CAA  318A  22A5         	fcall	_TMR1_StopTimer
  9936  0CAC  0008               	return
  9937  0CAD                     __end_of_setSecondsISR:	
  9938                           
  9939                           	psect	text83
  9940  0D3A                     __ptext83:	
  9941 ;; *************** function _updateDisplay *****************
  9942 ;; Defined at:
  9943 ;;		line 704 in file "clock_functions.c"
  9944 ;; Parameters:    Size  Location     Type
  9945 ;;		None
  9946 ;; Auto vars:     Size  Location     Type
  9947 ;;		None
  9948 ;; Return value:  Size  Location     Type
  9949 ;;                  1    wreg      void 
  9950 ;; Registers used:
  9951 ;;		wreg
  9952 ;; Tracked objects:
  9953 ;;		On entry : 0/0
  9954 ;;		On exit  : 0/0
  9955 ;;		Unchanged: 0/0
  9956 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9957 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9958 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9959 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9960 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9961 ;;Total ram usage:        0 bytes
  9962 ;; Hardware stack levels used:    1
  9963 ;; This function calls:
  9964 ;;		Nothing
  9965 ;; This function is called by:
  9966 ;;		_tickISR
  9967 ;;		_setSecondsISR
  9968 ;;		_setMinutesISR
  9969 ;;		_setHoursISR
  9970 ;;		_wakeup
  9971 ;; This function uses a non-reentrant model
  9972 ;;
  9973                           
  9974                           
  9975                           ;psect for function _updateDisplay
  9976  0D3A                     _updateDisplay:	
  9977                           
  9978                           ;clock_functions.c: 710: mux_numeral[0] = seconds_LSD;
  9979                           
  9980                           ;incstack = 0
  9981                           ; Regs used in _updateDisplay: [wreg]
  9982  0D3A  0020               	movlb	0	; select bank0
  9983  0D3B  085F               	movf	_seconds_LSD+1,w	;volatile
  9984  0D3C  0021               	movlb	1	; select bank1
  9985  0D3D  00A1               	movwf	(_mux_numeral+1)^(0+128)	;volatile
  9986  0D3E  0020               	movlb	0	; select bank0
  9987  0D3F  085E               	movf	_seconds_LSD,w	;volatile
  9988  0D40  0021               	movlb	1	; select bank1
  9989  0D41  00A0               	movwf	_mux_numeral^(0+128)	;volatile
  9990                           
  9991                           ;clock_functions.c: 711: mux_numeral[1] = seconds_MSD;
  9992  0D42  0020               	movlb	0	; select bank0
  9993  0D43  085D               	movf	_seconds_MSD+1,w	;volatile
  9994  0D44  0021               	movlb	1	; select bank1
  9995  0D45  00A3               	movwf	((_mux_numeral+1)^(0+128)+2)	;volatile
  9996  0D46  0020               	movlb	0	; select bank0
  9997  0D47  085C               	movf	_seconds_MSD,w	;volatile
  9998  0D48  0021               	movlb	1	; select bank1
  9999  0D49  00A2               	movwf	(_mux_numeral^(0+128)+2)	;volatile
 10000                           
 10001                           ;clock_functions.c: 712: mux_numeral[2] = minutes_LSD;
 10002  0D4A  0020               	movlb	0	; select bank0
 10003  0D4B  085B               	movf	_minutes_LSD+1,w	;volatile
 10004  0D4C  0021               	movlb	1	; select bank1
 10005  0D4D  00A5               	movwf	((_mux_numeral+1)^(0+128)+4)	;volatile
 10006  0D4E  0020               	movlb	0	; select bank0
 10007  0D4F  085A               	movf	_minutes_LSD,w	;volatile
 10008  0D50  0021               	movlb	1	; select bank1
 10009  0D51  00A4               	movwf	(_mux_numeral^(0+128)+4)	;volatile
 10010                           
 10011                           ;clock_functions.c: 713: mux_numeral[3] = minutes_MSD;
 10012  0D52  0833               	movf	(_minutes_MSD+1)^(0+128),w	;volatile
 10013  0D53  00A7               	movwf	((_mux_numeral+1)^(0+128)+6)	;volatile
 10014  0D54  0832               	movf	_minutes_MSD^(0+128),w	;volatile
 10015  0D55  00A6               	movwf	(_mux_numeral^(0+128)+6)	;volatile
 10016                           
 10017                           ;clock_functions.c: 714: mux_numeral[4] = hours_LSD;
 10018  0D56  0831               	movf	(_hours_LSD+1)^(0+128),w	;volatile
 10019  0D57  00A9               	movwf	((_mux_numeral+1)^(0+128)+8)	;volatile
 10020  0D58  0830               	movf	_hours_LSD^(0+128),w	;volatile
 10021  0D59  00A8               	movwf	(_mux_numeral^(0+128)+8)	;volatile
 10022                           
 10023                           ;clock_functions.c: 715: mux_numeral[5] = hours_MSD;
 10024  0D5A  082F               	movf	(_hours_MSD+1)^(0+128),w	;volatile
 10025  0D5B  00AB               	movwf	((_mux_numeral+1)^(0+128)+10)	;volatile
 10026  0D5C  082E               	movf	_hours_MSD^(0+128),w	;volatile
 10027  0D5D  00AA               	movwf	(_mux_numeral^(0+128)+10)	;volatile
 10028  0D5E  0008               	return
 10029  0D5F                     __end_of_updateDisplay:	
 10030                           
 10031                           	psect	text84
 10032  0543                     __ptext84:	
 10033 ;; *************** function _isolateDigits *****************
 10034 ;; Defined at:
 10035 ;;		line 679 in file "clock_functions.c"
 10036 ;; Parameters:    Size  Location     Type
 10037 ;;		None
 10038 ;; Auto vars:     Size  Location     Type
 10039 ;;		None
 10040 ;; Return value:  Size  Location     Type
 10041 ;;                  1    wreg      void 
 10042 ;; Registers used:
 10043 ;;		wreg, status,2, status,0, pclath, cstack
 10044 ;; Tracked objects:
 10045 ;;		On entry : 0/0
 10046 ;;		On exit  : 0/0
 10047 ;;		Unchanged: 0/0
 10048 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10049 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10050 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10051 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10052 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10053 ;;Total ram usage:        0 bytes
 10054 ;; Hardware stack levels used:    1
 10055 ;; Hardware stack levels required when called:    1
 10056 ;; This function calls:
 10057 ;;		___lwdiv
 10058 ;;		___lwmod
 10059 ;; This function is called by:
 10060 ;;		_tickISR
 10061 ;;		_setSecondsISR
 10062 ;;		_setMinutesISR
 10063 ;;		_setHoursISR
 10064 ;;		_wakeup
 10065 ;; This function uses a non-reentrant model
 10066 ;;
 10067                           
 10068                           
 10069                           ;psect for function _isolateDigits
 10070  0543                     _isolateDigits:	
 10071                           
 10072                           ;clock_functions.c: 685: seconds_LSD = seconds%10;
 10073                           
 10074                           ;incstack = 0
 10075                           ; Regs used in _isolateDigits: [wreg+status,2+status,0+pclath+cstack]
 10076  0543  300A               	movlw	10
 10077  0544  00F8               	movwf	___lwmod@divisor
 10078  0545  3000               	movlw	0
 10079  0546  00F9               	movwf	___lwmod@divisor+1
 10080  0547  0020               	movlb	0	; select bank0
 10081  0548  0867               	movf	_seconds+1,w	;volatile
 10082  0549  00FB               	movwf	___lwmod@dividend+1
 10083  054A  0866               	movf	_seconds,w	;volatile
 10084  054B  00FA               	movwf	___lwmod@dividend
 10085  054C  318D  25AB  3185   	fcall	___lwmod
 10086  054F  0879               	movf	?___lwmod+1,w
 10087  0550  0020               	movlb	0	; select bank0
 10088  0551  00DF               	movwf	_seconds_LSD+1	;volatile
 10089  0552  0878               	movf	?___lwmod,w
 10090  0553  00DE               	movwf	_seconds_LSD	;volatile
 10091                           
 10092                           ;clock_functions.c: 686: seconds_MSD = (seconds/10)%10;
 10093  0554  300A               	movlw	10
 10094  0555  00F8               	movwf	___lwmod@divisor
 10095  0556  3000               	movlw	0
 10096  0557  00F9               	movwf	___lwmod@divisor+1
 10097  0558  300A               	movlw	10
 10098  0559  00F0               	movwf	___lwdiv@divisor
 10099  055A  3000               	movlw	0
 10100  055B  00F1               	movwf	___lwdiv@divisor+1
 10101  055C  0867               	movf	_seconds+1,w	;volatile
 10102  055D  00F3               	movwf	___lwdiv@dividend+1
 10103  055E  0866               	movf	_seconds,w	;volatile
 10104  055F  00F2               	movwf	___lwdiv@dividend
 10105  0560  318D  25D7  3185   	fcall	___lwdiv
 10106  0563  0871               	movf	?___lwdiv+1,w
 10107  0564  00FB               	movwf	___lwmod@dividend+1
 10108  0565  0870               	movf	?___lwdiv,w
 10109  0566  00FA               	movwf	___lwmod@dividend
 10110  0567  318D  25AB  3185   	fcall	___lwmod
 10111  056A  0879               	movf	?___lwmod+1,w
 10112  056B  0020               	movlb	0	; select bank0
 10113  056C  00DD               	movwf	_seconds_MSD+1	;volatile
 10114  056D  0878               	movf	?___lwmod,w
 10115  056E  00DC               	movwf	_seconds_MSD	;volatile
 10116                           
 10117                           ;clock_functions.c: 688: minutes_LSD = minutes%10;
 10118  056F  300A               	movlw	10
 10119  0570  00F8               	movwf	___lwmod@divisor
 10120  0571  3000               	movlw	0
 10121  0572  00F9               	movwf	___lwmod@divisor+1
 10122  0573  0865               	movf	_minutes+1,w	;volatile
 10123  0574  00FB               	movwf	___lwmod@dividend+1
 10124  0575  0864               	movf	_minutes,w	;volatile
 10125  0576  00FA               	movwf	___lwmod@dividend
 10126  0577  318D  25AB  3185   	fcall	___lwmod
 10127  057A  0879               	movf	?___lwmod+1,w
 10128  057B  0020               	movlb	0	; select bank0
 10129  057C  00DB               	movwf	_minutes_LSD+1	;volatile
 10130  057D  0878               	movf	?___lwmod,w
 10131  057E  00DA               	movwf	_minutes_LSD	;volatile
 10132                           
 10133                           ;clock_functions.c: 689: minutes_MSD = (minutes/10)%10;
 10134  057F  300A               	movlw	10
 10135  0580  00F8               	movwf	___lwmod@divisor
 10136  0581  3000               	movlw	0
 10137  0582  00F9               	movwf	___lwmod@divisor+1
 10138  0583  300A               	movlw	10
 10139  0584  00F0               	movwf	___lwdiv@divisor
 10140  0585  3000               	movlw	0
 10141  0586  00F1               	movwf	___lwdiv@divisor+1
 10142  0587  0865               	movf	_minutes+1,w	;volatile
 10143  0588  00F3               	movwf	___lwdiv@dividend+1
 10144  0589  0864               	movf	_minutes,w	;volatile
 10145  058A  00F2               	movwf	___lwdiv@dividend
 10146  058B  318D  25D7  3185   	fcall	___lwdiv
 10147  058E  0871               	movf	?___lwdiv+1,w
 10148  058F  00FB               	movwf	___lwmod@dividend+1
 10149  0590  0870               	movf	?___lwdiv,w
 10150  0591  00FA               	movwf	___lwmod@dividend
 10151  0592  318D  25AB  3185   	fcall	___lwmod
 10152  0595  0879               	movf	?___lwmod+1,w
 10153  0596  0021               	movlb	1	; select bank1
 10154  0597  00B3               	movwf	(_minutes_MSD+1)^(0+128)	;volatile
 10155  0598  0878               	movf	?___lwmod,w
 10156  0599  00B2               	movwf	_minutes_MSD^(0+128)	;volatile
 10157                           
 10158                           ;clock_functions.c: 691: hours_LSD = display_hours%10;
 10159  059A  300A               	movlw	10
 10160  059B  00F8               	movwf	___lwmod@divisor
 10161  059C  3000               	movlw	0
 10162  059D  00F9               	movwf	___lwmod@divisor+1
 10163  059E  0020               	movlb	0	; select bank0
 10164  059F  0861               	movf	_display_hours+1,w	;volatile
 10165  05A0  00FB               	movwf	___lwmod@dividend+1
 10166  05A1  0860               	movf	_display_hours,w	;volatile
 10167  05A2  00FA               	movwf	___lwmod@dividend
 10168  05A3  318D  25AB  3185   	fcall	___lwmod
 10169  05A6  0879               	movf	?___lwmod+1,w
 10170  05A7  0021               	movlb	1	; select bank1
 10171  05A8  00B1               	movwf	(_hours_LSD+1)^(0+128)	;volatile
 10172  05A9  0878               	movf	?___lwmod,w
 10173  05AA  00B0               	movwf	_hours_LSD^(0+128)	;volatile
 10174                           
 10175                           ;clock_functions.c: 692: hours_MSD = (display_hours/10)%10;
 10176  05AB  300A               	movlw	10
 10177  05AC  00F8               	movwf	___lwmod@divisor
 10178  05AD  3000               	movlw	0
 10179  05AE  00F9               	movwf	___lwmod@divisor+1
 10180  05AF  300A               	movlw	10
 10181  05B0  00F0               	movwf	___lwdiv@divisor
 10182  05B1  3000               	movlw	0
 10183  05B2  00F1               	movwf	___lwdiv@divisor+1
 10184  05B3  0020               	movlb	0	; select bank0
 10185  05B4  0861               	movf	_display_hours+1,w	;volatile
 10186  05B5  00F3               	movwf	___lwdiv@dividend+1
 10187  05B6  0860               	movf	_display_hours,w	;volatile
 10188  05B7  00F2               	movwf	___lwdiv@dividend
 10189  05B8  318D  25D7  3185   	fcall	___lwdiv
 10190  05BB  0871               	movf	?___lwdiv+1,w
 10191  05BC  00FB               	movwf	___lwmod@dividend+1
 10192  05BD  0870               	movf	?___lwdiv,w
 10193  05BE  00FA               	movwf	___lwmod@dividend
 10194  05BF  318D  25AB         	fcall	___lwmod
 10195  05C1  0879               	movf	?___lwmod+1,w
 10196  05C2  0021               	movlb	1	; select bank1
 10197  05C3  00AF               	movwf	(_hours_MSD+1)^(0+128)	;volatile
 10198  05C4  0878               	movf	?___lwmod,w
 10199  05C5  00AE               	movwf	_hours_MSD^(0+128)	;volatile
 10200  05C6  0008               	return
 10201  05C7                     __end_of_isolateDigits:	
 10202                           
 10203                           	psect	text85
 10204  0DAB                     __ptext85:	
 10205 ;; *************** function ___lwmod *****************
 10206 ;; Defined at:
 10207 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lwmod.c"
 10208 ;; Parameters:    Size  Location     Type
 10209 ;;  divisor         2    8[COMMON] unsigned int 
 10210 ;;  dividend        2   10[COMMON] unsigned int 
 10211 ;; Auto vars:     Size  Location     Type
 10212 ;;  counter         1   13[COMMON] unsigned char 
 10213 ;; Return value:  Size  Location     Type
 10214 ;;                  2    8[COMMON] unsigned int 
 10215 ;; Registers used:
 10216 ;;		wreg, status,2, status,0
 10217 ;; Tracked objects:
 10218 ;;		On entry : 0/0
 10219 ;;		On exit  : 0/0
 10220 ;;		Unchanged: 0/0
 10221 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10222 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10223 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10224 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10225 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10226 ;;Total ram usage:        6 bytes
 10227 ;; Hardware stack levels used:    1
 10228 ;; This function calls:
 10229 ;;		Nothing
 10230 ;; This function is called by:
 10231 ;;		_isolateDigits
 10232 ;; This function uses a non-reentrant model
 10233 ;;
 10234                           
 10235                           
 10236                           ;psect for function ___lwmod
 10237  0DAB                     ___lwmod:	
 10238                           
 10239                           ;incstack = 0
 10240                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
 10241  0DAB  0878               	movf	___lwmod@divisor,w
 10242  0DAC  0479               	iorwf	___lwmod@divisor+1,w
 10243  0DAD  1903               	btfsc	3,2
 10244  0DAE  2DD2               	goto	i1l2970
 10245  0DAF  01FD               	clrf	___lwmod@counter
 10246  0DB0  0AFD               	incf	___lwmod@counter,f
 10247  0DB1                     i1l2960:	
 10248  0DB1  1BF9               	btfsc	___lwmod@divisor+1,7
 10249  0DB2  2DBD               	goto	i1l2962
 10250  0DB3  3001               	movlw	1
 10251  0DB4                     u296_25:	
 10252  0DB4  35F8               	lslf	___lwmod@divisor,f
 10253  0DB5  0DF9               	rlf	___lwmod@divisor+1,f
 10254  0DB6  0B89               	decfsz	9,f
 10255  0DB7  2DB4               	goto	u296_25
 10256  0DB8  3001               	movlw	1
 10257  0DB9  00FC               	movwf	??___lwmod
 10258  0DBA  087C               	movf	??___lwmod,w
 10259  0DBB  07FD               	addwf	___lwmod@counter,f
 10260  0DBC  2DB1               	goto	i1l2960
 10261  0DBD                     i1l2962:	
 10262  0DBD  0879               	movf	___lwmod@divisor+1,w
 10263  0DBE  027B               	subwf	___lwmod@dividend+1,w
 10264  0DBF  1D03               	skipz
 10265  0DC0  2DC3               	goto	u298_25
 10266  0DC1  0878               	movf	___lwmod@divisor,w
 10267  0DC2  027A               	subwf	___lwmod@dividend,w
 10268  0DC3                     u298_25:	
 10269  0DC3  1C03               	skipc
 10270  0DC4  2DC9               	goto	i1l2966
 10271  0DC5  0878               	movf	___lwmod@divisor,w
 10272  0DC6  02FA               	subwf	___lwmod@dividend,f
 10273  0DC7  0879               	movf	___lwmod@divisor+1,w
 10274  0DC8  3BFB               	subwfb	___lwmod@dividend+1,f
 10275  0DC9                     i1l2966:	
 10276  0DC9  3001               	movlw	1
 10277  0DCA                     u299_25:	
 10278  0DCA  36F9               	lsrf	___lwmod@divisor+1,f
 10279  0DCB  0CF8               	rrf	___lwmod@divisor,f
 10280  0DCC  0B89               	decfsz	9,f
 10281  0DCD  2DCA               	goto	u299_25
 10282  0DCE  3001               	movlw	1
 10283  0DCF  02FD               	subwf	___lwmod@counter,f
 10284  0DD0  1D03               	btfss	3,2
 10285  0DD1  2DBD               	goto	i1l2962
 10286  0DD2                     i1l2970:	
 10287  0DD2  087B               	movf	___lwmod@dividend+1,w
 10288  0DD3  00F9               	movwf	?___lwmod+1
 10289  0DD4  087A               	movf	___lwmod@dividend,w
 10290  0DD5  00F8               	movwf	?___lwmod
 10291  0DD6  0008               	return
 10292  0DD7                     __end_of___lwmod:	
 10293                           
 10294                           	psect	text86
 10295  0DD7                     __ptext86:	
 10296 ;; *************** function ___lwdiv *****************
 10297 ;; Defined at:
 10298 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lwdiv.c"
 10299 ;; Parameters:    Size  Location     Type
 10300 ;;  divisor         2    0[COMMON] unsigned int 
 10301 ;;  dividend        2    2[COMMON] unsigned int 
 10302 ;; Auto vars:     Size  Location     Type
 10303 ;;  quotient        2    5[COMMON] unsigned int 
 10304 ;;  counter         1    7[COMMON] unsigned char 
 10305 ;; Return value:  Size  Location     Type
 10306 ;;                  2    0[COMMON] unsigned int 
 10307 ;; Registers used:
 10308 ;;		wreg, status,2, status,0
 10309 ;; Tracked objects:
 10310 ;;		On entry : 0/0
 10311 ;;		On exit  : 0/0
 10312 ;;		Unchanged: 0/0
 10313 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10314 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10315 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10316 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10317 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10318 ;;Total ram usage:        8 bytes
 10319 ;; Hardware stack levels used:    1
 10320 ;; This function calls:
 10321 ;;		Nothing
 10322 ;; This function is called by:
 10323 ;;		_isolateDigits
 10324 ;; This function uses a non-reentrant model
 10325 ;;
 10326                           
 10327                           
 10328                           ;psect for function ___lwdiv
 10329  0DD7                     ___lwdiv:	
 10330                           
 10331                           ;incstack = 0
 10332                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
 10333  0DD7  01F5               	clrf	___lwdiv@quotient
 10334  0DD8  01F6               	clrf	___lwdiv@quotient+1
 10335  0DD9  0870               	movf	___lwdiv@divisor,w
 10336  0DDA  0471               	iorwf	___lwdiv@divisor+1,w
 10337  0DDB  1903               	btfsc	3,2
 10338  0DDC  2E06               	goto	i1l2948
 10339  0DDD  01F7               	clrf	___lwdiv@counter
 10340  0DDE  0AF7               	incf	___lwdiv@counter,f
 10341  0DDF                     i1l2936:	
 10342  0DDF  1BF1               	btfsc	___lwdiv@divisor+1,7
 10343  0DE0  2DEB               	goto	i1l2938
 10344  0DE1  3001               	movlw	1
 10345  0DE2                     u289_25:	
 10346  0DE2  35F0               	lslf	___lwdiv@divisor,f
 10347  0DE3  0DF1               	rlf	___lwdiv@divisor+1,f
 10348  0DE4  0B89               	decfsz	9,f
 10349  0DE5  2DE2               	goto	u289_25
 10350  0DE6  3001               	movlw	1
 10351  0DE7  00F4               	movwf	??___lwdiv
 10352  0DE8  0874               	movf	??___lwdiv,w
 10353  0DE9  07F7               	addwf	___lwdiv@counter,f
 10354  0DEA  2DDF               	goto	i1l2936
 10355  0DEB                     i1l2938:	
 10356  0DEB  3001               	movlw	1
 10357  0DEC                     u291_25:	
 10358  0DEC  35F5               	lslf	___lwdiv@quotient,f
 10359  0DED  0DF6               	rlf	___lwdiv@quotient+1,f
 10360  0DEE  0B89               	decfsz	9,f
 10361  0DEF  2DEC               	goto	u291_25
 10362  0DF0  0871               	movf	___lwdiv@divisor+1,w
 10363  0DF1  0273               	subwf	___lwdiv@dividend+1,w
 10364  0DF2  1D03               	skipz
 10365  0DF3  2DF6               	goto	u292_25
 10366  0DF4  0870               	movf	___lwdiv@divisor,w
 10367  0DF5  0272               	subwf	___lwdiv@dividend,w
 10368  0DF6                     u292_25:	
 10369  0DF6  1C03               	skipc
 10370  0DF7  2DFD               	goto	i1l2944
 10371  0DF8  0870               	movf	___lwdiv@divisor,w
 10372  0DF9  02F2               	subwf	___lwdiv@dividend,f
 10373  0DFA  0871               	movf	___lwdiv@divisor+1,w
 10374  0DFB  3BF3               	subwfb	___lwdiv@dividend+1,f
 10375  0DFC  1475               	bsf	___lwdiv@quotient,0
 10376  0DFD                     i1l2944:	
 10377  0DFD  3001               	movlw	1
 10378  0DFE                     u293_25:	
 10379  0DFE  36F1               	lsrf	___lwdiv@divisor+1,f
 10380  0DFF  0CF0               	rrf	___lwdiv@divisor,f
 10381  0E00  0B89               	decfsz	9,f
 10382  0E01  2DFE               	goto	u293_25
 10383  0E02  3001               	movlw	1
 10384  0E03  02F7               	subwf	___lwdiv@counter,f
 10385  0E04  1D03               	btfss	3,2
 10386  0E05  2DEB               	goto	i1l2938
 10387  0E06                     i1l2948:	
 10388  0E06  0876               	movf	___lwdiv@quotient+1,w
 10389  0E07  00F1               	movwf	?___lwdiv+1
 10390  0E08  0875               	movf	___lwdiv@quotient,w
 10391  0E09  00F0               	movwf	?___lwdiv
 10392  0E0A  0008               	return
 10393  0E0B                     __end_of___lwdiv:	
 10394                           
 10395                           	psect	text87
 10396  0AA5                     __ptext87:	
 10397 ;; *************** function _TMR1_StopTimer *****************
 10398 ;; Defined at:
 10399 ;;		line 101 in file "mcc_generated_files/tmr1.c"
 10400 ;; Parameters:    Size  Location     Type
 10401 ;;		None
 10402 ;; Auto vars:     Size  Location     Type
 10403 ;;		None
 10404 ;; Return value:  Size  Location     Type
 10405 ;;                  1    wreg      void 
 10406 ;; Registers used:
 10407 ;;		None
 10408 ;; Tracked objects:
 10409 ;;		On entry : 0/0
 10410 ;;		On exit  : 0/0
 10411 ;;		Unchanged: 0/0
 10412 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10413 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10414 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10415 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10416 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10417 ;;Total ram usage:        0 bytes
 10418 ;; Hardware stack levels used:    1
 10419 ;; This function calls:
 10420 ;;		Nothing
 10421 ;; This function is called by:
 10422 ;;		_setSecondsISR
 10423 ;;		_setMinutesISR
 10424 ;;		_setHoursISR
 10425 ;; This function uses a non-reentrant model
 10426 ;;
 10427                           
 10428                           
 10429                           ;psect for function _TMR1_StopTimer
 10430  0AA5                     _TMR1_StopTimer:	
 10431                           
 10432                           ;tmr1.c: 104: T1CONbits.TMR1ON = 0;
 10433                           
 10434                           ;incstack = 0
 10435                           ; Regs used in _TMR1_StopTimer: []
 10436  0AA5  0020               	movlb	0	; select bank0
 10437  0AA6  1018               	bcf	24,0	;volatile
 10438  0AA7  0008               	return
 10439  0AA8                     __end_of_TMR1_StopTimer:	
 10440  007E                     btemp	set	126	;btemp
 10441  007E                     int$flags	set	126
 10442  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    13
    Data        0
    BSS         62
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     55      79
    BANK1            80     14      53
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    frexp@eptr	PTR int  size(1) Largest target is 2
		 -> trunc@expon(BANK0[2]), 

    IOCBF5_SetInterruptHandler@InterruptHandler	PTR void  size(2) Largest target is 1
		 -> IOCBF5_DefaultInterruptHandler(), 

    IOCBF5_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> IOCBF5_DefaultInterruptHandler(), Absolute function(), 

    IOCBF4_SetInterruptHandler@InterruptHandler	PTR void  size(2) Largest target is 1
		 -> powerFailISR(), IOCBF4_DefaultInterruptHandler(), 

    IOCBF4_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> powerFailISR(), IOCBF4_DefaultInterruptHandler(), Absolute function(), 

    IOCBF3_SetInterruptHandler@InterruptHandler	PTR void  size(2) Largest target is 1
		 -> displayToggleISR(), IOCBF3_DefaultInterruptHandler(), 

    IOCBF3_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> displayToggleISR(), IOCBF3_DefaultInterruptHandler(), Absolute function(), 

    IOCBF2_SetInterruptHandler@InterruptHandler	PTR void  size(2) Largest target is 1
		 -> setHoursISR(), IOCBF2_DefaultInterruptHandler(), 

    IOCBF2_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> setHoursISR(), IOCBF2_DefaultInterruptHandler(), Absolute function(), 

    IOCBF1_SetInterruptHandler@InterruptHandler	PTR void  size(2) Largest target is 1
		 -> setMinutesISR(), IOCBF1_DefaultInterruptHandler(), 

    IOCBF1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> setMinutesISR(), IOCBF1_DefaultInterruptHandler(), Absolute function(), 

    IOCBF0_SetInterruptHandler@InterruptHandler	PTR void  size(2) Largest target is 1
		 -> setSecondsISR(), IOCBF0_DefaultInterruptHandler(), 

    IOCBF0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> setSecondsISR(), IOCBF0_DefaultInterruptHandler(), Absolute function(), 

    TMR2_SetInterruptHandler@InterruptHandler	PTR void  size(2) Largest target is 1
		 -> blankISR(), TMR2_DefaultInterruptHandler(), 

    TMR2_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> blankISR(), TMR2_DefaultInterruptHandler(), Absolute function(), 

    TMR1_SetInterruptHandler@InterruptHandler	PTR void  size(2) Largest target is 1
		 -> sleepyTickISR(), tickISR(), TMR1_DefaultInterruptHandler(), 

    TMR1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> sleepyTickISR(), tickISR(), TMR1_DefaultInterruptHandler(), Absolute function(), 

    TMR0_SetInterruptHandler@InterruptHandler	PTR void  size(2) Largest target is 1
		 -> muxISR(), TMR0_DefaultInterruptHandler(), 

    TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> muxISR(), Absolute function(), TMR0_DefaultInterruptHandler(), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _muxISR->_updateParallelPort
    _restoreTime->___fttol
    _restoreTime->___ltdiv
    _trunc->___fttol
    ___altoft->___fttol
    ___lttoft->___ftpack
    ___ltdiv->___ltmod
    ___ftmul->___lttoft
    ___aldiv->___almod
    _shutdown->i1_TMR1_SetInterruptHandler
    _isolateDigits->___lwmod
    ___lwmod->___lwdiv

Critical Paths under _main in BANK0

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    _wakeup->_restoreTime
    _restoreTime->_round
    _round->___ftadd
    _trunc->___altoft
    ___ftneg->_trunc
    ___ftadd->___ftneg

Critical Paths under _main in BANK1

    _startup->_checkIDs
    _SYSTEM_Initialize->_TMR0_Initialize
    _TMR2_Initialize->_TMR2_SetInterruptHandler
    _TMR1_Initialize->_TMR1_SetInterruptHandler
    _TMR0_Initialize->_TMR0_SetInterruptHandler
    _PIN_MANAGER_Initialize->_IOCBF0_SetInterruptHandler
    _PIN_MANAGER_Initialize->_IOCBF1_SetInterruptHandler
    _PIN_MANAGER_Initialize->_IOCBF2_SetInterruptHandler
    _PIN_MANAGER_Initialize->_IOCBF3_SetInterruptHandler
    _PIN_MANAGER_Initialize->_IOCBF4_SetInterruptHandler
    _PIN_MANAGER_Initialize->_IOCBF5_SetInterruptHandler

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    3308
                                             12 BANK1      2     2      0
                    _TMR1_StartTimer
                            _startup
 ---------------------------------------------------------------------------------
 (1) _startup                                              0     0      0    3308
         _IOCBF0_SetInterruptHandler
         _IOCBF1_SetInterruptHandler
         _IOCBF2_SetInterruptHandler
         _IOCBF3_SetInterruptHandler
         _IOCBF4_SetInterruptHandler
                  _SYSTEM_Initialize
           _TMR0_SetInterruptHandler
           _TMR1_SetInterruptHandler
           _TMR2_SetInterruptHandler
                     _TMR2_StopTimer
                           _checkIDs
 ---------------------------------------------------------------------------------
 (2) _checkIDs                                            12    12      0     138
                                              0 BANK1     12    12      0
 ---------------------------------------------------------------------------------
 (2) _TMR2_StopTimer                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SYSTEM_Initialize                                    0     0      0    1628
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR0_Initialize
                    _TMR1_Initialize
                    _TMR2_Initialize
                     _WDT_Initialize
 ---------------------------------------------------------------------------------
 (3) _WDT_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _TMR2_Initialize                                      0     0      0     188
           _TMR2_SetInterruptHandler
                    _TMR2_StartTimer
 ---------------------------------------------------------------------------------
 (4) _TMR2_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR2_SetInterruptHandler                             2     0      2     188
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (3) _TMR1_Initialize                                      0     0      0     226
           _TMR1_SetInterruptHandler
                    _TMR1_StartTimer
 ---------------------------------------------------------------------------------
 (4) _TMR1_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR1_SetInterruptHandler                             2     0      2     226
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (3) _TMR0_Initialize                                      1     1      0     188
                                              2 BANK1      1     1      0
           _TMR0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _TMR0_SetInterruptHandler                             2     0      2     188
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (3) _PIN_MANAGER_Initialize                               0     0      0    1026
         _IOCBF0_SetInterruptHandler
         _IOCBF1_SetInterruptHandler
         _IOCBF2_SetInterruptHandler
         _IOCBF3_SetInterruptHandler
         _IOCBF4_SetInterruptHandler
         _IOCBF5_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (4) _IOCBF5_SetInterruptHandler                           2     0      2      86
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (4) _IOCBF4_SetInterruptHandler                           2     0      2     188
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (4) _IOCBF3_SetInterruptHandler                           2     0      2     188
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (4) _IOCBF2_SetInterruptHandler                           2     0      2     188
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (4) _IOCBF1_SetInterruptHandler                           2     0      2     188
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (4) _IOCBF0_SetInterruptHandler                           2     0      2     188
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (3) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _INTERRUPT_InterruptManager                           1     1      0   21413
                                             54 BANK0      1     1      0
                    _PIN_MANAGER_IOC
                           _TMR0_ISR
                           _TMR1_ISR
                           _TMR2_ISR
 ---------------------------------------------------------------------------------
 (6) _TMR2_ISR                                             0     0      0       0
                   Absolute function *
       _TMR2_DefaultInterruptHandler *
                           _blankISR *
 ---------------------------------------------------------------------------------
 (7) _blankISR                                             0     0      0       0
                      _groundCathode
                   i1_TMR2_StopTimer
 ---------------------------------------------------------------------------------
 (8) _groundCathode                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _TMR2_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _TMR1_ISR                                             0     0      0    1473
                   Absolute function *
       _TMR1_DefaultInterruptHandler *
                      _sleepyTickISR *
                            _tickISR *
 ---------------------------------------------------------------------------------
 (7) _tickISR                                              0     0      0    1473
                      _isolateDigits
                          _timeParse
                    _twentyFourParse
                      _updateDisplay
 ---------------------------------------------------------------------------------
 (8) _timeParse                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _sleepyTickISR                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _TMR1_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _TMR0_ISR                                             0     0      0       0
                   Absolute function *
       _TMR0_DefaultInterruptHandler *
                             _muxISR *
 ---------------------------------------------------------------------------------
 (7) _muxISR                                               0     0      0       0
                 _updateParallelPort
                  i1_TMR2_StartTimer
 ---------------------------------------------------------------------------------
 (8) _updateParallelPort                                   1     1      0       0
                                              0 COMMON     1     1      0
               _muxDigitCompensation
 ---------------------------------------------------------------------------------
 (9) _muxDigitCompensation                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _TMR0_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _PIN_MANAGER_IOC                                      0     0      0   19940
                         _IOCBF0_ISR
                         _IOCBF1_ISR
                         _IOCBF2_ISR
                         _IOCBF3_ISR
                         _IOCBF4_ISR
                         _IOCBF5_ISR
 ---------------------------------------------------------------------------------
 (7) _IOCBF5_ISR                                           0     0      0       0
                   Absolute function *
     _IOCBF5_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (8) _IOCBF5_DefaultInterruptHandler                       0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _IOCBF4_ISR                                           0     0      0   15521
                   Absolute function *
     _IOCBF4_DefaultInterruptHandler *
                       _powerFailISR *
 ---------------------------------------------------------------------------------
 (8) _powerFailISR                                         0     0      0   15521
                           _shutdown
                             _wakeup
 ---------------------------------------------------------------------------------
 (9) _wakeup                                               0     0      0   15447
                      _isolateDigits
                        _restoreTime
                    _twentyFourParse
                      _updateDisplay
       i1_IOCBF0_SetInterruptHandler
       i1_IOCBF1_SetInterruptHandler
       i1_IOCBF2_SetInterruptHandler
       i1_IOCBF3_SetInterruptHandler
       i1_IOCBF4_SetInterruptHandler
         i1_TMR0_SetInterruptHandler
         i1_TMR1_SetInterruptHandler
         i1_TMR2_SetInterruptHandler
                  i1_TMR2_StartTimer
 ---------------------------------------------------------------------------------
 (8) i1_TMR2_StartTimer                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (10) i1_TMR2_SetInterruptHandler                          2     0      2      48
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (10) i1_TMR0_SetInterruptHandler                          2     0      2      48
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (10) i1_IOCBF4_SetInterruptHandler                        2     0      2      48
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (10) i1_IOCBF3_SetInterruptHandler                        2     0      2      48
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (10) i1_IOCBF2_SetInterruptHandler                        2     0      2      48
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (10) i1_IOCBF1_SetInterruptHandler                        2     0      2      48
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (10) i1_IOCBF0_SetInterruptHandler                        2     0      2      48
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (10) _restoreTime                                        15    15      0   13564
                                             39 BANK0     15    15      0
                            ___aldiv
                            ___almod
                            ___ftmul
                            ___fttol
                            ___ltdiv
                            ___ltmod
                           ___lttoft
                              _round
 ---------------------------------------------------------------------------------
 (11) _round                                               6     3      3    6832
                                             33 BANK0      6     3      3
                            ___ftadd
                            ___ftneg
                              _trunc
 ---------------------------------------------------------------------------------
 (12) _trunc                                               9     6      3    3279
                                              8 BANK0      9     6      3
                           ___altoft
                            ___fttol
                              _frexp
 ---------------------------------------------------------------------------------
 (13) _frexp                                               6     2      4     336
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (13) ___fttol                                            14    10      4     380
                                              0 COMMON    14    10      4
 ---------------------------------------------------------------------------------
 (13) ___altoft                                            8     4      4    2272
                                              0 BANK0      8     4      4
                           ___ftpack
                            ___fttol (ARG)
 ---------------------------------------------------------------------------------
 (12) ___ftneg                                             3     0      3     109
                                             17 BANK0      3     0      3
                              _trunc (ARG)
 ---------------------------------------------------------------------------------
 (12) ___ftadd                                            13     7      6    3268
                                             20 BANK0     13     7      6
                            ___ftneg (ARG)
                           ___ftpack
                              _trunc (ARG)
 ---------------------------------------------------------------------------------
 (11) ___lttoft                                            4     1      3    2156
                                              8 COMMON     4     1      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (11) ___ltmod                                             8     2      6     415
                                              0 COMMON     8     2      6
 ---------------------------------------------------------------------------------
 (11) ___ltdiv                                            11     5      6     290
                                              8 COMMON     6     0      6
                                              0 BANK0      5     5      0
                            ___ltmod (ARG)
 ---------------------------------------------------------------------------------
 (11) ___ftmul                                            16    10      6    2524
                                              0 BANK0     16    10      6
                           ___ftpack
                           ___lttoft (ARG)
 ---------------------------------------------------------------------------------
 (14) ___ftpack                                            8     3      5    2070
                                              0 COMMON     8     3      5
 ---------------------------------------------------------------------------------
 (11) ___almod                                            11     3      8     424
                                              0 COMMON    11     3      8
 ---------------------------------------------------------------------------------
 (11) ___aldiv                                            15     7      8     428
                                             11 COMMON     1     1      0
                                              0 BANK0     14     6      8
                            ___almod (ARG)
 ---------------------------------------------------------------------------------
 (9) _shutdown                                             0     0      0      74
         i1_TMR1_SetInterruptHandler
                   i1_TMR2_StopTimer
 ---------------------------------------------------------------------------------
 (8) i1_TMR2_StopTimer                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (10) i1_TMR1_SetInterruptHandler                          2     0      2      74
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (8) _IOCBF4_DefaultInterruptHandler                       0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _IOCBF3_ISR                                           0     0      0       0
                   Absolute function *
     _IOCBF3_DefaultInterruptHandler *
                   _displayToggleISR *
 ---------------------------------------------------------------------------------
 (8) _displayToggleISR                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _IOCBF3_DefaultInterruptHandler                       0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _IOCBF2_ISR                                           0     0      0    1473
                   Absolute function *
     _IOCBF2_DefaultInterruptHandler *
                        _setHoursISR *
 ---------------------------------------------------------------------------------
 (8) _setHoursISR                                          0     0      0    1473
                     _TMR1_StopTimer
                      _isolateDigits
                    _twentyFourParse
                      _updateDisplay
 ---------------------------------------------------------------------------------
 (8) _twentyFourParse                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _IOCBF2_DefaultInterruptHandler                       0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _IOCBF1_ISR                                           0     0      0    1473
                   Absolute function *
     _IOCBF1_DefaultInterruptHandler *
                      _setMinutesISR *
 ---------------------------------------------------------------------------------
 (8) _setMinutesISR                                        0     0      0    1473
                     _TMR1_StopTimer
                      _isolateDigits
                      _updateDisplay
 ---------------------------------------------------------------------------------
 (8) _IOCBF1_DefaultInterruptHandler                       0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _IOCBF0_ISR                                           0     0      0    1473
                   Absolute function *
     _IOCBF0_DefaultInterruptHandler *
                      _setSecondsISR *
 ---------------------------------------------------------------------------------
 (8) _setSecondsISR                                        0     0      0    1473
                     _TMR1_StopTimer
                      _isolateDigits
                      _updateDisplay
 ---------------------------------------------------------------------------------
 (8) _updateDisplay                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _isolateDigits                                        0     0      0    1473
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (9) ___lwmod                                              6     2      4     927
                                              8 COMMON     6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (9) ___lwdiv                                              8     4      4     546
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (9) _TMR1_StopTimer                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _IOCBF0_DefaultInterruptHandler                       0     0      0       0
 ---------------------------------------------------------------------------------
 (7) Absolute function(Fake)                               0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 14
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _TMR1_StartTimer
   _startup
     _IOCBF0_SetInterruptHandler
     _IOCBF1_SetInterruptHandler
     _IOCBF2_SetInterruptHandler
     _IOCBF3_SetInterruptHandler
     _IOCBF4_SetInterruptHandler
     _SYSTEM_Initialize
       _OSCILLATOR_Initialize
       _PIN_MANAGER_Initialize
         _IOCBF0_SetInterruptHandler
         _IOCBF1_SetInterruptHandler
         _IOCBF2_SetInterruptHandler
         _IOCBF3_SetInterruptHandler
         _IOCBF4_SetInterruptHandler
         _IOCBF5_SetInterruptHandler
       _TMR0_Initialize
         _TMR0_SetInterruptHandler
       _TMR1_Initialize
         _TMR1_SetInterruptHandler
         _TMR1_StartTimer
       _TMR2_Initialize
         _TMR2_SetInterruptHandler
         _TMR2_StartTimer
       _WDT_Initialize
     _TMR0_SetInterruptHandler
     _TMR1_SetInterruptHandler
     _TMR2_SetInterruptHandler
     _TMR2_StopTimer
     _checkIDs

 _INTERRUPT_InterruptManager (ROOT)
   _PIN_MANAGER_IOC
     _IOCBF0_ISR
       Absolute function(Fake) *
       _IOCBF0_DefaultInterruptHandler *
       _setSecondsISR *
         _TMR1_StopTimer
         _isolateDigits
           ___lwdiv
           ___lwmod
             ___lwdiv (ARG)
         _updateDisplay
     _IOCBF1_ISR
       Absolute function(Fake) *
       _IOCBF1_DefaultInterruptHandler *
       _setMinutesISR *
         _TMR1_StopTimer
         _isolateDigits
           ___lwdiv
           ___lwmod
             ___lwdiv (ARG)
         _updateDisplay
     _IOCBF2_ISR
       Absolute function(Fake) *
       _IOCBF2_DefaultInterruptHandler *
       _setHoursISR *
         _TMR1_StopTimer
         _isolateDigits
           ___lwdiv
           ___lwmod
             ___lwdiv (ARG)
         _twentyFourParse
         _updateDisplay
     _IOCBF3_ISR
       Absolute function(Fake) *
       _IOCBF3_DefaultInterruptHandler *
       _displayToggleISR *
     _IOCBF4_ISR
       Absolute function(Fake) *
       _IOCBF4_DefaultInterruptHandler *
       _powerFailISR *
         _shutdown
           i1_TMR1_SetInterruptHandler
           i1_TMR2_StopTimer
         _wakeup
           _isolateDigits
             ___lwdiv
             ___lwmod
               ___lwdiv (ARG)
           _restoreTime
             ___aldiv
               ___almod (ARG)
             ___almod
             ___ftmul
               ___ftpack
               ___lttoft (ARG)
                 ___ftpack
             ___fttol
             ___ltdiv
               ___ltmod (ARG)
             ___ltmod
             ___lttoft
               ___ftpack
             _round
               ___ftadd
                 ___ftneg (ARG)
                   _trunc (ARG)
                     ___altoft
                       ___ftpack
                       ___fttol (ARG)
                     ___fttol
                     _frexp
                 ___ftpack (ARG)
                 _trunc (ARG)
                   ___altoft
                     ___ftpack
                     ___fttol (ARG)
                   ___fttol
                   _frexp
               ___ftneg
                 _trunc (ARG)
                   ___altoft
                     ___ftpack
                     ___fttol (ARG)
                   ___fttol
                   _frexp
               _trunc
                 ___altoft
                   ___ftpack
                   ___fttol (ARG)
                 ___fttol
                 _frexp
           _twentyFourParse
           _updateDisplay
           i1_IOCBF0_SetInterruptHandler
           i1_IOCBF1_SetInterruptHandler
           i1_IOCBF2_SetInterruptHandler
           i1_IOCBF3_SetInterruptHandler
           i1_IOCBF4_SetInterruptHandler
           i1_TMR0_SetInterruptHandler
           i1_TMR1_SetInterruptHandler
           i1_TMR2_SetInterruptHandler
           i1_TMR2_StartTimer
     _IOCBF5_ISR
       Absolute function(Fake) *
       _IOCBF5_DefaultInterruptHandler *
   _TMR0_ISR
     Absolute function(Fake) *
     _TMR0_DefaultInterruptHandler *
     _muxISR *
       _updateParallelPort
         _muxDigitCompensation
       i1_TMR2_StartTimer
   _TMR1_ISR
     Absolute function(Fake) *
     _TMR1_DefaultInterruptHandler *
     _sleepyTickISR *
     _tickISR *
       _isolateDigits
         ___lwdiv
         ___lwmod
           ___lwdiv (ARG)
       _timeParse
       _twentyFourParse
       _updateDisplay
   _TMR2_ISR
     Absolute function(Fake) *
     _TMR2_DefaultInterruptHandler *
     _blankISR *
       _groundCathode
       i1_TMR2_StopTimer

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       1       4        1.3%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     37      4F       5       98.8%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      E      35       7       66.3%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      92      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      92      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Fri Aug 31 13:27:30 2018

           restoreTime@sleepy_seconds_rounded 004D                                  ___altoft@exp 0026  
            __end_of_TMR2_SetInterruptHandler 0B1F                  ??i1_TMR2_SetInterruptHandler 0072  
                                           pc 0002              ??_IOCBF3_DefaultInterruptHandler 0070  
             ?_IOCBF3_DefaultInterruptHandler 0070                                   __CFG_CP$OFF 0000  
                               ___altoft@sign 0027                                            _RD 0CA8  
                             _timer0ReloadVal 00C6                                  ___ftadd@exp1 0040  
                                ___ftadd@exp2 003F                                  ___ftadd@sign 003E  
                                         l430 07C4                                           l432 07CF  
                                         l433 07CD                                           _PR2 001B  
                             _timer1ReloadVal 00C2                                  __CFG_IDLOC0$ 0004  
                                __CFG_IDLOC1$ 0058                                  __CFG_IDLOC2$ 0049  
                                __CFG_IDLOC3$ 004E                               _TMR2_Initialize 0BE7  
                                __CFG_BORV$HI 0000                                           wreg 0009  
                                __CFG_IESO$ON 0000                                  __CFG_FOSC$HS 0000  
          __end_of_IOCBF1_SetInterruptHandler 0AFB                    _IOCBF1_SetInterruptHandler 0AF5  
          __end_of_IOCBF4_SetInterruptHandler 0B40                    _IOCBF4_SetInterruptHandler 0B37  
                                __CFG_LVP$OFF 0000                                          l3500 0305  
                                        l3512 0326                                          l3524 0347  
                                        l3550 0396                                          l3536 0368  
                                        l3804 0793                                          l3806 07A6  
                                        l3816 07BD                                          l3790 0785  
                                        _CFGS 0CAE                         __end_of_isolateDigits 05C7  
                                        _LATA 010C                                          _LATB 010D  
                                        _LATC 010E                                          _LATD 010F  
                                        _LATE 0110                                          u3335 0313  
                                        u3345 0334                                          u3355 0355  
                                        u3365 0376                                          u3375 038E  
                                        u3385 03A4                                          u3827 07AF  
                                        u3790 07CA                      __end_of_displayToggleISR 0DAB  
                                        _TMR0 0015                                          _TMR2 001A  
                                        _OSTS 04D5                                ?_updateDisplay 0070  
                                        _WPUB 020D                                          _WPUE 0210  
                                __CFG_WRT$OFF 0000                                 __CFG_FCMEN$ON 0000  
                                        _main 077F                                  ___ftpack@arg 0070  
         __size_ofi1_TMR2_SetInterruptHandler 0006                                  ___ftpack@exp 0073  
                                        fsr0h 0005                                          fsr1h 0007  
                                        indf0 0000                                          fsr0l 0004  
                                        indf1 0001                                          fsr1l 0006  
                                        btemp 007E                                 __CFG_BOREN$ON 0000  
                                        start 0032                             ??_twentyFourParse 0070  
                  ??_TMR1_SetInterruptHandler 00C9                                 __CFG_MCLRE$ON 0000  
                                ___ftmul@cntr 002E                                  ___ftmul@sign 002F  
                 __size_of_updateParallelPort 0018                                 __CFG_LPBOR$ON 0000  
                                ___fttol@exp1 007D                                  ___fttol@lval 0079  
                     __end_of_TMR0_Initialize 0C39                ??_TMR0_DefaultInterruptHandler 0070  
              __size_of_OSCILLATOR_Initialize 0004                           __size_of_IOCBF0_ISR 000D  
                         __size_of_IOCBF1_ISR 000D                           __size_of_IOCBF2_ISR 000D  
                         __size_of_IOCBF3_ISR 000D                 __end_of_OSCILLATOR_Initialize 0ABB  
                         __size_of_IOCBF4_ISR 000D                           __size_of_IOCBF5_ISR 000D  
                             __end_of___aldiv 0649                               __end_of___almod 06B6  
                                       ?_main 0070                               __end_of___ftadd 0241  
                               __CFG_WDTE$OFF 0000                               _TMR1_StartTimer 0AAE  
                             __end_of___ftneg 0B2E                               __end_of___ftmul 02F5  
                                       _T1CON 0018                               __end_of___fttol 04BE  
                                       _T2CON 001C                               __end_of___ltdiv 0FAF  
                             __end_of___lwdiv 0E0B                               __end_of___ltmod 0E77  
                                       i1l173 002D                                         i1l165 0010  
                                       i1l167 001C                               __end_of___lwmod 0DD7  
                                       i1l169 0028                                         i1l604 0D7A  
                                       i1l710 0139                                         i1l711 0144  
                                       i1l706 008E                                         i1l637 0DA1  
                                       i1l709 012A                                         i1l638 0D96  
                                       i1l682 0EE3                                         i1l691 03AD  
                                       i1l852 0659                                         i1l685 0EE7  
                                       i1l694 03B1                                         i1l839 05D8  
                                       i1l952 0760                                         i1l953 0768  
                                       i1l945 074D                                         i1l976 01EA  
                                       _TMR1H 0017                                         _TMR1L 0016  
                                       _TRISA 008C                                         _TRISB 008D  
                                       _TRISC 008E                                         _TRISD 008F  
                                       _TRISE 0090             __size_of_TMR0_SetInterruptHandler 0006  
                   ?_TMR0_SetInterruptHandler 00C7                      __end_ofi1_TMR2_StopTimer 0AAB  
                            __end_of_TMR0_ISR 0BC4                              __end_of_TMR1_ISR 0C23  
                            __end_of_TMR2_ISR 0BB4                       __end_of_PIN_MANAGER_IOC 0D3A  
                              _WDT_Initialize 0ABB                                         _frexp 0E0B  
                                       _errno 00AC                                         _hours 0062  
                               ___ftpack@sign 0074                                         _round 0FAF  
                             __end_of_tickISR 07FF                                         _trunc 0F29  
                     __end_of_TMR1_Initialize 0C6D                                         pclath 000A  
              ??i1_IOCBF0_SetInterruptHandler 0072                ??i1_IOCBF3_SetInterruptHandler 0072  
                                       status 0003                               __end_of_startup 0543  
                                       wtemp0 007E                               _TMR2_StartTimer 0AB1  
                      ??_muxDigitCompensation 0070                         __end_of_setMinutesISR 0CCE  
                       __end_of_setSecondsISR 0CAD                               __initialization 0034  
                 ?i1_TMR1_SetInterruptHandler 0070                                  __end_of_main 07D3  
                     __end_of_TMR2_Initialize 0BFA                   ?_INTERRUPT_InterruptManager 0070  
                    _TMR2_SetInterruptHandler 0B19                                        ??_main 00D3  
                               ___fttol@sign1 0078                       _IOCBF0_InterruptHandler 00BC  
                                ?_setHoursISR 0070                        __end_of_WDT_Initialize 0ABF  
                            _expected_user_ID 1000                  ??_IOCBF2_SetInterruptHandler 00C9  
                             ??_updateDisplay 0070                                        ?_frexp 0070  
                            __end_of___altoft 0F29                  ??_IOCBF5_SetInterruptHandler 00C9  
                                      i1S3862 0800                                        _APFCON 011D  
                                      _ANSELA 018C                                        _ANSELB 018D  
                                      _ANSELC 018E                                        _ANSELD 018F  
                                      _ANSELE 0190                              __end_of___ftpack 077F  
                                      ?_round 0041                                        _T1GCON 0019  
                                      _HFIOFR 04D4                                        ?_trunc 0028  
                                      _LFIOFR 04D1                                        i1l1036 04A4  
                                      i1l3000 00A7                                        i1l3200 0E78  
                                      i1l3210 0E90                                        i1l3202 0E7C  
                                      i1l3212 0E95                                        i1l3204 0E81  
                                      i1l3214 0E9A                                        i1l3206 0E86  
                                      i1l2600 0450                                        i1l3208 0E8B  
                                      i1l3216 0E9F                                        i1l3404 0CC3  
                                      i1l2700 01E6                                        i1l2620 048E  
                                      i1l3422 0D08                                        i1l2550 0723  
                                      i1l2704 01FC                                        i1l2632 04B5  
                                      i1l2810 066E                                        i1l2554 072A  
                                      i1l2626 049B                                        i1l2618 0480  
                                      i1l2642 0E17                                        i1l3460 0B63  
                                      i1l3444 0D95                                        i1l2812 067C  
                                      i1l2820 069F                                        i1l2804 0666  
                                      i1l2564 0752                                        i1l2556 0734  
                                      i1l2708 020E                                        i1l2628 04A7  
                                      i1l3436 0B34                                        i1l3364 0C84  
                                      u202_25 076F                                        i1l3454 0B56  
                                      i1l2566 075A                                        i1l2558 0739  
                                      i1l2910 0E54                                        i1l2718 0229  
                                      i1l2662 017A                                        i1l2590 0F11  
                                      i1l3358 0C79                                        i1l3472 0B7D  
                                      i1l2824 06AD                                        i1l2816 0694  
                                      i1l2840 026E                                        i1l2680 01A3  
                                      i1l3640 0D2E                                        i1l3632 0D22  
                                      i1l3386 0CA2                                        i1l3466 0B70  
                                      i1l2834 0258                                        i1l2914 0E66  
                                      i1l2690 01C5                                        i1l2658 0173  
                                      i1l2738 0F41                                        i1l2852 02A9  
                                      i1l2908 0E47                                        i1l2692 01C9  
                                      i1l2668 0189                                        i1l2588 0F01  
                                      i1l3484 0B97                                        i1l3644 0D34  
                                      i1l3636 0D28                                        i1l3628 0D1C  
                                      u211_25 0481                                        i1l2774 05F9  
                                      i1l2766 05E9                                        i1l2918 0E70  
                                      i1l2686 01B6                                        i1l3478 0B8A  
                                      i1l3566 0D7C                                        i1l3558 0D69  
                                      i1l3582 07F3                                        i1l3574 07DE  
                                      i1l2944 0DFD                                        i1l2936 0DDF  
                                      i1l2960 0DB1                                        i1l2792 0640  
                                      i1l2784 0627                                        i1l2776 0607  
                                      i1l2864 02C5                                        i1l2856 02B1  
                                      i1l2688 01C0                                        i1l3576 07E5  
                                      i1l2938 0DEB                                        i1l2962 0DBD  
                                      i1l2970 0DD2                                        i1l2698 01DC  
                                      i1l3578 07EC                                        i1l2948 0E06  
                                      i1l2980 0CDA                                        i1l2788 0632  
                                      i1l2868 02CD                                        i1l2884 0F78  
                                      i1l3860 0EA5                                        i1l2966 0DC9  
                                      i1l2894 0F9E                                        i1l2886 0F85  
                                      i1l2984 0CE8                                        i1l2986 0CED  
                                      i1l2898 0FA8                                        u205_25 0F06  
                                      u230_25 01B7                                        u214_25 049C  
                                      u208_25 0457                                        u304_25 0098  
                                      u233_25 01CA                                        u250_25 061C  
                                      u251_25 0628                                        u227_25 01A4  
                                      u324_20 0D93                              __end_of___lttoft 0C0E  
                                      u260_25 0695                                        u236_25 01DD  
                                      u343_20 07DC                                        u247_25 05FC  
                                      _PMADRH 0192                                        u272_25 02CE  
                                      u280_25 0F9F                                        u345_20 07E3  
                                      _PMADRL 0191                                        u249_25 0608  
                                      u257_25 0671                                        u273_25 02D4  
                                      u265_25 027A                                        _PMDATH 0194  
                                      u194_25 072F                                        u266_25 028A  
                                      u347_20 07EA                                        _PMDATL 0193  
                                      u291_25 0DEC                                        u259_25 068A  
                                      u283_25 0E4A                                        u292_25 0DF6  
                                      u196_25 0748                                        u268_25 02B2  
                                      u276_25 0F7B                                        u293_25 0DFE  
                                      u269_25 02B8                                        u285_25 0E5E  
                                      u198_25 0755                                        u278_25 0F86  
                                      u286_25 0E67                                        u279_25 0F95  
                                      u296_25 0DB4                                        u289_25 0DE2  
                                      _OSCCON 0099                                        u298_25 0DC3  
                                      u299_25 0DCA                                        _TMR0CS 04AD  
                                      _WDTCON 0097                              __end_of_checkIDs 03A7  
                            __end_of_blankISR 0BA7                                __CFG_PWRTE$OFF 0000  
        __end_of_TMR1_DefaultInterruptHandler 0004         __size_of_TMR1_DefaultInterruptHandler 0001  
                _TMR1_DefaultInterruptHandler 0003            __end_ofi1_TMR2_SetInterruptHandler 0AEF  
                  i1_TMR2_SetInterruptHandler 0AE9                       __end_of_TMR1_StartTimer 0AB1  
                                   ??___aldiv 007B                                     ??___almod 0078  
                                   ??___ftadd 003A                                __CFG_STVREN$ON 0000  
                                   ??___ftneg 007E                                     ??___ftmul 0026  
                                   ??___fttol 0074                                     ??___ltdiv 0020  
                                   ??___lwdiv 0074                                     ??___ltmod 0076  
                                   ??___lwmod 007C                              ?_TMR0_Initialize 0070  
                                      _muxISR 0D5F                                        _wakeup 03A7  
         __size_of_IOCBF2_SetInterruptHandler 0006           __size_of_IOCBF5_SetInterruptHandler 0006  
                       ___ftmul@f3_as_product 002B          __end_ofi1_IOCBF1_SetInterruptHandler 0AD1  
       __size_ofi1_IOCBF1_SetInterruptHandler 0006                  i1_IOCBF1_SetInterruptHandler 0ACB  
                                ?_restoreTime 0070          __end_ofi1_IOCBF4_SetInterruptHandler 0AE3  
       __size_ofi1_IOCBF4_SetInterruptHandler 0006                  i1_IOCBF4_SetInterruptHandler 0ADD  
                                   ??_tickISR 007E                               ?_WDT_Initialize 0070  
                            __end_of_shutdown 0EEC                                        round@f 0044  
                                      round@x 0041                       __end_of_TMR2_StartTimer 0AB4  
i1IOCBF4_SetInterruptHandler@InterruptHandler 0070  i1IOCBF3_SetInterruptHandler@InterruptHandler 0070  
i1IOCBF2_SetInterruptHandler@InterruptHandler 0070  i1IOCBF1_SetInterruptHandler@InterruptHandler 0070  
i1IOCBF0_SetInterruptHandler@InterruptHandler 0070    i1TMR2_SetInterruptHandler@InterruptHandler 0070  
  i1TMR1_SetInterruptHandler@InterruptHandler 0070    i1TMR0_SetInterruptHandler@InterruptHandler 0070  
  IOCBF5_SetInterruptHandler@InterruptHandler 00C7    IOCBF4_SetInterruptHandler@InterruptHandler 00C7  
  IOCBF3_SetInterruptHandler@InterruptHandler 00C7    IOCBF2_SetInterruptHandler@InterruptHandler 00C7  
  IOCBF1_SetInterruptHandler@InterruptHandler 00C7    IOCBF0_SetInterruptHandler@InterruptHandler 00C7  
    TMR2_SetInterruptHandler@InterruptHandler 00C7      TMR1_SetInterruptHandler@InterruptHandler 00C7  
    TMR0_SetInterruptHandler@InterruptHandler 00C7                                     ??_startup 00D3  
                            ?_PIN_MANAGER_IOC 0070                                        trunc@i 002C  
                                      trunc@x 0028                                  ??_IOCBF0_ISR 007E  
                                ??_IOCBF1_ISR 007E                                  ??_IOCBF2_ISR 007E  
                                ??_IOCBF3_ISR 0070                                  ??_IOCBF4_ISR 007E  
                                ??_IOCBF5_ISR 0070                              ?_TMR1_Initialize 0070  
                           _SYSTEM_Initialize 0BD5                       __end_of__initialization 0045  
                                  ___altoft@c 0020                                    ___ftadd@f1 0034  
                                  ___ftadd@f2 0037                            ?_SYSTEM_Initialize 0070  
                                  ___ftneg@f1 0031                                    ___ftmul@f1 0020  
                                  ___ftmul@f2 0023                                    ___fttol@f1 0070  
                              __pcstackCOMMON 0070                           ??_SYSTEM_Initialize 00CA  
                                   ?_TMR0_ISR 0070                                     ?_TMR1_ISR 0070  
                                   ?_TMR2_ISR 0070                 ?_TMR1_DefaultInterruptHandler 0070  
                               __end_of_frexp 0E40        __end_of_IOCBF0_DefaultInterruptHandler 0AA0  
     __size_of_IOCBF0_DefaultInterruptHandler 0001                _IOCBF0_DefaultInterruptHandler 0A9F  
                               __end_of_round 1000                                 __end_of_trunc 0F6A  
                            ?_TMR2_Initialize 0070                                    ___lttoft@c 0078  
                          __end_of_IOCBF0_ISR 0B59                            __end_of_IOCBF1_ISR 0B66  
                          __end_of_IOCBF2_ISR 0B73                            __end_of_IOCBF3_ISR 0B80  
                          __end_of_IOCBF4_ISR 0B8D                            __end_of_IOCBF5_ISR 0B9A  
                              _OPTION_REGbits 0095                    __end_of_expected_device_ID 100D  
               ?i1_IOCBF1_SetInterruptHandler 0070                   ?_IOCBF1_SetInterruptHandler 00C7  
      __end_of_IOCBF3_DefaultInterruptHandler 0AA3       __size_of_IOCBF3_DefaultInterruptHandler 0001  
              _IOCBF3_DefaultInterruptHandler 0AA2                 ?i1_IOCBF4_SetInterruptHandler 0070  
                 ?_IOCBF4_SetInterruptHandler 00C7                                       ??_frexp 0074  
                             _twentyFourParse 0CCE                     __end_of_SYSTEM_Initialize 0BE7  
                                     ??_round 007E                                       ??_trunc 002B  
                                  __pbssBANK0 0057                                    __pbssBANK1 00A0  
                           ?_displayToggleISR 0070                            ??_displayToggleISR 0070  
            ??_IOCBF1_DefaultInterruptHandler 0070               ?_IOCBF1_DefaultInterruptHandler 0070  
                      __size_of_groundCathode 0011                         __end_of_sleepyTickISR 0B4C  
                     _IOCBF1_InterruptHandler 00BA                                    __pmaintext 077F  
            __end_of_TMR0_SetInterruptHandler 0B13                  ??i1_TMR0_SetInterruptHandler 0072  
                            ?_TMR1_StartTimer 0070                                    ??_TMR0_ISR 0071  
                                  ??_TMR1_ISR 007E                                    ??_TMR2_ISR 0070  
                                  __pintentry 0004                                     ?___altoft 0020  
            ??_IOCBF4_DefaultInterruptHandler 0070               ?_IOCBF4_DefaultInterruptHandler 0070  
                                     ?_muxISR 0070                                     ?___ftpack 0070  
                                     ?_wakeup 0070                            __size_of_timeParse 001F  
                                   ?___lttoft 0078                       __size_of_TMR1_StopTimer 0003  
                                   ?_checkIDs 0070                                     ?_blankISR 0070  
          __end_of_IOCBF2_SetInterruptHandler 0B01                    _IOCBF2_SetInterruptHandler 0AFB  
          __end_of_IOCBF5_SetInterruptHandler 0B0D                    _IOCBF5_SetInterruptHandler 0B07  
                           ?i1_TMR2_StopTimer 0070                          __size_of_setHoursISR 0024  
                     __size_of_TMR2_StopTimer 0003                              ?_TMR2_StartTimer 0070  
                          ??i1_TMR2_StopTimer 0070           __size_ofi1_TMR0_SetInterruptHandler 0006  
                  __end_of_updateParallelPort 0C51                                       _nT1SYNC 00C2  
                  ??_TMR2_SetInterruptHandler 00C9                      __end_of_expected_user_ID 1008  
                                     ___aldiv 05C7                                       ___almod 0649  
                                     ___ftadd 014B                  __end_of_extended_calibration 100B  
                                     ___ftneg 0B25                                       ___ftmul 0241  
                                     ___fttol 0438                                     ?_shutdown 0070  
                                     ___ltdiv 0F6A                                       ___lwdiv 0DD7  
                                     ___ltmod 0E40                                       ___lwmod 0DAB  
                                  ??___altoft 0024                                    ??___ftpack 0075  
                      __size_of_isolateDigits 0084                               __size_of_muxISR 0025  
                                     __ptext1 04BE                                       __ptext2 02F5  
                                     __ptext3 0AB4                                       __ptext4 0BD5  
                                     __ptext5 0ABB                                       __ptext6 0BE7  
                                     __ptext7 0AB1                                       __ptext8 0B19  
                                     __ptext9 0C51                               __size_of_wakeup 0091  
                                  ??___lttoft 007B                ??_TMR1_DefaultInterruptHandler 0070  
                                   _T1CONbits 0018                       __end_of_twentyFourParse 0CF2  
                               _groundCathode 0BC4                         _OSCILLATOR_Initialize 0AB7  
                                  ??_checkIDs 00C7                                     _T2CONbits 001C  
                                  ??_blankISR 0070             __size_of_TMR1_SetInterruptHandler 0006  
                            ___aldiv@dividend 0024                                       _tickISR 07D3  
                                     _minutes 0064                      ??_PIN_MANAGER_Initialize 00C9  
                                     _seconds 0066                     ?_TMR1_SetInterruptHandler 00C7  
                                   _IOCBFbits 0396                                     _IOCBNbits 0395  
                                   _IOCBPbits 0394                          __size_of_restoreTime 0102  
                                     _startup 04BE                    __size_of_SYSTEM_Initialize 0012  
                                     clrloop0 0B20                          end_of_initialization 0045  
              ??i1_IOCBF1_SetInterruptHandler 0072                ??i1_IOCBF4_SetInterruptHandler 0072  
                           __end_of_timeParse 0C8C                              ___ltdiv@dividend 007B  
                 ?i1_TMR2_SetInterruptHandler 0070                 __size_of_muxDigitCompensation 0039  
                            ___aldiv@quotient 002A                         restoreTime@calc_hours 0054  
                                  ??_shutdown 0072                              ??_WDT_Initialize 00C7  
                    _TMR0_SetInterruptHandler 0B0D                                     _PORTAbits 000C  
                                   _PORTBbits 000D                                     _PORTCbits 000E  
                              ?_groundCathode 0070                                 ?_powerFailISR 0070  
                     _IOCBF2_InterruptHandler 00B8                                     _TRISAbits 008C  
                                   _TRISBbits 008D                                     _TRISCbits 008E  
                                   _TRISDbits 008F                                     _TRISEbits 0090  
                            ___ltdiv@quotient 0021                        __size_of_setMinutesISR 0021  
                      __size_of_setSecondsISR 0021                  ??_IOCBF0_SetInterruptHandler 00C9  
                ??_IOCBF3_SetInterruptHandler 00C9                         __end_of_updateDisplay 0D5F  
                               _isolateDigits 0543            __end_ofi1_TMR0_SetInterruptHandler 0AE9  
                  i1_TMR0_SetInterruptHandler 0AE3                                   ___ftmul@exp 002A  
        __end_of_TMR2_DefaultInterruptHandler 0800         __size_of_TMR2_DefaultInterruptHandler 0001  
                _TMR2_DefaultInterruptHandler 07FF            restoreTime@sleepy_seconds_adjusted 004A  
                           __size_of_TMR0_ISR 0010                             __size_of_TMR1_ISR 0015  
                           __size_of_TMR2_ISR 000D           __size_of_IOCBF0_SetInterruptHandler 0006  
                              ??_powerFailISR 007E                                _TMR1_StopTimer 0AA5  
         __size_of_IOCBF3_SetInterruptHandler 0006                        ?_OSCILLATOR_Initialize 0070  
                               __pbitbssBANK0 0370                                __end_of_muxISR 0D84  
                              __end_of_wakeup 0438                              ?_twentyFourParse 0070  
        __end_ofi1_IOCBF2_SetInterruptHandler 0AD7         __size_ofi1_IOCBF2_SetInterruptHandler 0006  
                i1_IOCBF2_SetInterruptHandler 0AD1                           start_initialization 0034  
                    __size_of_TMR0_Initialize 0016               __size_of_PIN_MANAGER_Initialize 0065  
                              _TMR2_StopTimer 0AB4                                ?_isolateDigits 0070  
                        _extended_calibration 1008                                    frexp@value 0070  
                          _expected_device_ID 100B                      __size_of_PIN_MANAGER_IOC 0024  
                    __size_of_TMR1_Initialize 001C                                 _setMinutesISR 0CAD  
                               _setSecondsISR 0C8C                                  _ParallelPort 010F  
                      __end_of_TMR1_StopTimer 0AA8                     __size_of_displayToggleISR 0027  
                             ??_groundCathode 0070                                      ??_muxISR 0071  
               ?_TMR2_DefaultInterruptHandler 0070                                      ??_wakeup 007E  
      __end_of_IOCBF1_DefaultInterruptHandler 0AA1       __size_of_IOCBF1_DefaultInterruptHandler 0001  
              _IOCBF1_DefaultInterruptHandler 0AA0                             __size_of___altoft 003D  
                           __size_of___ftpack 0064                        __end_of_TMR2_StopTimer 0AB7  
                           __size_of___lttoft 0014                                     ___latbits 0003  
                               __pcstackBANK0 0020                                 __pcstackBANK1 00C7  
                    __size_of_TMR2_Initialize 0013                 ?i1_IOCBF2_SetInterruptHandler 0070  
                 ?_IOCBF2_SetInterruptHandler 00C7                             __size_of_checkIDs 00B2  
                              _sleepy_seconds 0057                   ?_IOCBF5_SetInterruptHandler 00C7  
                           __size_of_blankISR 000D                         _mux_digit_compensated 0068  
      __end_of_IOCBF4_DefaultInterruptHandler 0AA4       __size_of_IOCBF4_DefaultInterruptHandler 0001  
              _IOCBF4_DefaultInterruptHandler 0AA3                         _TMR0_InterruptHandler 00C4  
                     _IOCBF3_InterruptHandler 00B6                                ?_setMinutesISR 0070  
                            ___lwdiv@dividend 0072                        _PIN_MANAGER_Initialize 06B6  
                              ?_setSecondsISR 0070                     __size_ofi1_TMR2_StopTimer 0003  
            ??_IOCBF2_DefaultInterruptHandler 0070               ?_IOCBF2_DefaultInterruptHandler 0070  
            __end_of_TMR1_SetInterruptHandler 0B19                                      ?___aldiv 0020  
                                    ?___almod 0070                  ??i1_TMR1_SetInterruptHandler 0072  
                                    ?___ftadd 0034                                      ?___ftneg 0031  
                                    ?___ftmul 0020                                      ?___fttol 0070  
                                    ?___ltdiv 0078                                      ?___lwdiv 0070  
                                    ?___ltmod 0070                                      ?___lwmod 0078  
                             ?_TMR1_StopTimer 0070                  ??_INTERRUPT_InterruptManager 0056  
                            ___almod@dividend 0074                             __size_of_shutdown 003C  
                                   __pswtext1 0800                            _updateParallelPort 0C39  
            ??_IOCBF5_DefaultInterruptHandler 0070               ?_IOCBF5_DefaultInterruptHandler 0070  
                    __size_of_TMR1_StartTimer 0003                                 ??_setHoursISR 007E  
                             ?_TMR2_StopTimer 0070                                      ?_tickISR 0070  
          __end_of_IOCBF0_SetInterruptHandler 0AF5                    _IOCBF0_SetInterruptHandler 0AEF  
                      __size_of_sleepyTickISR 000C            __end_of_IOCBF3_SetInterruptHandler 0B07  
                  _IOCBF3_SetInterruptHandler 0B01                           ?_updateParallelPort 0070  
                             ??_isolateDigits 007E                              ___lwdiv@quotient 0075  
                                    ?_startup 0070                                __size_of_frexp 0035  
                              __size_of_round 0051                                __size_of_trunc 0041  
                           i1_TMR2_StartTimer 0AAB                              ___ltmod@dividend 0073  
                             ___aldiv@divisor 0020                                     _hours_LSD 00B0  
                                   _hours_MSD 00AE                             ??_TMR0_Initialize 00C9  
                             ___aldiv@counter 0028           __size_ofi1_TMR1_SetInterruptHandler 0006  
                                    _LATAbits 010C                                   _asleep_flag 0370  
                                    _LATCbits 010E                                      _LATDbits 010F  
                          ?i1_TMR2_StartTimer 0070                                      _LATEbits 0110  
                        __end_of_powerFailISR 0B37                                     clear_ram0 0B1F  
                                    _PIE1bits 0091                      __size_of_TMR2_StartTimer 0003  
         __size_of_INTERRUPT_InterruptManager 002E                    ??_TMR0_SetInterruptHandler 00C9  
                             ___ltdiv@divisor 0078                                      _PIR1bits 0011  
                        ??_updateParallelPort 0070                               ___ltdiv@counter 0024  
                                   _timeParse 0C6D                           ??i1_TMR2_StartTimer 0070  
                                    _TMR0_ISR 0BB4                                      _TMR1_ISR 0C0E  
                                    _TMR2_ISR 0BA7                             ??_PIN_MANAGER_IOC 007E  
                                   _mux_digit 006A                             ??_TMR1_Initialize 00C9  
                               ??_restoreTime 0047                ??_TMR2_DefaultInterruptHandler 0070  
           __size_of_TMR2_SetInterruptHandler 0006                     ?_TMR2_SetInterruptHandler 00C7  
                __end_of_muxDigitCompensation 0EB0                     __end_ofi1_TMR2_StartTimer 0AAE  
                         __end_of_setHoursISR 0D16                ??i1_IOCBF2_SetInterruptHandler 0072  
                           ??_TMR2_Initialize 00C9                               ??_setMinutesISR 007E  
                                   frexp@eptr 0073                               ??_setSecondsISR 007E  
                           checkIDs@device_ID 00D1                                 _sleepyTickISR 0B40  
                                  ?_timeParse 0070                   ?i1_TMR0_SetInterruptHandler 0070  
                     ??_OSCILLATOR_Initialize 00C7                              __size_of___aldiv 0082  
                            __size_of___almod 006D                              __size_of___ftadd 00F6  
                            _displayToggleISR 0D84                              __size_of___ftneg 0009  
                                    ___altoft 0EEC                              __size_of___ftmul 00B4  
                            __size_of___fttol 0086                              __size_of___ltdiv 0045  
                            __size_of___lwdiv 0034                              __size_of___ltmod 0037  
                            __size_of___lwmod 002C                                      ___ftpack 071B  
                    _TMR1_SetInterruptHandler 0B13                                      ___lttoft 0BFA  
                       _TMR1_InterruptHandler 00C0                                      _checkIDs 02F5  
                     _IOCBF4_InterruptHandler 006C                                      _blankISR 0B9A  
                             ___lwdiv@divisor 0070                              __size_of_tickISR 002C  
                             ___lwdiv@counter 0077                                      __ptext10 0AAE  
                                    __ptext11 0B13                                      __ptext20 0AEF  
                                    __ptext12 0C23                                      __ptext21 0AB7  
                                    __ptext13 0B0D                                    _T1GCONbits 0019  
                                    __ptext30 07D3                                      __ptext14 06B6  
                                    __ptext31 0C6D                                      __ptext23 0BA7  
                                    __ptext15 0B07                                      __ptext40 0B80  
                                    __ptext32 0BB4                                      __ptext24 07FF  
                                    __ptext16 0B37                                      __ptext41 0AA3  
                                    __ptext33 0002                                      __ptext25 0B9A  
                                    __ptext17 0B01                                      __ptext50 0ACB  
                                    __ptext42 0B2E                                      __ptext34 0D5F  
                                    __ptext26 0BC4                                      __ptext18 0AFB  
                                    __ptext51 0AC5                                      __ptext43 03A7  
                                    __ptext35 0C39                                      __ptext27 0C0E  
                                    __ptext19 0AF5                                      __ptext60 0BFA  
                                    __ptext52 0049                                      __ptext44 0AAB  
                                    __ptext36 0E77                                      __ptext28 0B40  
                                    __ptext61 0E40                                      __ptext53 0FAF  
                                    __ptext45 0AE9                                      __ptext37 0D16  
                                    __ptext29 0003                                      __ptext70 0B73  
                                    __ptext62 0F6A                                      __ptext54 0F29  
                                    __ptext46 0AE3                                      __ptext38 0B8D  
                                    __ptext71 0AA2                                      __ptext63 0241  
                                    __ptext55 0E0B                                      __ptext47 0ADD  
                                    __ptext39 0AA4                                      __ptext80 0B4C  
                                    __ptext72 0D84                                      __ptext64 071B  
                                    __ptext56 0438                                      __ptext48 0AD7  
                                    __ptext81 0A9F                                      __ptext73 0B66  
                                    __ptext65 0649                                      __ptext57 0EEC  
                                    __ptext49 0AD1                                      __ptext82 0C8C  
                                    __ptext74 0AA1                                      __ptext66 05C7  
                                    __ptext58 0B25                                      __ptext83 0D3A  
                                    __ptext75 0CF2                                      __ptext67 0EB0  
                                    __ptext59 014B                                      __ptext84 0543  
                                    __ptext76 0CCE                                      __ptext68 0AA8  
                                    __ptext85 0DAB                                      __ptext77 0B59  
                                    __ptext69 0ABF                                      __ptext86 0DD7  
                                    __ptext78 0AA0                                      __ptext87 0AA5  
                                    __ptext79 0CAD                  ??_IOCBF1_SetInterruptHandler 00C9  
                ??_IOCBF4_SetInterruptHandler 00C9                               ___almod@divisor 0070  
                           ??_TMR1_StartTimer 00C7                              __size_of_startup 0085  
                         __end_of_restoreTime 014B                                    _IOCBF0_ISR 0B4C  
                                  _IOCBF1_ISR 0B59                                    _IOCBF2_ISR 0B66  
                                  _IOCBF3_ISR 0B73                               ___almod@counter 0079  
                                  _IOCBF4_ISR 0B80                                    _IOCBF5_ISR 0B8D  
                                  trunc@expon 002F                                 __size_of_main 0054  
        __end_of_TMR0_DefaultInterruptHandler 0003         __size_of_TMR0_DefaultInterruptHandler 0001  
                             ___ltmod@divisor 0070                  _TMR0_DefaultInterruptHandler 0002  
                              ?_sleepyTickISR 0070                               ___ltmod@counter 0077  
                            i1_TMR2_StopTimer 0AA8            __end_ofi1_TMR1_SetInterruptHandler 0AC5  
                  i1_TMR1_SetInterruptHandler 0ABF                             checkIDs@user_ID_0 00C9  
                           checkIDs@user_ID_1 00CB                             checkIDs@user_ID_2 00CD  
                           checkIDs@user_ID_3 00CF                                      int$flags 007E  
                                    _shutdown 0EB0                             ??_TMR2_StartTimer 00C7  
          __end_of_INTERRUPT_InterruptManager 0032                    _INTERRUPT_InterruptManager 0004  
         __size_of_IOCBF1_SetInterruptHandler 0006                        __size_of_updateDisplay 0025  
         __size_of_IOCBF4_SetInterruptHandler 0009                                   _minutes_LSD 005A  
                                 _minutes_MSD 00B2          __end_ofi1_IOCBF0_SetInterruptHandler 0ACB  
       __size_ofi1_IOCBF0_SetInterruptHandler 0006                  i1_IOCBF0_SetInterruptHandler 0AC5  
                                 _seconds_LSD 005E                                    _INTCONbits 000B  
                                 _seconds_MSD 005C                       restoreTime@calc_minutes 0052  
                     restoreTime@calc_seconds 0050          __end_ofi1_IOCBF3_SetInterruptHandler 0ADD  
       __size_ofi1_IOCBF3_SetInterruptHandler 0006                  i1_IOCBF3_SetInterruptHandler 0AD7  
                                 _setHoursISR 0CF2                    __size_ofi1_TMR2_StartTimer 0003  
                       __size_of_powerFailISR 0009                       __size_of_WDT_Initialize 0004  
                                    intlevel1 0000                      __size_of_twentyFourParse 0024  
                            ___lwmod@dividend 007A                       ?_PIN_MANAGER_Initialize 0070  
                           __CFG_CLKOUTEN$OFF 0000                              ??_TMR1_StopTimer 0070  
                                  _OSCCONbits 0099                 ?_TMR0_DefaultInterruptHandler 0070  
                                 ??_timeParse 0070                          _muxDigitCompensation 0E77  
                            ??_TMR2_StopTimer 00C7                                 __pstringtext1 1000  
                               __pstringtext2 1008                                 __pstringtext3 100B  
                       __end_of_groundCathode 0BD5                                    _OPTION_REG 0095  
                                _powerFailISR 0B2E                               ___lwmod@divisor 0078  
      __end_of_IOCBF2_DefaultInterruptHandler 0AA2       __size_of_IOCBF2_DefaultInterruptHandler 0001  
              _IOCBF2_DefaultInterruptHandler 0AA1                               _TMR0_Initialize 0C23  
                                 _restoreTime 0049                               ___lwmod@counter 007D  
                                ___aldiv@sign 0029                 ?i1_IOCBF0_SetInterruptHandler 0070  
                 ?_IOCBF0_SetInterruptHandler 00C7                 ?i1_IOCBF3_SetInterruptHandler 0070  
                 ?_IOCBF3_SetInterruptHandler 00C7                                   ?_IOCBF0_ISR 0070  
                                 ?_IOCBF1_ISR 0070                                   ?_IOCBF2_ISR 0070  
                                 ?_IOCBF3_ISR 0070                                   ?_IOCBF4_ISR 0070  
                                 ?_IOCBF5_ISR 0070                __end_of_PIN_MANAGER_Initialize 071B  
                                ___almod@sign 007A              ??_IOCBF0_DefaultInterruptHandler 0070  
             ?_IOCBF0_DefaultInterruptHandler 0070                                 _display_hours 0060  
                               _updateDisplay 0D3A        __end_of_IOCBF5_DefaultInterruptHandler 0AA5  
     __size_of_IOCBF5_DefaultInterruptHandler 0001                _IOCBF5_DefaultInterruptHandler 0AA4  
                             ??_sleepyTickISR 0070                               _PIN_MANAGER_IOC 0D16  
                       _TMR2_InterruptHandler 00BE                       _IOCBF5_InterruptHandler 00B4  
                                 _mux_numeral 00A0                               _TMR1_Initialize 0C51  
                       ?_muxDigitCompensation 0070  
