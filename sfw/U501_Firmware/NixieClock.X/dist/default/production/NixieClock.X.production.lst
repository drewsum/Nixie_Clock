

Microchip Technology PIC LITE Macro Assembler V1.45 build -152302408 
                                                                                               Sun Feb 21 19:26:54 2021

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	16LF1519
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	stringtext1,global,class=STRCODE,delta=2
     5                           	psect	stringtext2,global,class=STRCODE,delta=2
     6                           	psect	stringtext3,global,class=STRCODE,delta=2
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	bitbssBANK0,global,bit,class=BANK0,space=1,delta=1
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    11                           	psect	clrtext,global,class=CODE,delta=2
    12                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    13                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    15                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    16                           	psect	text1,local,class=CODE,merge=1,delta=2
    17                           	psect	text2,local,class=CODE,merge=1,delta=2
    18                           	psect	text3,local,class=CODE,merge=1,delta=2
    19                           	psect	text4,local,class=CODE,merge=1,delta=2
    20                           	psect	text5,local,class=CODE,merge=1,delta=2
    21                           	psect	text6,local,class=CODE,merge=1,delta=2
    22                           	psect	text7,local,class=CODE,merge=1,delta=2
    23                           	psect	text8,local,class=CODE,merge=1,delta=2
    24                           	psect	text9,local,class=CODE,merge=1,delta=2
    25                           	psect	text10,local,class=CODE,merge=1,delta=2
    26                           	psect	text11,local,class=CODE,merge=1,delta=2
    27                           	psect	text12,local,class=CODE,merge=1,delta=2
    28                           	psect	text13,local,class=CODE,merge=1,delta=2
    29                           	psect	text14,local,class=CODE,merge=1,delta=2
    30                           	psect	text15,local,class=CODE,merge=1,delta=2
    31                           	psect	text16,local,class=CODE,merge=1,delta=2
    32                           	psect	text17,local,class=CODE,merge=1,delta=2
    33                           	psect	text18,local,class=CODE,merge=1,delta=2
    34                           	psect	text19,local,class=CODE,merge=1,delta=2
    35                           	psect	text20,local,class=CODE,merge=1,delta=2
    36                           	psect	text21,local,class=CODE,merge=1,delta=2
    37                           	psect	intentry,global,class=CODE,delta=2
    38                           	psect	text23,local,class=CODE,merge=1,delta=2
    39                           	psect	text24,local,class=CODE,merge=1,delta=2
    40                           	psect	text25,local,class=CODE,merge=1,delta=2
    41                           	psect	text26,local,class=CODE,merge=1,delta=2
    42                           	psect	text27,local,class=CODE,merge=1,delta=2
    43                           	psect	text28,local,class=CODE,merge=1,delta=2
    44                           	psect	text29,local,class=CODE,merge=1,delta=2
    45                           	psect	text30,local,class=CODE,merge=1,delta=2
    46                           	psect	text31,local,class=CODE,merge=1,delta=2
    47                           	psect	text32,local,class=CODE,merge=1,delta=2
    48                           	psect	text33,local,class=CODE,merge=1,delta=2
    49                           	psect	text34,local,class=CODE,merge=1,delta=2
    50                           	psect	text35,local,class=CODE,merge=1,delta=2
    51                           	psect	text36,local,class=CODE,merge=1,delta=2
    52                           	psect	swtext1,local,class=CONST,delta=2
    53                           	psect	text37,local,class=CODE,merge=1,delta=2
    54                           	psect	text38,local,class=CODE,merge=1,delta=2
    55                           	psect	text39,local,class=CODE,merge=1,delta=2
    56                           	psect	text40,local,class=CODE,merge=1,delta=2
    57                           	psect	text41,local,class=CODE,merge=1,delta=2
    58                           	psect	text42,local,class=CODE,merge=1,delta=2
    59                           	psect	text43,local,class=CODE,merge=1,delta=2
    60                           	psect	text44,local,class=CODE,merge=1,delta=2
    61                           	psect	text45,local,class=CODE,merge=1,delta=2
    62                           	psect	text46,local,class=CODE,merge=1,delta=2
    63                           	psect	text47,local,class=CODE,merge=1,delta=2
    64                           	psect	text48,local,class=CODE,merge=1,delta=2
    65                           	psect	text49,local,class=CODE,merge=1,delta=2
    66                           	psect	text50,local,class=CODE,merge=1,delta=2
    67                           	psect	text51,local,class=CODE,merge=1,delta=2
    68                           	psect	text52,local,class=CODE,merge=1,delta=2
    69                           	psect	text53,local,class=CODE,merge=1,delta=2,group=1
    70                           	psect	text54,local,class=CODE,merge=1,delta=2,group=1
    71                           	psect	text55,local,class=CODE,merge=1,delta=2,group=1
    72                           	psect	text56,local,class=CODE,merge=1,delta=2,group=1
    73                           	psect	text57,local,class=CODE,merge=1,delta=2,group=1
    74                           	psect	text58,local,class=CODE,merge=1,delta=2,group=1
    75                           	psect	text59,local,class=CODE,merge=1,delta=2,group=1
    76                           	psect	text60,local,class=CODE,merge=1,delta=2,group=1
    77                           	psect	text61,local,class=CODE,merge=1,delta=2,group=1
    78                           	psect	text62,local,class=CODE,merge=1,delta=2,group=1
    79                           	psect	text63,local,class=CODE,merge=1,delta=2,group=1
    80                           	psect	text64,local,class=CODE,merge=1,delta=2,group=1
    81                           	psect	text65,local,class=CODE,merge=1,delta=2,group=1
    82                           	psect	text66,local,class=CODE,merge=1,delta=2,group=1
    83                           	psect	text67,local,class=CODE,merge=1,delta=2
    84                           	psect	text68,local,class=CODE,merge=1,delta=2
    85                           	psect	text69,local,class=CODE,merge=1,delta=2
    86                           	psect	text70,local,class=CODE,merge=1,delta=2
    87                           	psect	text71,local,class=CODE,merge=1,delta=2
    88                           	psect	text72,local,class=CODE,merge=1,delta=2
    89                           	psect	text73,local,class=CODE,merge=1,delta=2
    90                           	psect	text74,local,class=CODE,merge=1,delta=2
    91                           	psect	text75,local,class=CODE,merge=1,delta=2
    92                           	psect	text76,local,class=CODE,merge=1,delta=2
    93                           	psect	text77,local,class=CODE,merge=1,delta=2
    94                           	psect	text78,local,class=CODE,merge=1,delta=2
    95                           	psect	text79,local,class=CODE,merge=1,delta=2
    96                           	psect	text80,local,class=CODE,merge=1,delta=2
    97                           	psect	text81,local,class=CODE,merge=1,delta=2
    98                           	psect	text82,local,class=CODE,merge=1,delta=2
    99                           	psect	text83,local,class=CODE,merge=1,delta=2
   100                           	psect	text84,local,class=CODE,merge=1,delta=2
   101                           	psect	text85,local,class=CODE,merge=1,delta=2,group=1
   102                           	psect	text86,local,class=CODE,merge=1,delta=2,group=1
   103                           	psect	text87,local,class=CODE,merge=1,delta=2
   104                           	dabs	1,0x7E,2
   105  0000                     
   106                           ; Version 1.45 (B)
   107                           ; Generated 30/01/2018 GMT
   108                           ; 
   109                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
   110                           ; All rights reserved.
   111                           ; 
   112                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   113                           ; 
   114                           ; Redistribution and use in source and binary forms, with or without modification, are
   115                           ; permitted provided that the following conditions are met:
   116                           ; 
   117                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   118                           ;        conditions and the following disclaimer.
   119                           ; 
   120                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   121                           ;        of conditions and the following disclaimer in the documentation and/or other
   122                           ;        materials provided with the distribution.
   123                           ; 
   124                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   125                           ;        software without specific prior written permission.
   126                           ; 
   127                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   128                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   129                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   130                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   131                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   132                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   133                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   134                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   135                           ; 
   136                           ; 
   137                           ; Code-generator required, PIC16LF1519 Definitions
   138                           ; 
   139                           ; SFR Addresses
   140  0000                     	;# 
   141  0001                     	;# 
   142  0002                     	;# 
   143  0003                     	;# 
   144  0004                     	;# 
   145  0005                     	;# 
   146  0006                     	;# 
   147  0007                     	;# 
   148  0008                     	;# 
   149  0009                     	;# 
   150  000A                     	;# 
   151  000B                     	;# 
   152  000C                     	;# 
   153  000D                     	;# 
   154  000E                     	;# 
   155  000F                     	;# 
   156  0010                     	;# 
   157  0011                     	;# 
   158  0012                     	;# 
   159  0015                     	;# 
   160  0016                     	;# 
   161  0016                     	;# 
   162  0017                     	;# 
   163  0018                     	;# 
   164  0019                     	;# 
   165  001A                     	;# 
   166  001B                     	;# 
   167  001C                     	;# 
   168  008C                     	;# 
   169  008D                     	;# 
   170  008E                     	;# 
   171  008F                     	;# 
   172  0090                     	;# 
   173  0091                     	;# 
   174  0092                     	;# 
   175  0095                     	;# 
   176  0096                     	;# 
   177  0097                     	;# 
   178  0099                     	;# 
   179  009A                     	;# 
   180  009B                     	;# 
   181  009B                     	;# 
   182  009C                     	;# 
   183  009D                     	;# 
   184  009E                     	;# 
   185  010C                     	;# 
   186  010D                     	;# 
   187  010E                     	;# 
   188  010F                     	;# 
   189  0110                     	;# 
   190  0116                     	;# 
   191  0117                     	;# 
   192  011D                     	;# 
   193  018C                     	;# 
   194  018D                     	;# 
   195  018E                     	;# 
   196  018F                     	;# 
   197  0190                     	;# 
   198  0191                     	;# 
   199  0191                     	;# 
   200  0192                     	;# 
   201  0193                     	;# 
   202  0193                     	;# 
   203  0194                     	;# 
   204  0195                     	;# 
   205  0196                     	;# 
   206  0199                     	;# 
   207  019A                     	;# 
   208  019B                     	;# 
   209  019B                     	;# 
   210  019B                     	;# 
   211  019B                     	;# 
   212  019C                     	;# 
   213  019C                     	;# 
   214  019D                     	;# 
   215  019E                     	;# 
   216  019F                     	;# 
   217  020D                     	;# 
   218  0210                     	;# 
   219  0211                     	;# 
   220  0211                     	;# 
   221  0212                     	;# 
   222  0212                     	;# 
   223  0213                     	;# 
   224  0213                     	;# 
   225  0214                     	;# 
   226  0214                     	;# 
   227  0215                     	;# 
   228  0215                     	;# 
   229  0215                     	;# 
   230  0216                     	;# 
   231  0216                     	;# 
   232  0217                     	;# 
   233  0217                     	;# 
   234  0291                     	;# 
   235  0291                     	;# 
   236  0292                     	;# 
   237  0293                     	;# 
   238  0298                     	;# 
   239  0298                     	;# 
   240  0299                     	;# 
   241  029A                     	;# 
   242  0394                     	;# 
   243  0395                     	;# 
   244  0396                     	;# 
   245  0FE4                     	;# 
   246  0FE5                     	;# 
   247  0FE6                     	;# 
   248  0FE7                     	;# 
   249  0FE8                     	;# 
   250  0FE9                     	;# 
   251  0FEA                     	;# 
   252  0FEB                     	;# 
   253  0FED                     	;# 
   254  0FEE                     	;# 
   255  0FEF                     	;# 
   256  0000                     	;# 
   257  0001                     	;# 
   258  0002                     	;# 
   259  0003                     	;# 
   260  0004                     	;# 
   261  0005                     	;# 
   262  0006                     	;# 
   263  0007                     	;# 
   264  0008                     	;# 
   265  0009                     	;# 
   266  000A                     	;# 
   267  000B                     	;# 
   268  000C                     	;# 
   269  000D                     	;# 
   270  000E                     	;# 
   271  000F                     	;# 
   272  0010                     	;# 
   273  0011                     	;# 
   274  0012                     	;# 
   275  0015                     	;# 
   276  0016                     	;# 
   277  0016                     	;# 
   278  0017                     	;# 
   279  0018                     	;# 
   280  0019                     	;# 
   281  001A                     	;# 
   282  001B                     	;# 
   283  001C                     	;# 
   284  008C                     	;# 
   285  008D                     	;# 
   286  008E                     	;# 
   287  008F                     	;# 
   288  0090                     	;# 
   289  0091                     	;# 
   290  0092                     	;# 
   291  0095                     	;# 
   292  0096                     	;# 
   293  0097                     	;# 
   294  0099                     	;# 
   295  009A                     	;# 
   296  009B                     	;# 
   297  009B                     	;# 
   298  009C                     	;# 
   299  009D                     	;# 
   300  009E                     	;# 
   301  010C                     	;# 
   302  010D                     	;# 
   303  010E                     	;# 
   304  010F                     	;# 
   305  0110                     	;# 
   306  0116                     	;# 
   307  0117                     	;# 
   308  011D                     	;# 
   309  018C                     	;# 
   310  018D                     	;# 
   311  018E                     	;# 
   312  018F                     	;# 
   313  0190                     	;# 
   314  0191                     	;# 
   315  0191                     	;# 
   316  0192                     	;# 
   317  0193                     	;# 
   318  0193                     	;# 
   319  0194                     	;# 
   320  0195                     	;# 
   321  0196                     	;# 
   322  0199                     	;# 
   323  019A                     	;# 
   324  019B                     	;# 
   325  019B                     	;# 
   326  019B                     	;# 
   327  019B                     	;# 
   328  019C                     	;# 
   329  019C                     	;# 
   330  019D                     	;# 
   331  019E                     	;# 
   332  019F                     	;# 
   333  020D                     	;# 
   334  0210                     	;# 
   335  0211                     	;# 
   336  0211                     	;# 
   337  0212                     	;# 
   338  0212                     	;# 
   339  0213                     	;# 
   340  0213                     	;# 
   341  0214                     	;# 
   342  0214                     	;# 
   343  0215                     	;# 
   344  0215                     	;# 
   345  0215                     	;# 
   346  0216                     	;# 
   347  0216                     	;# 
   348  0217                     	;# 
   349  0217                     	;# 
   350  0291                     	;# 
   351  0291                     	;# 
   352  0292                     	;# 
   353  0293                     	;# 
   354  0298                     	;# 
   355  0298                     	;# 
   356  0299                     	;# 
   357  029A                     	;# 
   358  0394                     	;# 
   359  0395                     	;# 
   360  0396                     	;# 
   361  0FE4                     	;# 
   362  0FE5                     	;# 
   363  0FE6                     	;# 
   364  0FE7                     	;# 
   365  0FE8                     	;# 
   366  0FE9                     	;# 
   367  0FEA                     	;# 
   368  0FEB                     	;# 
   369  0FED                     	;# 
   370  0FEE                     	;# 
   371  0FEF                     	;# 
   372  0000                     	;# 
   373  0001                     	;# 
   374  0002                     	;# 
   375  0003                     	;# 
   376  0004                     	;# 
   377  0005                     	;# 
   378  0006                     	;# 
   379  0007                     	;# 
   380  0008                     	;# 
   381  0009                     	;# 
   382  000A                     	;# 
   383  000B                     	;# 
   384  000C                     	;# 
   385  000D                     	;# 
   386  000E                     	;# 
   387  000F                     	;# 
   388  0010                     	;# 
   389  0011                     	;# 
   390  0012                     	;# 
   391  0015                     	;# 
   392  0016                     	;# 
   393  0016                     	;# 
   394  0017                     	;# 
   395  0018                     	;# 
   396  0019                     	;# 
   397  001A                     	;# 
   398  001B                     	;# 
   399  001C                     	;# 
   400  008C                     	;# 
   401  008D                     	;# 
   402  008E                     	;# 
   403  008F                     	;# 
   404  0090                     	;# 
   405  0091                     	;# 
   406  0092                     	;# 
   407  0095                     	;# 
   408  0096                     	;# 
   409  0097                     	;# 
   410  0099                     	;# 
   411  009A                     	;# 
   412  009B                     	;# 
   413  009B                     	;# 
   414  009C                     	;# 
   415  009D                     	;# 
   416  009E                     	;# 
   417  010C                     	;# 
   418  010D                     	;# 
   419  010E                     	;# 
   420  010F                     	;# 
   421  0110                     	;# 
   422  0116                     	;# 
   423  0117                     	;# 
   424  011D                     	;# 
   425  018C                     	;# 
   426  018D                     	;# 
   427  018E                     	;# 
   428  018F                     	;# 
   429  0190                     	;# 
   430  0191                     	;# 
   431  0191                     	;# 
   432  0192                     	;# 
   433  0193                     	;# 
   434  0193                     	;# 
   435  0194                     	;# 
   436  0195                     	;# 
   437  0196                     	;# 
   438  0199                     	;# 
   439  019A                     	;# 
   440  019B                     	;# 
   441  019B                     	;# 
   442  019B                     	;# 
   443  019B                     	;# 
   444  019C                     	;# 
   445  019C                     	;# 
   446  019D                     	;# 
   447  019E                     	;# 
   448  019F                     	;# 
   449  020D                     	;# 
   450  0210                     	;# 
   451  0211                     	;# 
   452  0211                     	;# 
   453  0212                     	;# 
   454  0212                     	;# 
   455  0213                     	;# 
   456  0213                     	;# 
   457  0214                     	;# 
   458  0214                     	;# 
   459  0215                     	;# 
   460  0215                     	;# 
   461  0215                     	;# 
   462  0216                     	;# 
   463  0216                     	;# 
   464  0217                     	;# 
   465  0217                     	;# 
   466  0291                     	;# 
   467  0291                     	;# 
   468  0292                     	;# 
   469  0293                     	;# 
   470  0298                     	;# 
   471  0298                     	;# 
   472  0299                     	;# 
   473  029A                     	;# 
   474  0394                     	;# 
   475  0395                     	;# 
   476  0396                     	;# 
   477  0FE4                     	;# 
   478  0FE5                     	;# 
   479  0FE6                     	;# 
   480  0FE7                     	;# 
   481  0FE8                     	;# 
   482  0FE9                     	;# 
   483  0FEA                     	;# 
   484  0FEB                     	;# 
   485  0FED                     	;# 
   486  0FEE                     	;# 
   487  0FEF                     	;# 
   488  0000                     	;# 
   489  0001                     	;# 
   490  0002                     	;# 
   491  0003                     	;# 
   492  0004                     	;# 
   493  0005                     	;# 
   494  0006                     	;# 
   495  0007                     	;# 
   496  0008                     	;# 
   497  0009                     	;# 
   498  000A                     	;# 
   499  000B                     	;# 
   500  000C                     	;# 
   501  000D                     	;# 
   502  000E                     	;# 
   503  000F                     	;# 
   504  0010                     	;# 
   505  0011                     	;# 
   506  0012                     	;# 
   507  0015                     	;# 
   508  0016                     	;# 
   509  0016                     	;# 
   510  0017                     	;# 
   511  0018                     	;# 
   512  0019                     	;# 
   513  001A                     	;# 
   514  001B                     	;# 
   515  001C                     	;# 
   516  008C                     	;# 
   517  008D                     	;# 
   518  008E                     	;# 
   519  008F                     	;# 
   520  0090                     	;# 
   521  0091                     	;# 
   522  0092                     	;# 
   523  0095                     	;# 
   524  0096                     	;# 
   525  0097                     	;# 
   526  0099                     	;# 
   527  009A                     	;# 
   528  009B                     	;# 
   529  009B                     	;# 
   530  009C                     	;# 
   531  009D                     	;# 
   532  009E                     	;# 
   533  010C                     	;# 
   534  010D                     	;# 
   535  010E                     	;# 
   536  010F                     	;# 
   537  0110                     	;# 
   538  0116                     	;# 
   539  0117                     	;# 
   540  011D                     	;# 
   541  018C                     	;# 
   542  018D                     	;# 
   543  018E                     	;# 
   544  018F                     	;# 
   545  0190                     	;# 
   546  0191                     	;# 
   547  0191                     	;# 
   548  0192                     	;# 
   549  0193                     	;# 
   550  0193                     	;# 
   551  0194                     	;# 
   552  0195                     	;# 
   553  0196                     	;# 
   554  0199                     	;# 
   555  019A                     	;# 
   556  019B                     	;# 
   557  019B                     	;# 
   558  019B                     	;# 
   559  019B                     	;# 
   560  019C                     	;# 
   561  019C                     	;# 
   562  019D                     	;# 
   563  019E                     	;# 
   564  019F                     	;# 
   565  020D                     	;# 
   566  0210                     	;# 
   567  0211                     	;# 
   568  0211                     	;# 
   569  0212                     	;# 
   570  0212                     	;# 
   571  0213                     	;# 
   572  0213                     	;# 
   573  0214                     	;# 
   574  0214                     	;# 
   575  0215                     	;# 
   576  0215                     	;# 
   577  0215                     	;# 
   578  0216                     	;# 
   579  0216                     	;# 
   580  0217                     	;# 
   581  0217                     	;# 
   582  0291                     	;# 
   583  0291                     	;# 
   584  0292                     	;# 
   585  0293                     	;# 
   586  0298                     	;# 
   587  0298                     	;# 
   588  0299                     	;# 
   589  029A                     	;# 
   590  0394                     	;# 
   591  0395                     	;# 
   592  0396                     	;# 
   593  0FE4                     	;# 
   594  0FE5                     	;# 
   595  0FE6                     	;# 
   596  0FE7                     	;# 
   597  0FE8                     	;# 
   598  0FE9                     	;# 
   599  0FEA                     	;# 
   600  0FEB                     	;# 
   601  0FED                     	;# 
   602  0FEE                     	;# 
   603  0FEF                     	;# 
   604  0000                     	;# 
   605  0001                     	;# 
   606  0002                     	;# 
   607  0003                     	;# 
   608  0004                     	;# 
   609  0005                     	;# 
   610  0006                     	;# 
   611  0007                     	;# 
   612  0008                     	;# 
   613  0009                     	;# 
   614  000A                     	;# 
   615  000B                     	;# 
   616  000C                     	;# 
   617  000D                     	;# 
   618  000E                     	;# 
   619  000F                     	;# 
   620  0010                     	;# 
   621  0011                     	;# 
   622  0012                     	;# 
   623  0015                     	;# 
   624  0016                     	;# 
   625  0016                     	;# 
   626  0017                     	;# 
   627  0018                     	;# 
   628  0019                     	;# 
   629  001A                     	;# 
   630  001B                     	;# 
   631  001C                     	;# 
   632  008C                     	;# 
   633  008D                     	;# 
   634  008E                     	;# 
   635  008F                     	;# 
   636  0090                     	;# 
   637  0091                     	;# 
   638  0092                     	;# 
   639  0095                     	;# 
   640  0096                     	;# 
   641  0097                     	;# 
   642  0099                     	;# 
   643  009A                     	;# 
   644  009B                     	;# 
   645  009B                     	;# 
   646  009C                     	;# 
   647  009D                     	;# 
   648  009E                     	;# 
   649  010C                     	;# 
   650  010D                     	;# 
   651  010E                     	;# 
   652  010F                     	;# 
   653  0110                     	;# 
   654  0116                     	;# 
   655  0117                     	;# 
   656  011D                     	;# 
   657  018C                     	;# 
   658  018D                     	;# 
   659  018E                     	;# 
   660  018F                     	;# 
   661  0190                     	;# 
   662  0191                     	;# 
   663  0191                     	;# 
   664  0192                     	;# 
   665  0193                     	;# 
   666  0193                     	;# 
   667  0194                     	;# 
   668  0195                     	;# 
   669  0196                     	;# 
   670  0199                     	;# 
   671  019A                     	;# 
   672  019B                     	;# 
   673  019B                     	;# 
   674  019B                     	;# 
   675  019B                     	;# 
   676  019C                     	;# 
   677  019C                     	;# 
   678  019D                     	;# 
   679  019E                     	;# 
   680  019F                     	;# 
   681  020D                     	;# 
   682  0210                     	;# 
   683  0211                     	;# 
   684  0211                     	;# 
   685  0212                     	;# 
   686  0212                     	;# 
   687  0213                     	;# 
   688  0213                     	;# 
   689  0214                     	;# 
   690  0214                     	;# 
   691  0215                     	;# 
   692  0215                     	;# 
   693  0215                     	;# 
   694  0216                     	;# 
   695  0216                     	;# 
   696  0217                     	;# 
   697  0217                     	;# 
   698  0291                     	;# 
   699  0291                     	;# 
   700  0292                     	;# 
   701  0293                     	;# 
   702  0298                     	;# 
   703  0298                     	;# 
   704  0299                     	;# 
   705  029A                     	;# 
   706  0394                     	;# 
   707  0395                     	;# 
   708  0396                     	;# 
   709  0FE4                     	;# 
   710  0FE5                     	;# 
   711  0FE6                     	;# 
   712  0FE7                     	;# 
   713  0FE8                     	;# 
   714  0FE9                     	;# 
   715  0FEA                     	;# 
   716  0FEB                     	;# 
   717  0FED                     	;# 
   718  0FEE                     	;# 
   719  0FEF                     	;# 
   720  0000                     	;# 
   721  0001                     	;# 
   722  0002                     	;# 
   723  0003                     	;# 
   724  0004                     	;# 
   725  0005                     	;# 
   726  0006                     	;# 
   727  0007                     	;# 
   728  0008                     	;# 
   729  0009                     	;# 
   730  000A                     	;# 
   731  000B                     	;# 
   732  000C                     	;# 
   733  000D                     	;# 
   734  000E                     	;# 
   735  000F                     	;# 
   736  0010                     	;# 
   737  0011                     	;# 
   738  0012                     	;# 
   739  0015                     	;# 
   740  0016                     	;# 
   741  0016                     	;# 
   742  0017                     	;# 
   743  0018                     	;# 
   744  0019                     	;# 
   745  001A                     	;# 
   746  001B                     	;# 
   747  001C                     	;# 
   748  008C                     	;# 
   749  008D                     	;# 
   750  008E                     	;# 
   751  008F                     	;# 
   752  0090                     	;# 
   753  0091                     	;# 
   754  0092                     	;# 
   755  0095                     	;# 
   756  0096                     	;# 
   757  0097                     	;# 
   758  0099                     	;# 
   759  009A                     	;# 
   760  009B                     	;# 
   761  009B                     	;# 
   762  009C                     	;# 
   763  009D                     	;# 
   764  009E                     	;# 
   765  010C                     	;# 
   766  010D                     	;# 
   767  010E                     	;# 
   768  010F                     	;# 
   769  0110                     	;# 
   770  0116                     	;# 
   771  0117                     	;# 
   772  011D                     	;# 
   773  018C                     	;# 
   774  018D                     	;# 
   775  018E                     	;# 
   776  018F                     	;# 
   777  0190                     	;# 
   778  0191                     	;# 
   779  0191                     	;# 
   780  0192                     	;# 
   781  0193                     	;# 
   782  0193                     	;# 
   783  0194                     	;# 
   784  0195                     	;# 
   785  0196                     	;# 
   786  0199                     	;# 
   787  019A                     	;# 
   788  019B                     	;# 
   789  019B                     	;# 
   790  019B                     	;# 
   791  019B                     	;# 
   792  019C                     	;# 
   793  019C                     	;# 
   794  019D                     	;# 
   795  019E                     	;# 
   796  019F                     	;# 
   797  020D                     	;# 
   798  0210                     	;# 
   799  0211                     	;# 
   800  0211                     	;# 
   801  0212                     	;# 
   802  0212                     	;# 
   803  0213                     	;# 
   804  0213                     	;# 
   805  0214                     	;# 
   806  0214                     	;# 
   807  0215                     	;# 
   808  0215                     	;# 
   809  0215                     	;# 
   810  0216                     	;# 
   811  0216                     	;# 
   812  0217                     	;# 
   813  0217                     	;# 
   814  0291                     	;# 
   815  0291                     	;# 
   816  0292                     	;# 
   817  0293                     	;# 
   818  0298                     	;# 
   819  0298                     	;# 
   820  0299                     	;# 
   821  029A                     	;# 
   822  0394                     	;# 
   823  0395                     	;# 
   824  0396                     	;# 
   825  0FE4                     	;# 
   826  0FE5                     	;# 
   827  0FE6                     	;# 
   828  0FE7                     	;# 
   829  0FE8                     	;# 
   830  0FE9                     	;# 
   831  0FEA                     	;# 
   832  0FEB                     	;# 
   833  0FED                     	;# 
   834  0FEE                     	;# 
   835  0FEF                     	;# 
   836  0000                     	;# 
   837  0001                     	;# 
   838  0002                     	;# 
   839  0003                     	;# 
   840  0004                     	;# 
   841  0005                     	;# 
   842  0006                     	;# 
   843  0007                     	;# 
   844  0008                     	;# 
   845  0009                     	;# 
   846  000A                     	;# 
   847  000B                     	;# 
   848  000C                     	;# 
   849  000D                     	;# 
   850  000E                     	;# 
   851  000F                     	;# 
   852  0010                     	;# 
   853  0011                     	;# 
   854  0012                     	;# 
   855  0015                     	;# 
   856  0016                     	;# 
   857  0016                     	;# 
   858  0017                     	;# 
   859  0018                     	;# 
   860  0019                     	;# 
   861  001A                     	;# 
   862  001B                     	;# 
   863  001C                     	;# 
   864  008C                     	;# 
   865  008D                     	;# 
   866  008E                     	;# 
   867  008F                     	;# 
   868  0090                     	;# 
   869  0091                     	;# 
   870  0092                     	;# 
   871  0095                     	;# 
   872  0096                     	;# 
   873  0097                     	;# 
   874  0099                     	;# 
   875  009A                     	;# 
   876  009B                     	;# 
   877  009B                     	;# 
   878  009C                     	;# 
   879  009D                     	;# 
   880  009E                     	;# 
   881  010C                     	;# 
   882  010D                     	;# 
   883  010E                     	;# 
   884  010F                     	;# 
   885  0110                     	;# 
   886  0116                     	;# 
   887  0117                     	;# 
   888  011D                     	;# 
   889  018C                     	;# 
   890  018D                     	;# 
   891  018E                     	;# 
   892  018F                     	;# 
   893  0190                     	;# 
   894  0191                     	;# 
   895  0191                     	;# 
   896  0192                     	;# 
   897  0193                     	;# 
   898  0193                     	;# 
   899  0194                     	;# 
   900  0195                     	;# 
   901  0196                     	;# 
   902  0199                     	;# 
   903  019A                     	;# 
   904  019B                     	;# 
   905  019B                     	;# 
   906  019B                     	;# 
   907  019B                     	;# 
   908  019C                     	;# 
   909  019C                     	;# 
   910  019D                     	;# 
   911  019E                     	;# 
   912  019F                     	;# 
   913  020D                     	;# 
   914  0210                     	;# 
   915  0211                     	;# 
   916  0211                     	;# 
   917  0212                     	;# 
   918  0212                     	;# 
   919  0213                     	;# 
   920  0213                     	;# 
   921  0214                     	;# 
   922  0214                     	;# 
   923  0215                     	;# 
   924  0215                     	;# 
   925  0215                     	;# 
   926  0216                     	;# 
   927  0216                     	;# 
   928  0217                     	;# 
   929  0217                     	;# 
   930  0291                     	;# 
   931  0291                     	;# 
   932  0292                     	;# 
   933  0293                     	;# 
   934  0298                     	;# 
   935  0298                     	;# 
   936  0299                     	;# 
   937  029A                     	;# 
   938  0394                     	;# 
   939  0395                     	;# 
   940  0396                     	;# 
   941  0FE4                     	;# 
   942  0FE5                     	;# 
   943  0FE6                     	;# 
   944  0FE7                     	;# 
   945  0FE8                     	;# 
   946  0FE9                     	;# 
   947  0FEA                     	;# 
   948  0FEB                     	;# 
   949  0FED                     	;# 
   950  0FEE                     	;# 
   951  0FEF                     	;# 
   952  010F                     	;# 
   953  0000                     	;# 
   954  0001                     	;# 
   955  0002                     	;# 
   956  0003                     	;# 
   957  0004                     	;# 
   958  0005                     	;# 
   959  0006                     	;# 
   960  0007                     	;# 
   961  0008                     	;# 
   962  0009                     	;# 
   963  000A                     	;# 
   964  000B                     	;# 
   965  000C                     	;# 
   966  000D                     	;# 
   967  000E                     	;# 
   968  000F                     	;# 
   969  0010                     	;# 
   970  0011                     	;# 
   971  0012                     	;# 
   972  0015                     	;# 
   973  0016                     	;# 
   974  0016                     	;# 
   975  0017                     	;# 
   976  0018                     	;# 
   977  0019                     	;# 
   978  001A                     	;# 
   979  001B                     	;# 
   980  001C                     	;# 
   981  008C                     	;# 
   982  008D                     	;# 
   983  008E                     	;# 
   984  008F                     	;# 
   985  0090                     	;# 
   986  0091                     	;# 
   987  0092                     	;# 
   988  0095                     	;# 
   989  0096                     	;# 
   990  0097                     	;# 
   991  0099                     	;# 
   992  009A                     	;# 
   993  009B                     	;# 
   994  009B                     	;# 
   995  009C                     	;# 
   996  009D                     	;# 
   997  009E                     	;# 
   998  010C                     	;# 
   999  010D                     	;# 
  1000  010E                     	;# 
  1001  010F                     	;# 
  1002  0110                     	;# 
  1003  0116                     	;# 
  1004  0117                     	;# 
  1005  011D                     	;# 
  1006  018C                     	;# 
  1007  018D                     	;# 
  1008  018E                     	;# 
  1009  018F                     	;# 
  1010  0190                     	;# 
  1011  0191                     	;# 
  1012  0191                     	;# 
  1013  0192                     	;# 
  1014  0193                     	;# 
  1015  0193                     	;# 
  1016  0194                     	;# 
  1017  0195                     	;# 
  1018  0196                     	;# 
  1019  0199                     	;# 
  1020  019A                     	;# 
  1021  019B                     	;# 
  1022  019B                     	;# 
  1023  019B                     	;# 
  1024  019B                     	;# 
  1025  019C                     	;# 
  1026  019C                     	;# 
  1027  019D                     	;# 
  1028  019E                     	;# 
  1029  019F                     	;# 
  1030  020D                     	;# 
  1031  0210                     	;# 
  1032  0211                     	;# 
  1033  0211                     	;# 
  1034  0212                     	;# 
  1035  0212                     	;# 
  1036  0213                     	;# 
  1037  0213                     	;# 
  1038  0214                     	;# 
  1039  0214                     	;# 
  1040  0215                     	;# 
  1041  0215                     	;# 
  1042  0215                     	;# 
  1043  0216                     	;# 
  1044  0216                     	;# 
  1045  0217                     	;# 
  1046  0217                     	;# 
  1047  0291                     	;# 
  1048  0291                     	;# 
  1049  0292                     	;# 
  1050  0293                     	;# 
  1051  0298                     	;# 
  1052  0298                     	;# 
  1053  0299                     	;# 
  1054  029A                     	;# 
  1055  0394                     	;# 
  1056  0395                     	;# 
  1057  0396                     	;# 
  1058  0FE4                     	;# 
  1059  0FE5                     	;# 
  1060  0FE6                     	;# 
  1061  0FE7                     	;# 
  1062  0FE8                     	;# 
  1063  0FE9                     	;# 
  1064  0FEA                     	;# 
  1065  0FEB                     	;# 
  1066  0FED                     	;# 
  1067  0FEE                     	;# 
  1068  0FEF                     	;# 
  1069  010F                     	;# 
  1070  0000                     	;# 
  1071  0001                     	;# 
  1072  0002                     	;# 
  1073  0003                     	;# 
  1074  0004                     	;# 
  1075  0005                     	;# 
  1076  0006                     	;# 
  1077  0007                     	;# 
  1078  0008                     	;# 
  1079  0009                     	;# 
  1080  000A                     	;# 
  1081  000B                     	;# 
  1082  000C                     	;# 
  1083  000D                     	;# 
  1084  000E                     	;# 
  1085  000F                     	;# 
  1086  0010                     	;# 
  1087  0011                     	;# 
  1088  0012                     	;# 
  1089  0015                     	;# 
  1090  0016                     	;# 
  1091  0016                     	;# 
  1092  0017                     	;# 
  1093  0018                     	;# 
  1094  0019                     	;# 
  1095  001A                     	;# 
  1096  001B                     	;# 
  1097  001C                     	;# 
  1098  008C                     	;# 
  1099  008D                     	;# 
  1100  008E                     	;# 
  1101  008F                     	;# 
  1102  0090                     	;# 
  1103  0091                     	;# 
  1104  0092                     	;# 
  1105  0095                     	;# 
  1106  0096                     	;# 
  1107  0097                     	;# 
  1108  0099                     	;# 
  1109  009A                     	;# 
  1110  009B                     	;# 
  1111  009B                     	;# 
  1112  009C                     	;# 
  1113  009D                     	;# 
  1114  009E                     	;# 
  1115  010C                     	;# 
  1116  010D                     	;# 
  1117  010E                     	;# 
  1118  010F                     	;# 
  1119  0110                     	;# 
  1120  0116                     	;# 
  1121  0117                     	;# 
  1122  011D                     	;# 
  1123  018C                     	;# 
  1124  018D                     	;# 
  1125  018E                     	;# 
  1126  018F                     	;# 
  1127  0190                     	;# 
  1128  0191                     	;# 
  1129  0191                     	;# 
  1130  0192                     	;# 
  1131  0193                     	;# 
  1132  0193                     	;# 
  1133  0194                     	;# 
  1134  0195                     	;# 
  1135  0196                     	;# 
  1136  0199                     	;# 
  1137  019A                     	;# 
  1138  019B                     	;# 
  1139  019B                     	;# 
  1140  019B                     	;# 
  1141  019B                     	;# 
  1142  019C                     	;# 
  1143  019C                     	;# 
  1144  019D                     	;# 
  1145  019E                     	;# 
  1146  019F                     	;# 
  1147  020D                     	;# 
  1148  0210                     	;# 
  1149  0211                     	;# 
  1150  0211                     	;# 
  1151  0212                     	;# 
  1152  0212                     	;# 
  1153  0213                     	;# 
  1154  0213                     	;# 
  1155  0214                     	;# 
  1156  0214                     	;# 
  1157  0215                     	;# 
  1158  0215                     	;# 
  1159  0215                     	;# 
  1160  0216                     	;# 
  1161  0216                     	;# 
  1162  0217                     	;# 
  1163  0217                     	;# 
  1164  0291                     	;# 
  1165  0291                     	;# 
  1166  0292                     	;# 
  1167  0293                     	;# 
  1168  0298                     	;# 
  1169  0298                     	;# 
  1170  0299                     	;# 
  1171  029A                     	;# 
  1172  0394                     	;# 
  1173  0395                     	;# 
  1174  0396                     	;# 
  1175  0FE4                     	;# 
  1176  0FE5                     	;# 
  1177  0FE6                     	;# 
  1178  0FE7                     	;# 
  1179  0FE8                     	;# 
  1180  0FE9                     	;# 
  1181  0FEA                     	;# 
  1182  0FEB                     	;# 
  1183  0FED                     	;# 
  1184  0FEE                     	;# 
  1185  0FEF                     	;# 
  1186  010F                     	;# 
  1187                           
  1188                           	psect	stringtext1
  1189  1000                     __pstringtext1:	
  1190  1000                     _expected_user_ID:	
  1191  1000  344E               	retlw	78
  1192  1001  3400               	retlw	0
  1193  1002  3449               	retlw	73
  1194  1003  3400               	retlw	0
  1195  1004  3458               	retlw	88
  1196  1005  3400               	retlw	0
  1197  1006  3404               	retlw	4
  1198  1007  3400               	retlw	0
  1199  1008                     __end_of_expected_user_ID:	
  1200                           
  1201                           	psect	stringtext2
  1202  1008                     __pstringtext2:	
  1203  1008                     _extended_calibration:	
  1204  1008  34AD               	retlw	173
  1205  1009  3480               	retlw	128
  1206  100A  343F               	retlw	63
  1207  100B                     __end_of_extended_calibration:	
  1208                           
  1209                           	psect	stringtext3
  1210  100B                     __pstringtext3:	
  1211  100B                     _expected_device_ID:	
  1212  100B  34BF               	retlw	191
  1213  100C  3400               	retlw	0
  1214  100D                     __end_of_expected_device_ID:	
  1215  000D                     _PORTBbits	set	13
  1216  000E                     _PORTCbits	set	14
  1217  000C                     _PORTAbits	set	12
  1218  001C                     _T2CONbits	set	28
  1219  001A                     _TMR2	set	26
  1220  001B                     _PR2	set	27
  1221  001C                     _T2CON	set	28
  1222  0019                     _T1GCONbits	set	25
  1223  0018                     _T1CONbits	set	24
  1224  0011                     _PIR1bits	set	17
  1225  0016                     _TMR1L	set	22
  1226  0017                     _TMR1H	set	23
  1227  0019                     _T1GCON	set	25
  1228  0018                     _T1CON	set	24
  1229  000B                     _INTCONbits	set	11
  1230  0015                     _TMR0	set	21
  1231  00C2                     _nT1SYNC	set	194
  1232  0099                     _OSCCONbits	set	153
  1233  008C                     _TRISAbits	set	140
  1234  008D                     _TRISBbits	set	141
  1235  008E                     _TRISCbits	set	142
  1236  008F                     _TRISDbits	set	143
  1237  0090                     _TRISEbits	set	144
  1238  0095                     _OPTION_REGbits	set	149
  1239  008F                     _TRISD	set	143
  1240  008E                     _TRISC	set	142
  1241  008D                     _TRISB	set	141
  1242  008C                     _TRISA	set	140
  1243  0090                     _TRISE	set	144
  1244  0097                     _WDTCON	set	151
  1245  0099                     _OSCCON	set	153
  1246  0091                     _PIE1bits	set	145
  1247  0095                     _OPTION_REG	set	149
  1248  04D5                     _OSTS	set	1237
  1249  04D4                     _HFIOFR	set	1236
  1250  04D1                     _LFIOFR	set	1233
  1251  04AD                     _TMR0CS	set	1197
  1252  010F                     _ParallelPort	set	271
  1253  010F                     _LATDbits	set	271
  1254  010E                     _LATCbits	set	270
  1255  010C                     _LATAbits	set	268
  1256  0110                     _LATEbits	set	272
  1257  011D                     _APFCON	set	285
  1258  010E                     _LATC	set	270
  1259  010D                     _LATB	set	269
  1260  010C                     _LATA	set	268
  1261  010F                     _LATD	set	271
  1262  0110                     _LATE	set	272
  1263  0193                     _PMDATL	set	403
  1264  0194                     _PMDATH	set	404
  1265  0191                     _PMADRL	set	401
  1266  0192                     _PMADRH	set	402
  1267  018C                     _ANSELA	set	396
  1268  0190                     _ANSELE	set	400
  1269  018F                     _ANSELD	set	399
  1270  018D                     _ANSELB	set	397
  1271  018E                     _ANSELC	set	398
  1272  0CA8                     _RD	set	3240
  1273  0CAE                     _CFGS	set	3246
  1274  020D                     _WPUB	set	525
  1275  0210                     _WPUE	set	528
  1276  0394                     _IOCBPbits	set	916
  1277  0395                     _IOCBNbits	set	917
  1278  0396                     _IOCBFbits	set	918
  1279                           
  1280                           ; #config settings
  1281  004E                     
  1282                           	psect	cinit
  1283  0034                     start_initialization:	
  1284  0034                     __initialization:	
  1285                           
  1286                           ; Clear objects allocated to BITBANK0
  1287  0034  0020               	movlb	0	; select bank0
  1288  0035  01EE               	clrf	(__pbitbssBANK0/(0+8))& (0+127)
  1289                           
  1290                           ; Clear objects allocated to BANK0
  1291  0036  3057               	movlw	low __pbssBANK0
  1292  0037  0084               	movwf	4
  1293  0038  3000               	movlw	high __pbssBANK0
  1294  0039  0085               	movwf	5
  1295  003A  3017               	movlw	23
  1296  003B  318B  232B  3180   	fcall	clear_ram0
  1297                           
  1298                           ; Clear objects allocated to BANK1
  1299  003E  30A0               	movlw	low __pbssBANK1
  1300  003F  0084               	movwf	4
  1301  0040  3000               	movlw	high __pbssBANK1
  1302  0041  0085               	movwf	5
  1303  0042  3027               	movlw	39
  1304  0043  318B  232B         	fcall	clear_ram0
  1305  0045                     end_of_initialization:	
  1306                           ;End of C runtime variable initialization code
  1307                           
  1308  0045                     __end_of__initialization:	
  1309  0045  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  1310  0046  0020               	movlb	0
  1311  0047  3187  2F7F         	ljmp	_main	;jump to C main() function
  1312                           
  1313                           	psect	bitbssBANK0
  1314  0370                     __pbitbssBANK0:	
  1315  0370                     _asleep_flag:	
  1316  0370                     	ds	1
  1317                           
  1318                           	psect	bssBANK0
  1319  0057                     __pbssBANK0:	
  1320  0057                     _sleepy_seconds:	
  1321  0057                     	ds	3
  1322  005A                     _minutes_LSD:	
  1323  005A                     	ds	2
  1324  005C                     _seconds_MSD:	
  1325  005C                     	ds	2
  1326  005E                     _seconds_LSD:	
  1327  005E                     	ds	2
  1328  0060                     _display_hours:	
  1329  0060                     	ds	2
  1330  0062                     _hours:	
  1331  0062                     	ds	2
  1332  0064                     _minutes:	
  1333  0064                     	ds	2
  1334  0066                     _seconds:	
  1335  0066                     	ds	2
  1336  0068                     _mux_digit_compensated:	
  1337  0068                     	ds	2
  1338  006A                     _mux_digit:	
  1339  006A                     	ds	2
  1340  006C                     _IOCBF4_InterruptHandler:	
  1341  006C                     	ds	2
  1342                           
  1343                           	psect	bssBANK1
  1344  00A0                     __pbssBANK1:	
  1345  00A0                     _mux_numeral:	
  1346  00A0                     	ds	12
  1347  00AC                     _errno:	
  1348  00AC                     	ds	2
  1349  00AE                     _hours_MSD:	
  1350  00AE                     	ds	2
  1351  00B0                     _hours_LSD:	
  1352  00B0                     	ds	2
  1353  00B2                     _minutes_MSD:	
  1354  00B2                     	ds	2
  1355  00B4                     _IOCBF5_InterruptHandler:	
  1356  00B4                     	ds	2
  1357  00B6                     _IOCBF3_InterruptHandler:	
  1358  00B6                     	ds	2
  1359  00B8                     _IOCBF2_InterruptHandler:	
  1360  00B8                     	ds	2
  1361  00BA                     _IOCBF1_InterruptHandler:	
  1362  00BA                     	ds	2
  1363  00BC                     _IOCBF0_InterruptHandler:	
  1364  00BC                     	ds	2
  1365  00BE                     _TMR2_InterruptHandler:	
  1366  00BE                     	ds	2
  1367  00C0                     _TMR1_InterruptHandler:	
  1368  00C0                     	ds	2
  1369  00C2                     _timer1ReloadVal:	
  1370  00C2                     	ds	2
  1371  00C4                     _TMR0_InterruptHandler:	
  1372  00C4                     	ds	2
  1373  00C6                     _timer0ReloadVal:	
  1374  00C6                     	ds	1
  1375                           
  1376                           	psect	clrtext
  1377  0B2B                     clear_ram0:	
  1378                           ;	Called with FSR0 containing the base address, and
  1379                           ;	WREG with the size to clear
  1380                           
  1381  0B2B  0064               	clrwdt	;clear the watchdog before getting into this loop
  1382  0B2C                     clrloop0:	
  1383  0B2C  0180               	clrf	0	;clear RAM location pointed to by FSR
  1384  0B2D  3101               	addfsr 0,1
  1385  0B2E  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  1386  0B2F  2B2C               	goto	clrloop0	;have we reached the end yet?
  1387  0B30  3400               	retlw	0	;all done for this memory range, return
  1388                           
  1389                           	psect	cstackBANK1
  1390  00C7                     __pcstackBANK1:	
  1391  00C7                     ?_TMR0_SetInterruptHandler:	
  1392  00C7                     ?_TMR1_SetInterruptHandler:	
  1393                           ; 1 bytes @ 0x0
  1394                           
  1395  00C7                     ??_TMR1_StartTimer:	
  1396                           ; 1 bytes @ 0x0
  1397                           
  1398  00C7                     ?_TMR2_SetInterruptHandler:	
  1399                           ; 1 bytes @ 0x0
  1400                           
  1401  00C7                     ??_TMR2_StartTimer:	
  1402                           ; 1 bytes @ 0x0
  1403                           
  1404  00C7                     ??_OSCILLATOR_Initialize:	
  1405                           ; 1 bytes @ 0x0
  1406                           
  1407  00C7                     ??_WDT_Initialize:	
  1408                           ; 1 bytes @ 0x0
  1409                           
  1410  00C7                     ?_IOCBF0_SetInterruptHandler:	
  1411                           ; 1 bytes @ 0x0
  1412                           
  1413  00C7                     ?_IOCBF1_SetInterruptHandler:	
  1414                           ; 1 bytes @ 0x0
  1415                           
  1416  00C7                     ?_IOCBF2_SetInterruptHandler:	
  1417                           ; 1 bytes @ 0x0
  1418                           
  1419  00C7                     ?_IOCBF3_SetInterruptHandler:	
  1420                           ; 1 bytes @ 0x0
  1421                           
  1422  00C7                     ?_IOCBF4_SetInterruptHandler:	
  1423                           ; 1 bytes @ 0x0
  1424                           
  1425  00C7                     ?_IOCBF5_SetInterruptHandler:	
  1426                           ; 1 bytes @ 0x0
  1427                           
  1428  00C7                     ??_checkIDs:	
  1429                           ; 1 bytes @ 0x0
  1430                           
  1431  00C7                     ??_TMR2_StopTimer:	
  1432                           ; 1 bytes @ 0x0
  1433                           
  1434  00C7                     TMR0_SetInterruptHandler@InterruptHandler:	
  1435                           ; 1 bytes @ 0x0
  1436                           
  1437  00C7                     TMR1_SetInterruptHandler@InterruptHandler:	
  1438                           ; 2 bytes @ 0x0
  1439                           
  1440  00C7                     TMR2_SetInterruptHandler@InterruptHandler:	
  1441                           ; 2 bytes @ 0x0
  1442                           
  1443  00C7                     IOCBF0_SetInterruptHandler@InterruptHandler:	
  1444                           ; 2 bytes @ 0x0
  1445                           
  1446  00C7                     IOCBF1_SetInterruptHandler@InterruptHandler:	
  1447                           ; 2 bytes @ 0x0
  1448                           
  1449  00C7                     IOCBF2_SetInterruptHandler@InterruptHandler:	
  1450                           ; 2 bytes @ 0x0
  1451                           
  1452  00C7                     IOCBF3_SetInterruptHandler@InterruptHandler:	
  1453                           ; 2 bytes @ 0x0
  1454                           
  1455  00C7                     IOCBF4_SetInterruptHandler@InterruptHandler:	
  1456                           ; 2 bytes @ 0x0
  1457                           
  1458  00C7                     IOCBF5_SetInterruptHandler@InterruptHandler:	
  1459                           ; 2 bytes @ 0x0
  1460                           
  1461                           
  1462                           ; 2 bytes @ 0x0
  1463  00C7                     	ds	2
  1464  00C9                     ??_TMR0_SetInterruptHandler:	
  1465  00C9                     ??_TMR1_SetInterruptHandler:	
  1466                           ; 1 bytes @ 0x2
  1467                           
  1468  00C9                     ??_TMR2_SetInterruptHandler:	
  1469                           ; 1 bytes @ 0x2
  1470                           
  1471  00C9                     ??_PIN_MANAGER_Initialize:	
  1472                           ; 1 bytes @ 0x2
  1473                           
  1474  00C9                     ??_IOCBF0_SetInterruptHandler:	
  1475                           ; 1 bytes @ 0x2
  1476                           
  1477  00C9                     ??_IOCBF1_SetInterruptHandler:	
  1478                           ; 1 bytes @ 0x2
  1479                           
  1480  00C9                     ??_IOCBF2_SetInterruptHandler:	
  1481                           ; 1 bytes @ 0x2
  1482                           
  1483  00C9                     ??_IOCBF3_SetInterruptHandler:	
  1484                           ; 1 bytes @ 0x2
  1485                           
  1486  00C9                     ??_IOCBF4_SetInterruptHandler:	
  1487                           ; 1 bytes @ 0x2
  1488                           
  1489  00C9                     ??_IOCBF5_SetInterruptHandler:	
  1490                           ; 1 bytes @ 0x2
  1491                           
  1492  00C9                     ??_TMR0_Initialize:	
  1493                           ; 1 bytes @ 0x2
  1494                           
  1495  00C9                     ??_TMR1_Initialize:	
  1496                           ; 1 bytes @ 0x2
  1497                           
  1498  00C9                     ??_TMR2_Initialize:	
  1499                           ; 1 bytes @ 0x2
  1500                           
  1501  00C9                     checkIDs@user_ID_0:	
  1502                           ; 1 bytes @ 0x2
  1503                           
  1504                           
  1505                           ; 2 bytes @ 0x2
  1506  00C9                     	ds	1
  1507  00CA                     ??_SYSTEM_Initialize:	
  1508                           
  1509                           ; 1 bytes @ 0x3
  1510  00CA                     	ds	1
  1511  00CB                     checkIDs@user_ID_1:	
  1512                           
  1513                           ; 2 bytes @ 0x4
  1514  00CB                     	ds	2
  1515  00CD                     checkIDs@user_ID_2:	
  1516                           
  1517                           ; 2 bytes @ 0x6
  1518  00CD                     	ds	2
  1519  00CF                     checkIDs@user_ID_3:	
  1520                           
  1521                           ; 2 bytes @ 0x8
  1522  00CF                     	ds	2
  1523  00D1                     checkIDs@device_ID:	
  1524                           
  1525                           ; 2 bytes @ 0xA
  1526  00D1                     	ds	2
  1527  00D3                     ??_startup:	
  1528  00D3                     ??_main:	
  1529                           ; 1 bytes @ 0xC
  1530                           
  1531                           
  1532                           ; 1 bytes @ 0xC
  1533  00D3                     	ds	2
  1534                           
  1535                           	psect	cstackCOMMON
  1536  0070                     __pcstackCOMMON:	
  1537  0070                     ?_TMR0_DefaultInterruptHandler:	
  1538  0070                     ??_TMR0_DefaultInterruptHandler:	
  1539                           ; 1 bytes @ 0x0
  1540                           
  1541  0070                     ?_TMR1_DefaultInterruptHandler:	
  1542                           ; 1 bytes @ 0x0
  1543                           
  1544  0070                     ??_TMR1_DefaultInterruptHandler:	
  1545                           ; 1 bytes @ 0x0
  1546                           
  1547  0070                     ?_TMR1_StartTimer:	
  1548                           ; 1 bytes @ 0x0
  1549                           
  1550  0070                     ?_TMR2_DefaultInterruptHandler:	
  1551                           ; 1 bytes @ 0x0
  1552                           
  1553  0070                     ??_TMR2_DefaultInterruptHandler:	
  1554                           ; 1 bytes @ 0x0
  1555                           
  1556  0070                     ?_TMR2_StartTimer:	
  1557                           ; 1 bytes @ 0x0
  1558                           
  1559  0070                     ?_PIN_MANAGER_IOC:	
  1560                           ; 1 bytes @ 0x0
  1561                           
  1562  0070                     ?_PIN_MANAGER_Initialize:	
  1563                           ; 1 bytes @ 0x0
  1564                           
  1565  0070                     ?_OSCILLATOR_Initialize:	
  1566                           ; 1 bytes @ 0x0
  1567                           
  1568  0070                     ?_WDT_Initialize:	
  1569                           ; 1 bytes @ 0x0
  1570                           
  1571  0070                     ?_IOCBF0_DefaultInterruptHandler:	
  1572                           ; 1 bytes @ 0x0
  1573                           
  1574  0070                     ??_IOCBF0_DefaultInterruptHandler:	
  1575                           ; 1 bytes @ 0x0
  1576                           
  1577  0070                     ?_IOCBF1_DefaultInterruptHandler:	
  1578                           ; 1 bytes @ 0x0
  1579                           
  1580  0070                     ??_IOCBF1_DefaultInterruptHandler:	
  1581                           ; 1 bytes @ 0x0
  1582                           
  1583  0070                     ?_IOCBF2_DefaultInterruptHandler:	
  1584                           ; 1 bytes @ 0x0
  1585                           
  1586  0070                     ??_IOCBF2_DefaultInterruptHandler:	
  1587                           ; 1 bytes @ 0x0
  1588                           
  1589  0070                     ?_IOCBF3_DefaultInterruptHandler:	
  1590                           ; 1 bytes @ 0x0
  1591                           
  1592  0070                     ??_IOCBF3_DefaultInterruptHandler:	
  1593                           ; 1 bytes @ 0x0
  1594                           
  1595  0070                     ?_IOCBF4_DefaultInterruptHandler:	
  1596                           ; 1 bytes @ 0x0
  1597                           
  1598  0070                     ??_IOCBF4_DefaultInterruptHandler:	
  1599                           ; 1 bytes @ 0x0
  1600                           
  1601  0070                     ?_IOCBF5_DefaultInterruptHandler:	
  1602                           ; 1 bytes @ 0x0
  1603                           
  1604  0070                     ??_IOCBF5_DefaultInterruptHandler:	
  1605                           ; 1 bytes @ 0x0
  1606                           
  1607  0070                     ?_IOCBF0_ISR:	
  1608                           ; 1 bytes @ 0x0
  1609                           
  1610  0070                     ?_IOCBF1_ISR:	
  1611                           ; 1 bytes @ 0x0
  1612                           
  1613  0070                     ?_IOCBF2_ISR:	
  1614                           ; 1 bytes @ 0x0
  1615                           
  1616  0070                     ?_IOCBF3_ISR:	
  1617                           ; 1 bytes @ 0x0
  1618                           
  1619  0070                     ??_IOCBF3_ISR:	
  1620                           ; 1 bytes @ 0x0
  1621                           
  1622  0070                     ?_IOCBF4_ISR:	
  1623                           ; 1 bytes @ 0x0
  1624                           
  1625  0070                     ?_IOCBF5_ISR:	
  1626                           ; 1 bytes @ 0x0
  1627                           
  1628  0070                     ??_IOCBF5_ISR:	
  1629                           ; 1 bytes @ 0x0
  1630                           
  1631  0070                     ?_startup:	
  1632                           ; 1 bytes @ 0x0
  1633                           
  1634  0070                     ?_checkIDs:	
  1635                           ; 1 bytes @ 0x0
  1636                           
  1637  0070                     ?_muxISR:	
  1638                           ; 1 bytes @ 0x0
  1639                           
  1640  0070                     ?_tickISR:	
  1641                           ; 1 bytes @ 0x0
  1642                           
  1643  0070                     ?_blankISR:	
  1644                           ; 1 bytes @ 0x0
  1645                           
  1646  0070                     ??_blankISR:	
  1647                           ; 1 bytes @ 0x0
  1648                           
  1649  0070                     ?_setSecondsISR:	
  1650                           ; 1 bytes @ 0x0
  1651                           
  1652  0070                     ?_setMinutesISR:	
  1653                           ; 1 bytes @ 0x0
  1654                           
  1655  0070                     ?_setHoursISR:	
  1656                           ; 1 bytes @ 0x0
  1657                           
  1658  0070                     ?_displayToggleISR:	
  1659                           ; 1 bytes @ 0x0
  1660                           
  1661  0070                     ??_displayToggleISR:	
  1662                           ; 1 bytes @ 0x0
  1663                           
  1664  0070                     ?_powerFailISR:	
  1665                           ; 1 bytes @ 0x0
  1666                           
  1667  0070                     ?_updateParallelPort:	
  1668                           ; 1 bytes @ 0x0
  1669                           
  1670  0070                     ??_updateParallelPort:	
  1671                           ; 1 bytes @ 0x0
  1672                           
  1673  0070                     ?_timeParse:	
  1674                           ; 1 bytes @ 0x0
  1675                           
  1676  0070                     ??_timeParse:	
  1677                           ; 1 bytes @ 0x0
  1678                           
  1679  0070                     ?_twentyFourParse:	
  1680                           ; 1 bytes @ 0x0
  1681                           
  1682  0070                     ??_twentyFourParse:	
  1683                           ; 1 bytes @ 0x0
  1684                           
  1685  0070                     ?_isolateDigits:	
  1686                           ; 1 bytes @ 0x0
  1687                           
  1688  0070                     ?_updateDisplay:	
  1689                           ; 1 bytes @ 0x0
  1690                           
  1691  0070                     ??_updateDisplay:	
  1692                           ; 1 bytes @ 0x0
  1693                           
  1694  0070                     ?_groundCathode:	
  1695                           ; 1 bytes @ 0x0
  1696                           
  1697  0070                     ??_groundCathode:	
  1698                           ; 1 bytes @ 0x0
  1699                           
  1700  0070                     ?_shutdown:	
  1701                           ; 1 bytes @ 0x0
  1702                           
  1703  0070                     ?_wakeup:	
  1704                           ; 1 bytes @ 0x0
  1705                           
  1706  0070                     ?_sleepyTickISR:	
  1707                           ; 1 bytes @ 0x0
  1708                           
  1709  0070                     ??_sleepyTickISR:	
  1710                           ; 1 bytes @ 0x0
  1711                           
  1712  0070                     ?_restoreTime:	
  1713                           ; 1 bytes @ 0x0
  1714                           
  1715  0070                     ?_TMR0_Initialize:	
  1716                           ; 1 bytes @ 0x0
  1717                           
  1718  0070                     ?_TMR0_ISR:	
  1719                           ; 1 bytes @ 0x0
  1720                           
  1721  0070                     ?_TMR1_Initialize:	
  1722                           ; 1 bytes @ 0x0
  1723                           
  1724  0070                     ?_TMR1_StopTimer:	
  1725                           ; 1 bytes @ 0x0
  1726                           
  1727  0070                     ??_TMR1_StopTimer:	
  1728                           ; 1 bytes @ 0x0
  1729                           
  1730  0070                     ?_TMR1_ISR:	
  1731                           ; 1 bytes @ 0x0
  1732                           
  1733  0070                     ?_TMR2_Initialize:	
  1734                           ; 1 bytes @ 0x0
  1735                           
  1736  0070                     ?_TMR2_StopTimer:	
  1737                           ; 1 bytes @ 0x0
  1738                           
  1739  0070                     ?_TMR2_ISR:	
  1740                           ; 1 bytes @ 0x0
  1741                           
  1742  0070                     ??_TMR2_ISR:	
  1743                           ; 1 bytes @ 0x0
  1744                           
  1745  0070                     ?_INTERRUPT_InterruptManager:	
  1746                           ; 1 bytes @ 0x0
  1747                           
  1748  0070                     ?_SYSTEM_Initialize:	
  1749                           ; 1 bytes @ 0x0
  1750                           
  1751  0070                     ?_main:	
  1752                           ; 1 bytes @ 0x0
  1753                           
  1754  0070                     ?_muxDigitCompensation:	
  1755                           ; 1 bytes @ 0x0
  1756                           
  1757  0070                     ??_muxDigitCompensation:	
  1758                           ; 1 bytes @ 0x0
  1759                           
  1760  0070                     ?i1_TMR0_SetInterruptHandler:	
  1761                           ; 1 bytes @ 0x0
  1762                           
  1763  0070                     ?i1_TMR1_SetInterruptHandler:	
  1764                           ; 1 bytes @ 0x0
  1765                           
  1766  0070                     ?i1_TMR2_StartTimer:	
  1767                           ; 1 bytes @ 0x0
  1768                           
  1769  0070                     ??i1_TMR2_StartTimer:	
  1770                           ; 1 bytes @ 0x0
  1771                           
  1772  0070                     ?i1_TMR2_StopTimer:	
  1773                           ; 1 bytes @ 0x0
  1774                           
  1775  0070                     ??i1_TMR2_StopTimer:	
  1776                           ; 1 bytes @ 0x0
  1777                           
  1778  0070                     ?i1_TMR2_SetInterruptHandler:	
  1779                           ; 1 bytes @ 0x0
  1780                           
  1781  0070                     ?i1_IOCBF0_SetInterruptHandler:	
  1782                           ; 1 bytes @ 0x0
  1783                           
  1784  0070                     ?i1_IOCBF1_SetInterruptHandler:	
  1785                           ; 1 bytes @ 0x0
  1786                           
  1787  0070                     ?i1_IOCBF2_SetInterruptHandler:	
  1788                           ; 1 bytes @ 0x0
  1789                           
  1790  0070                     ?i1_IOCBF3_SetInterruptHandler:	
  1791                           ; 1 bytes @ 0x0
  1792                           
  1793  0070                     ?i1_IOCBF4_SetInterruptHandler:	
  1794                           ; 1 bytes @ 0x0
  1795                           
  1796  0070                     ?___lwdiv:	
  1797                           ; 1 bytes @ 0x0
  1798                           
  1799  0070                     ?___ftpack:	
  1800                           ; 2 bytes @ 0x0
  1801                           
  1802  0070                     ?_frexp:	
  1803                           ; 3 bytes @ 0x0
  1804                           
  1805  0070                     ?___ltmod:	
  1806                           ; 3 bytes @ 0x0
  1807                           
  1808  0070                     ?___almod:	
  1809                           ; 3 bytes @ 0x0
  1810                           
  1811  0070                     ?___fttol:	
  1812                           ; 4 bytes @ 0x0
  1813                           
  1814  0070                     ___lwdiv@divisor:	
  1815                           ; 4 bytes @ 0x0
  1816                           
  1817  0070                     i1TMR0_SetInterruptHandler@InterruptHandler:	
  1818                           ; 2 bytes @ 0x0
  1819                           
  1820  0070                     i1TMR1_SetInterruptHandler@InterruptHandler:	
  1821                           ; 2 bytes @ 0x0
  1822                           
  1823  0070                     i1TMR2_SetInterruptHandler@InterruptHandler:	
  1824                           ; 2 bytes @ 0x0
  1825                           
  1826  0070                     i1IOCBF0_SetInterruptHandler@InterruptHandler:	
  1827                           ; 2 bytes @ 0x0
  1828                           
  1829  0070                     i1IOCBF1_SetInterruptHandler@InterruptHandler:	
  1830                           ; 2 bytes @ 0x0
  1831                           
  1832  0070                     i1IOCBF2_SetInterruptHandler@InterruptHandler:	
  1833                           ; 2 bytes @ 0x0
  1834                           
  1835  0070                     i1IOCBF3_SetInterruptHandler@InterruptHandler:	
  1836                           ; 2 bytes @ 0x0
  1837                           
  1838  0070                     i1IOCBF4_SetInterruptHandler@InterruptHandler:	
  1839                           ; 2 bytes @ 0x0
  1840                           
  1841  0070                     ___ftpack@arg:	
  1842                           ; 2 bytes @ 0x0
  1843                           
  1844  0070                     ___fttol@f1:	
  1845                           ; 3 bytes @ 0x0
  1846                           
  1847  0070                     ___ltmod@divisor:	
  1848                           ; 3 bytes @ 0x0
  1849                           
  1850  0070                     frexp@value:	
  1851                           ; 3 bytes @ 0x0
  1852                           
  1853  0070                     ___almod@divisor:	
  1854                           ; 3 bytes @ 0x0
  1855                           
  1856                           
  1857                           ; 4 bytes @ 0x0
  1858  0070                     	ds	1
  1859  0071                     ??_muxISR:	
  1860  0071                     ??_TMR0_ISR:	
  1861                           ; 1 bytes @ 0x1
  1862                           
  1863                           
  1864                           ; 1 bytes @ 0x1
  1865  0071                     	ds	1
  1866  0072                     ??_shutdown:	
  1867  0072                     ??i1_TMR0_SetInterruptHandler:	
  1868                           ; 1 bytes @ 0x2
  1869                           
  1870  0072                     ??i1_TMR1_SetInterruptHandler:	
  1871                           ; 1 bytes @ 0x2
  1872                           
  1873  0072                     ??i1_TMR2_SetInterruptHandler:	
  1874                           ; 1 bytes @ 0x2
  1875                           
  1876  0072                     ??i1_IOCBF0_SetInterruptHandler:	
  1877                           ; 1 bytes @ 0x2
  1878                           
  1879  0072                     ??i1_IOCBF1_SetInterruptHandler:	
  1880                           ; 1 bytes @ 0x2
  1881                           
  1882  0072                     ??i1_IOCBF2_SetInterruptHandler:	
  1883                           ; 1 bytes @ 0x2
  1884                           
  1885  0072                     ??i1_IOCBF3_SetInterruptHandler:	
  1886                           ; 1 bytes @ 0x2
  1887                           
  1888  0072                     ??i1_IOCBF4_SetInterruptHandler:	
  1889                           ; 1 bytes @ 0x2
  1890                           
  1891  0072                     ___lwdiv@dividend:	
  1892                           ; 1 bytes @ 0x2
  1893                           
  1894                           
  1895                           ; 2 bytes @ 0x2
  1896  0072                     	ds	1
  1897  0073                     ___ftpack@exp:	
  1898  0073                     frexp@eptr:	
  1899                           ; 1 bytes @ 0x3
  1900                           
  1901  0073                     ___ltmod@dividend:	
  1902                           ; 1 bytes @ 0x3
  1903                           
  1904                           
  1905                           ; 3 bytes @ 0x3
  1906  0073                     	ds	1
  1907  0074                     ??_frexp:	
  1908  0074                     ??___fttol:	
  1909                           ; 1 bytes @ 0x4
  1910                           
  1911  0074                     ??___lwdiv:	
  1912                           ; 1 bytes @ 0x4
  1913                           
  1914  0074                     ___ftpack@sign:	
  1915                           ; 1 bytes @ 0x4
  1916                           
  1917  0074                     ___almod@dividend:	
  1918                           ; 1 bytes @ 0x4
  1919                           
  1920                           
  1921                           ; 4 bytes @ 0x4
  1922  0074                     	ds	1
  1923  0075                     ??___ftpack:	
  1924  0075                     ___lwdiv@quotient:	
  1925                           ; 1 bytes @ 0x5
  1926                           
  1927                           
  1928                           ; 2 bytes @ 0x5
  1929  0075                     	ds	1
  1930  0076                     ??___ltmod:	
  1931                           
  1932                           ; 1 bytes @ 0x6
  1933  0076                     	ds	1
  1934  0077                     ___ltmod@counter:	
  1935  0077                     ___lwdiv@counter:	
  1936                           ; 1 bytes @ 0x7
  1937                           
  1938                           
  1939                           ; 1 bytes @ 0x7
  1940  0077                     	ds	1
  1941  0078                     ??___almod:	
  1942  0078                     ?___lwmod:	
  1943                           ; 1 bytes @ 0x8
  1944                           
  1945  0078                     ?___ltdiv:	
  1946                           ; 2 bytes @ 0x8
  1947                           
  1948  0078                     ?___lttoft:	
  1949                           ; 3 bytes @ 0x8
  1950                           
  1951  0078                     ___fttol@sign1:	
  1952                           ; 3 bytes @ 0x8
  1953                           
  1954  0078                     ___lwmod@divisor:	
  1955                           ; 1 bytes @ 0x8
  1956                           
  1957  0078                     ___ltdiv@divisor:	
  1958                           ; 2 bytes @ 0x8
  1959                           
  1960  0078                     ___lttoft@c:	
  1961                           ; 3 bytes @ 0x8
  1962                           
  1963                           
  1964                           ; 3 bytes @ 0x8
  1965  0078                     	ds	1
  1966  0079                     ___almod@counter:	
  1967  0079                     ___fttol@lval:	
  1968                           ; 1 bytes @ 0x9
  1969                           
  1970                           
  1971                           ; 4 bytes @ 0x9
  1972  0079                     	ds	1
  1973  007A                     ___almod@sign:	
  1974  007A                     ___lwmod@dividend:	
  1975                           ; 1 bytes @ 0xA
  1976                           
  1977                           
  1978                           ; 2 bytes @ 0xA
  1979  007A                     	ds	1
  1980  007B                     ??___aldiv:	
  1981  007B                     ??___lttoft:	
  1982                           ; 1 bytes @ 0xB
  1983                           
  1984  007B                     ___ltdiv@dividend:	
  1985                           ; 1 bytes @ 0xB
  1986                           
  1987                           
  1988                           ; 3 bytes @ 0xB
  1989  007B                     	ds	1
  1990  007C                     ??___lwmod:	
  1991                           
  1992                           ; 1 bytes @ 0xC
  1993  007C                     	ds	1
  1994  007D                     ___fttol@exp1:	
  1995  007D                     ___lwmod@counter:	
  1996                           ; 1 bytes @ 0xD
  1997                           
  1998                           
  1999                           ; 1 bytes @ 0xD
  2000  007D                     	ds	1
  2001  007E                     ??_PIN_MANAGER_IOC:	
  2002  007E                     ??_IOCBF0_ISR:	
  2003                           ; 1 bytes @ 0xE
  2004                           
  2005  007E                     ??_IOCBF1_ISR:	
  2006                           ; 1 bytes @ 0xE
  2007                           
  2008  007E                     ??_IOCBF2_ISR:	
  2009                           ; 1 bytes @ 0xE
  2010                           
  2011  007E                     ??_IOCBF4_ISR:	
  2012                           ; 1 bytes @ 0xE
  2013                           
  2014  007E                     ??_tickISR:	
  2015                           ; 1 bytes @ 0xE
  2016                           
  2017  007E                     ??_setSecondsISR:	
  2018                           ; 1 bytes @ 0xE
  2019                           
  2020  007E                     ??_setMinutesISR:	
  2021                           ; 1 bytes @ 0xE
  2022                           
  2023  007E                     ??_setHoursISR:	
  2024                           ; 1 bytes @ 0xE
  2025                           
  2026  007E                     ??_powerFailISR:	
  2027                           ; 1 bytes @ 0xE
  2028                           
  2029  007E                     ??_isolateDigits:	
  2030                           ; 1 bytes @ 0xE
  2031                           
  2032  007E                     ??_wakeup:	
  2033                           ; 1 bytes @ 0xE
  2034                           
  2035  007E                     ??_round:	
  2036                           ; 1 bytes @ 0xE
  2037                           
  2038  007E                     ??_TMR1_ISR:	
  2039                           ; 1 bytes @ 0xE
  2040                           
  2041  007E                     ??___ftneg:	
  2042                           ; 1 bytes @ 0xE
  2043                           
  2044                           
  2045                           	psect	cstackBANK0
  2046  0020                     __pcstackBANK0:	
  2047                           ; 1 bytes @ 0xE
  2048                           
  2049  0020                     ??___ltdiv:	
  2050  0020                     ?___altoft:	
  2051                           ; 1 bytes @ 0x0
  2052                           
  2053  0020                     ?___ftmul:	
  2054                           ; 3 bytes @ 0x0
  2055                           
  2056  0020                     ?___aldiv:	
  2057                           ; 3 bytes @ 0x0
  2058                           
  2059  0020                     ___ftmul@f1:	
  2060                           ; 4 bytes @ 0x0
  2061                           
  2062  0020                     ___aldiv@divisor:	
  2063                           ; 3 bytes @ 0x0
  2064                           
  2065  0020                     ___altoft@c:	
  2066                           ; 4 bytes @ 0x0
  2067                           
  2068                           
  2069                           ; 4 bytes @ 0x0
  2070  0020                     	ds	1
  2071  0021                     ___ltdiv@quotient:	
  2072                           
  2073                           ; 3 bytes @ 0x1
  2074  0021                     	ds	2
  2075  0023                     ___ftmul@f2:	
  2076                           
  2077                           ; 3 bytes @ 0x3
  2078  0023                     	ds	1
  2079  0024                     ??___altoft:	
  2080  0024                     ___ltdiv@counter:	
  2081                           ; 1 bytes @ 0x4
  2082                           
  2083  0024                     ___aldiv@dividend:	
  2084                           ; 1 bytes @ 0x4
  2085                           
  2086                           
  2087                           ; 4 bytes @ 0x4
  2088  0024                     	ds	2
  2089  0026                     ??___ftmul:	
  2090  0026                     ___altoft@exp:	
  2091                           ; 1 bytes @ 0x6
  2092                           
  2093                           
  2094                           ; 1 bytes @ 0x6
  2095  0026                     	ds	1
  2096  0027                     ___altoft@sign:	
  2097                           
  2098                           ; 1 bytes @ 0x7
  2099  0027                     	ds	1
  2100  0028                     ?_trunc:	
  2101  0028                     ___aldiv@counter:	
  2102                           ; 3 bytes @ 0x8
  2103                           
  2104  0028                     trunc@x:	
  2105                           ; 1 bytes @ 0x8
  2106                           
  2107                           
  2108                           ; 3 bytes @ 0x8
  2109  0028                     	ds	1
  2110  0029                     ___aldiv@sign:	
  2111                           
  2112                           ; 1 bytes @ 0x9
  2113  0029                     	ds	1
  2114  002A                     ___ftmul@exp:	
  2115  002A                     ___aldiv@quotient:	
  2116                           ; 1 bytes @ 0xA
  2117                           
  2118                           
  2119                           ; 4 bytes @ 0xA
  2120  002A                     	ds	1
  2121  002B                     ??_trunc:	
  2122  002B                     ___ftmul@f3_as_product:	
  2123                           ; 1 bytes @ 0xB
  2124                           
  2125                           
  2126                           ; 3 bytes @ 0xB
  2127  002B                     	ds	1
  2128  002C                     trunc@i:	
  2129                           
  2130                           ; 3 bytes @ 0xC
  2131  002C                     	ds	2
  2132  002E                     ___ftmul@cntr:	
  2133                           
  2134                           ; 1 bytes @ 0xE
  2135  002E                     	ds	1
  2136  002F                     ___ftmul@sign:	
  2137  002F                     trunc@expon:	
  2138                           ; 1 bytes @ 0xF
  2139                           
  2140                           
  2141                           ; 2 bytes @ 0xF
  2142  002F                     	ds	2
  2143  0031                     ?___ftneg:	
  2144  0031                     ___ftneg@f1:	
  2145                           ; 3 bytes @ 0x11
  2146                           
  2147                           
  2148                           ; 3 bytes @ 0x11
  2149  0031                     	ds	3
  2150  0034                     ?___ftadd:	
  2151  0034                     ___ftadd@f1:	
  2152                           ; 3 bytes @ 0x14
  2153                           
  2154                           
  2155                           ; 3 bytes @ 0x14
  2156  0034                     	ds	3
  2157  0037                     ___ftadd@f2:	
  2158                           
  2159                           ; 3 bytes @ 0x17
  2160  0037                     	ds	3
  2161  003A                     ??___ftadd:	
  2162                           
  2163                           ; 1 bytes @ 0x1A
  2164  003A                     	ds	4
  2165  003E                     ___ftadd@sign:	
  2166                           
  2167                           ; 1 bytes @ 0x1E
  2168  003E                     	ds	1
  2169  003F                     ___ftadd@exp2:	
  2170                           
  2171                           ; 1 bytes @ 0x1F
  2172  003F                     	ds	1
  2173  0040                     ___ftadd@exp1:	
  2174                           
  2175                           ; 1 bytes @ 0x20
  2176  0040                     	ds	1
  2177  0041                     ?_round:	
  2178  0041                     round@x:	
  2179                           ; 3 bytes @ 0x21
  2180                           
  2181                           
  2182                           ; 3 bytes @ 0x21
  2183  0041                     	ds	3
  2184  0044                     round@f:	
  2185                           
  2186                           ; 3 bytes @ 0x24
  2187  0044                     	ds	3
  2188  0047                     ??_restoreTime:	
  2189                           
  2190                           ; 1 bytes @ 0x27
  2191  0047                     	ds	3
  2192  004A                     restoreTime@sleepy_seconds_adjusted:	
  2193                           
  2194                           ; 3 bytes @ 0x2A
  2195  004A                     	ds	3
  2196  004D                     restoreTime@sleepy_seconds_rounded:	
  2197                           
  2198                           ; 3 bytes @ 0x2D
  2199  004D                     	ds	3
  2200  0050                     restoreTime@calc_seconds:	
  2201                           
  2202                           ; 2 bytes @ 0x30
  2203  0050                     	ds	2
  2204  0052                     restoreTime@calc_minutes:	
  2205                           
  2206                           ; 2 bytes @ 0x32
  2207  0052                     	ds	2
  2208  0054                     restoreTime@calc_hours:	
  2209                           
  2210                           ; 2 bytes @ 0x34
  2211  0054                     	ds	2
  2212  0056                     ??_INTERRUPT_InterruptManager:	
  2213                           
  2214                           ; 1 bytes @ 0x36
  2215  0056                     	ds	1
  2216                           
  2217                           	psect	maintext
  2218  077F                     __pmaintext:	
  2219 ;;
  2220 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  2221 ;;
  2222 ;; *************** function _main *****************
  2223 ;; Defined at:
  2224 ;;		line 88 in file "main.c"
  2225 ;; Parameters:    Size  Location     Type
  2226 ;;		None
  2227 ;; Auto vars:     Size  Location     Type
  2228 ;;		None
  2229 ;; Return value:  Size  Location     Type
  2230 ;;                  1    wreg      void 
  2231 ;; Registers used:
  2232 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2233 ;; Tracked objects:
  2234 ;;		On entry : B1F/0
  2235 ;;		On exit  : 0/0
  2236 ;;		Unchanged: 0/0
  2237 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2238 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2239 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2240 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  2241 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  2242 ;;Total ram usage:        2 bytes
  2243 ;; Hardware stack levels required when called:   14
  2244 ;; This function calls:
  2245 ;;		_TMR1_StartTimer
  2246 ;;		_startup
  2247 ;; This function is called by:
  2248 ;;		Startup code after reset
  2249 ;; This function uses a non-reentrant model
  2250 ;;
  2251                           
  2252                           
  2253                           ;psect for function _main
  2254  077F                     _main:	
  2255                           
  2256                           ;main.c: 92: if (asleep_flag == 0) {
  2257                           
  2258                           ;incstack = 0
  2259                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2260  077F  0020               	movlb	0	; select bank0
  2261  0780  186E               	btfsc	_asleep_flag/(0+8),_asleep_flag& (0+7)	;volatile
  2262  0781  2F85               	goto	l3790
  2263                           
  2264                           ;main.c: 94: startup();
  2265  0782  3184  24BE  3187   	fcall	_startup
  2266  0785                     l3790:	
  2267                           ;main.c: 96: }
  2268                           ;main.c: 98: while(1) {
  2269                           
  2270                           
  2271                           ;main.c: 100: if (asleep_flag == 0) {
  2272  0785  0020               	movlb	0	; select bank0
  2273  0786  186E               	btfsc	_asleep_flag/(0+8),_asleep_flag& (0+7)	;volatile
  2274  0787  2FCF               	goto	l432
  2275                           
  2276                           ;main.c: 103: if(PORTAbits.RA5 && PORTAbits.RA0 && PORTAbits.RA2 && PORTCbits.RC7 && !PO
      +                          RTCbits.RC5) {
  2277  0788  1A8C               	btfsc	12,5	;volatile
  2278  0789  1C0C               	btfss	12,0	;volatile
  2279  078A  2F93               	goto	l3804
  2280  078B  190C               	btfsc	12,2	;volatile
  2281  078C  1F8E               	btfss	14,7	;volatile
  2282  078D  2F93               	goto	l3804
  2283  078E  1A8E               	btfsc	14,5	;volatile
  2284  078F  2F93               	goto	l3804
  2285                           
  2286                           ;main.c: 106: LATEbits.LATE2 = 0;
  2287  0790  0022               	movlb	2	; select bank2
  2288  0791  1110               	bcf	16,2	;volatile
  2289                           
  2290                           ;main.c: 108: }
  2291  0792  2FA6               	goto	l3806
  2292  0793                     l3804:	
  2293                           
  2294                           ;main.c: 110: else {
  2295                           ;main.c: 112: LATEbits.LATE2 = 1 & !(asleep_flag);
  2296  0793  1003               	clrc
  2297  0794  0020               	movlb	0	; select bank0
  2298  0795  1C6E               	btfss	_asleep_flag/(0+8),_asleep_flag& (0+7)	;volatile
  2299  0796  1403               	setc
  2300  0797  3000               	movlw	0
  2301  0798  3D09               	addwfc	9,w
  2302  0799  3901               	andlw	1
  2303  079A  0021               	movlb	1	; select bank1
  2304  079B  00D3               	movwf	??_main^(0+128)
  2305  079C  0DD3               	rlf	??_main^(0+128),f
  2306  079D  0DD3               	rlf	??_main^(0+128),f
  2307  079E  0022               	movlb	2	; select bank2
  2308  079F  0810               	movf	16,w	;volatile
  2309  07A0  0021               	movlb	1	; select bank1
  2310  07A1  0653               	xorwf	??_main^(0+128),w
  2311  07A2  39FB               	andlw	-5
  2312  07A3  0653               	xorwf	??_main^(0+128),w
  2313  07A4  0022               	movlb	2	; select bank2
  2314  07A5  0090               	movwf	16	;volatile
  2315  07A6                     l3806:	
  2316                           
  2317                           ;main.c: 114: }
  2318                           ;main.c: 119: if (PIE1bits.TMR1IE == 0) {
  2319  07A6  0021               	movlb	1	; select bank1
  2320  07A7  1811               	btfsc	17,0	;volatile
  2321  07A8  2FBD               	goto	l3816
  2322                           
  2323                           ;main.c: 125: _delay((unsigned long)((3000)*(20000000/4000.0)));
  2324  07A9  304D               	movlw	77
  2325  07AA  0021               	movlb	1	; select bank1
  2326  07AB  00D4               	movwf	(??_main^(0+128)+1)
  2327  07AC  3019               	movlw	25
  2328  07AD  00D3               	movwf	??_main^(0+128)
  2329  07AE  304F               	movlw	79
  2330  07AF                     u3747:	
  2331  07AF  0B89               	decfsz	9,f
  2332  07B0  2FAF               	goto	u3747
  2333  07B1  0BD3               	decfsz	??_main^(0+128),f
  2334  07B2  2FAF               	goto	u3747
  2335  07B3  0BD4               	decfsz	(??_main^(0+128)+1),f
  2336  07B4  2FAF               	goto	u3747
  2337  07B5  3200               	nop2
  2338                           
  2339                           ;main.c: 128: if (PIE1bits.TMR1IE == 0) {
  2340  07B6  0021               	movlb	1	; select bank1
  2341  07B7  1811               	btfsc	17,0	;volatile
  2342  07B8  2FBD               	goto	l3816
  2343                           
  2344                           ;main.c: 131: PIE1bits.TMR1IE = 1;
  2345  07B9  1411               	bsf	17,0	;volatile
  2346                           
  2347                           ;main.c: 132: TMR1_StartTimer();
  2348  07BA  318A  22BA  3187   	fcall	_TMR1_StartTimer
  2349  07BD                     l3816:	
  2350                           
  2351                           ;main.c: 134: }
  2352                           ;main.c: 136: }
  2353                           ;main.c: 139: if (PORTCbits.RC5 == 1) {
  2354  07BD  0020               	movlb	0	; select bank0
  2355  07BE  1E8E               	btfss	14,5	;volatile
  2356  07BF  2FC4               	goto	l430
  2357                           
  2358                           ;main.c: 141: LATAbits.LATA3 = 0;
  2359  07C0  0022               	movlb	2	; select bank2
  2360  07C1  118C               	bcf	12,3	;volatile
  2361                           
  2362                           ;main.c: 142: LATEbits.LATE2 = 1;
  2363  07C2  1510               	bsf	16,2	;volatile
  2364                           
  2365                           ;main.c: 143: LATEbits.LATE0 = 0;
  2366  07C3  1010               	bcf	16,0	;volatile
  2367  07C4                     l430:	
  2368                           
  2369                           ;main.c: 145: }
  2370                           ;main.c: 147: LATEbits.LATE0 = LATAbits.LATA3;
  2371  07C4  0022               	movlb	2	; select bank2
  2372  07C5  1D8C               	btfss	12,3	;volatile
  2373  07C6  2FCA               	goto	u3710
  2374  07C7  0022               	movlb	2	; select bank2
  2375  07C8  1410               	bsf	16,0	;volatile
  2376  07C9  2F85               	goto	l3790
  2377  07CA                     u3710:	
  2378  07CA  0022               	movlb	2	; select bank2
  2379  07CB  1010               	bcf	16,0	;volatile
  2380                           
  2381                           ;main.c: 149: }
  2382  07CC  2F85               	goto	l3790
  2383  07CD                     l433:	
  2384                           ;main.c: 151: else {
  2385                           ;main.c: 153: while (asleep_flag == 1) {
  2386                           
  2387  07CD  0063               	sleep	;# 
  2388                           
  2389                           ;main.c: 156: __nop();
  2390  07CE  0000               	nop
  2391  07CF                     l432:	
  2392  07CF  0020               	movlb	0	; select bank0
  2393  07D0  1C6E               	btfss	_asleep_flag/(0+8),_asleep_flag& (0+7)	;volatile
  2394  07D1  2F85               	goto	l3790
  2395  07D2  2FCD               	goto	l433
  2396  07D3                     __end_of_main:	
  2397                           
  2398                           	psect	text1
  2399  04BE                     __ptext1:	
  2400 ;; *************** function _startup *****************
  2401 ;; Defined at:
  2402 ;;		line 26 in file "clock_functions.c"
  2403 ;; Parameters:    Size  Location     Type
  2404 ;;		None
  2405 ;; Auto vars:     Size  Location     Type
  2406 ;;		None
  2407 ;; Return value:  Size  Location     Type
  2408 ;;                  1    wreg      void 
  2409 ;; Registers used:
  2410 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2411 ;; Tracked objects:
  2412 ;;		On entry : 0/0
  2413 ;;		On exit  : 0/0
  2414 ;;		Unchanged: 0/0
  2415 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2416 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2417 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2418 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2419 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2420 ;;Total ram usage:        0 bytes
  2421 ;; Hardware stack levels used:    1
  2422 ;; Hardware stack levels required when called:   13
  2423 ;; This function calls:
  2424 ;;		_IOCBF0_SetInterruptHandler
  2425 ;;		_IOCBF1_SetInterruptHandler
  2426 ;;		_IOCBF2_SetInterruptHandler
  2427 ;;		_IOCBF3_SetInterruptHandler
  2428 ;;		_IOCBF4_SetInterruptHandler
  2429 ;;		_SYSTEM_Initialize
  2430 ;;		_TMR0_SetInterruptHandler
  2431 ;;		_TMR1_SetInterruptHandler
  2432 ;;		_TMR2_SetInterruptHandler
  2433 ;;		_TMR2_StopTimer
  2434 ;;		_checkIDs
  2435 ;; This function is called by:
  2436 ;;		_main
  2437 ;; This function uses a non-reentrant model
  2438 ;;
  2439                           
  2440                           
  2441                           ;psect for function _startup
  2442  04BE                     _startup:	
  2443                           
  2444                           ;clock_functions.c: 32: (INTCONbits.GIE = 1);
  2445                           
  2446                           ;incstack = 0
  2447                           ; Regs used in _startup: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2448  04BE  178B               	bsf	11,7	;volatile
  2449                           
  2450                           ;clock_functions.c: 35: (INTCONbits.PEIE = 1);
  2451  04BF  170B               	bsf	11,6	;volatile
  2452                           
  2453                           ;clock_functions.c: 38: SYSTEM_Initialize();
  2454  04C0  318B  23E1  3184   	fcall	_SYSTEM_Initialize
  2455                           
  2456                           ;clock_functions.c: 40: TRISEbits.TRISE2 = 0;
  2457  04C3  0021               	movlb	1	; select bank1
  2458  04C4  1110               	bcf	16,2	;volatile
  2459                           
  2460                           ;clock_functions.c: 41: TRISEbits.TRISE1 = 0;
  2461  04C5  1090               	bcf	16,1	;volatile
  2462                           
  2463                           ;clock_functions.c: 42: TRISEbits.TRISE0 = 0;
  2464  04C6  1010               	bcf	16,0	;volatile
  2465                           
  2466                           ;clock_functions.c: 43: LATEbits.LATE2 = 1;
  2467  04C7  0022               	movlb	2	; select bank2
  2468  04C8  1510               	bsf	16,2	;volatile
  2469                           
  2470                           ;clock_functions.c: 47: checkIDs();
  2471  04C9  3182  22F5  3184   	fcall	_checkIDs
  2472                           
  2473                           ;clock_functions.c: 51: TMR0_SetInterruptHandler(muxISR);
  2474  04CC  308B               	movlw	low _muxISR
  2475  04CD  0021               	movlb	1	; select bank1
  2476  04CE  00C7               	movwf	TMR0_SetInterruptHandler@InterruptHandler^(0+128)
  2477  04CF  300D               	movlw	high _muxISR
  2478  04D0  00C8               	movwf	(TMR0_SetInterruptHandler@InterruptHandler+1)^(0+128)
  2479  04D1  318B  2319  3184   	fcall	_TMR0_SetInterruptHandler
  2480                           
  2481                           ;clock_functions.c: 54: TMR1_SetInterruptHandler(tickISR);
  2482  04D4  3098               	movlw	low _tickISR
  2483  04D5  0021               	movlb	1	; select bank1
  2484  04D6  00C7               	movwf	TMR1_SetInterruptHandler@InterruptHandler^(0+128)
  2485  04D7  300C               	movlw	high _tickISR
  2486  04D8  00C8               	movwf	(TMR1_SetInterruptHandler@InterruptHandler+1)^(0+128)
  2487  04D9  318B  231F  3184   	fcall	_TMR1_SetInterruptHandler
  2488                           
  2489                           ;clock_functions.c: 57: TMR2_SetInterruptHandler(blankISR);
  2490  04DC  30A6               	movlw	low _blankISR
  2491  04DD  0021               	movlb	1	; select bank1
  2492  04DE  00C7               	movwf	TMR2_SetInterruptHandler@InterruptHandler^(0+128)
  2493  04DF  300B               	movlw	high _blankISR
  2494  04E0  00C8               	movwf	(TMR2_SetInterruptHandler@InterruptHandler+1)^(0+128)
  2495  04E1  318B  2325  3184   	fcall	_TMR2_SetInterruptHandler
  2496                           
  2497                           ;clock_functions.c: 61: IOCBF0_SetInterruptHandler(setSecondsISR);
  2498  04E4  30B8               	movlw	low _setSecondsISR
  2499  04E5  0021               	movlb	1	; select bank1
  2500  04E6  00C7               	movwf	IOCBF0_SetInterruptHandler@InterruptHandler^(0+128)
  2501  04E7  300C               	movlw	high _setSecondsISR
  2502  04E8  00C8               	movwf	(IOCBF0_SetInterruptHandler@InterruptHandler+1)^(0+128)
  2503  04E9  318A  22FB  3184   	fcall	_IOCBF0_SetInterruptHandler
  2504                           
  2505                           ;clock_functions.c: 64: IOCBF1_SetInterruptHandler(setMinutesISR);
  2506  04EC  30D9               	movlw	low _setMinutesISR
  2507  04ED  0021               	movlb	1	; select bank1
  2508  04EE  00C7               	movwf	IOCBF1_SetInterruptHandler@InterruptHandler^(0+128)
  2509  04EF  300C               	movlw	high _setMinutesISR
  2510  04F0  00C8               	movwf	(IOCBF1_SetInterruptHandler@InterruptHandler+1)^(0+128)
  2511  04F1  318B  2301  3184   	fcall	_IOCBF1_SetInterruptHandler
  2512                           
  2513                           ;clock_functions.c: 67: IOCBF2_SetInterruptHandler(setHoursISR);
  2514  04F4  301E               	movlw	low _setHoursISR
  2515  04F5  0021               	movlb	1	; select bank1
  2516  04F6  00C7               	movwf	IOCBF2_SetInterruptHandler@InterruptHandler^(0+128)
  2517  04F7  300D               	movlw	high _setHoursISR
  2518  04F8  00C8               	movwf	(IOCBF2_SetInterruptHandler@InterruptHandler+1)^(0+128)
  2519  04F9  318B  2307  3184   	fcall	_IOCBF2_SetInterruptHandler
  2520                           
  2521                           ;clock_functions.c: 70: IOCBF3_SetInterruptHandler(displayToggleISR);
  2522  04FC  30B0               	movlw	low _displayToggleISR
  2523  04FD  0021               	movlb	1	; select bank1
  2524  04FE  00C7               	movwf	IOCBF3_SetInterruptHandler@InterruptHandler^(0+128)
  2525  04FF  300D               	movlw	high _displayToggleISR
  2526  0500  00C8               	movwf	(IOCBF3_SetInterruptHandler@InterruptHandler+1)^(0+128)
  2527  0501  318B  230D  3184   	fcall	_IOCBF3_SetInterruptHandler
  2528                           
  2529                           ;clock_functions.c: 73: IOCBF4_SetInterruptHandler(powerFailISR);
  2530  0504  303A               	movlw	low _powerFailISR
  2531  0505  0021               	movlb	1	; select bank1
  2532  0506  00C7               	movwf	IOCBF4_SetInterruptHandler@InterruptHandler^(0+128)
  2533  0507  300B               	movlw	high _powerFailISR
  2534  0508  00C8               	movwf	(IOCBF4_SetInterruptHandler@InterruptHandler+1)^(0+128)
  2535  0509  318B  2343  3184   	fcall	_IOCBF4_SetInterruptHandler
  2536                           
  2537                           ;clock_functions.c: 77: TRISDbits.TRISD4 = 0;
  2538  050C  0021               	movlb	1	; select bank1
  2539  050D  120F               	bcf	15,4	;volatile
  2540                           
  2541                           ;clock_functions.c: 78: TRISDbits.TRISD5 = 0;
  2542  050E  128F               	bcf	15,5	;volatile
  2543                           
  2544                           ;clock_functions.c: 79: TRISDbits.TRISD6 = 0;
  2545  050F  130F               	bcf	15,6	;volatile
  2546                           
  2547                           ;clock_functions.c: 81: TRISDbits.TRISD0 = 0;
  2548  0510  100F               	bcf	15,0	;volatile
  2549                           
  2550                           ;clock_functions.c: 82: TRISDbits.TRISD1 = 0;
  2551  0511  108F               	bcf	15,1	;volatile
  2552                           
  2553                           ;clock_functions.c: 83: TRISDbits.TRISD2 = 0;
  2554  0512  110F               	bcf	15,2	;volatile
  2555                           
  2556                           ;clock_functions.c: 84: TRISDbits.TRISD3 = 0;
  2557  0513  118F               	bcf	15,3	;volatile
  2558                           
  2559                           ;clock_functions.c: 86: TRISDbits.TRISD7 = 0;
  2560  0514  138F               	bcf	15,7	;volatile
  2561                           
  2562                           ;clock_functions.c: 89: TRISCbits.TRISC3 = 0;
  2563  0515  118E               	bcf	14,3	;volatile
  2564                           
  2565                           ;clock_functions.c: 90: TRISCbits.TRISC4 = 0;
  2566  0516  120E               	bcf	14,4	;volatile
  2567                           
  2568                           ;clock_functions.c: 93: LATCbits.LATC3 = 0;
  2569  0517  0022               	movlb	2	; select bank2
  2570  0518  118E               	bcf	14,3	;volatile
  2571                           
  2572                           ;clock_functions.c: 94: LATCbits.LATC4 = 0;
  2573  0519  120E               	bcf	14,4	;volatile
  2574                           
  2575                           ;clock_functions.c: 97: TRISBbits.TRISB0 = 1;
  2576  051A  0021               	movlb	1	; select bank1
  2577  051B  140D               	bsf	13,0	;volatile
  2578                           
  2579                           ;clock_functions.c: 98: TRISBbits.TRISB1 = 1;
  2580  051C  148D               	bsf	13,1	;volatile
  2581                           
  2582                           ;clock_functions.c: 99: TRISBbits.TRISB2 = 1;
  2583  051D  150D               	bsf	13,2	;volatile
  2584                           
  2585                           ;clock_functions.c: 102: TRISBbits.TRISB4 = 1;
  2586  051E  160D               	bsf	13,4	;volatile
  2587                           
  2588                           ;clock_functions.c: 105: TRISCbits.TRISC5 = 1;
  2589  051F  168E               	bsf	14,5	;volatile
  2590                           
  2591                           ;clock_functions.c: 108: TRISAbits.TRISA0 = 1;
  2592  0520  140C               	bsf	12,0	;volatile
  2593                           
  2594                           ;clock_functions.c: 109: TRISAbits.TRISA5 = 1;
  2595  0521  168C               	bsf	12,5	;volatile
  2596                           
  2597                           ;clock_functions.c: 110: TRISAbits.TRISA2 = 1;
  2598  0522  150C               	bsf	12,2	;volatile
  2599                           
  2600                           ;clock_functions.c: 113: IOCBNbits.IOCBN5 = 0;
  2601  0523  0027               	movlb	7	; select bank7
  2602  0524  1295               	bcf	21,5	;volatile
  2603                           
  2604                           ;clock_functions.c: 114: IOCBPbits.IOCBP5 = 0;
  2605  0525  1294               	bcf	20,5	;volatile
  2606                           
  2607                           ;clock_functions.c: 117: TRISBbits.TRISB6 = 0;
  2608  0526  0021               	movlb	1	; select bank1
  2609  0527  130D               	bcf	13,6	;volatile
  2610                           
  2611                           ;clock_functions.c: 118: TRISBbits.TRISB7 = 0;
  2612  0528  138D               	bcf	13,7	;volatile
  2613                           
  2614                           ;clock_functions.c: 119: TRISAbits.TRISA1 = 0;
  2615  0529  108C               	bcf	12,1	;volatile
  2616                           
  2617                           ;clock_functions.c: 120: TRISCbits.TRISC1 = 0;
  2618  052A  108E               	bcf	14,1	;volatile
  2619                           
  2620                           ;clock_functions.c: 123: TRISEbits.TRISE0 = 0;
  2621  052B  1010               	bcf	16,0	;volatile
  2622                           
  2623                           ;clock_functions.c: 126: TRISCbits.TRISC6 = 1;
  2624  052C  170E               	bsf	14,6	;volatile
  2625                           
  2626                           ;clock_functions.c: 129: nT1SYNC = 0;
  2627  052D  0020               	movlb	0	; select bank0
  2628  052E  1118               	bcf	24,2	;volatile
  2629                           
  2630                           ;clock_functions.c: 132: TRISCbits.TRISC2 = 0;
  2631  052F  0021               	movlb	1	; select bank1
  2632  0530  110E               	bcf	14,2	;volatile
  2633                           
  2634                           ;clock_functions.c: 133: LATCbits.LATC2 = 0;
  2635  0531  0022               	movlb	2	; select bank2
  2636  0532  110E               	bcf	14,2	;volatile
  2637                           
  2638                           ;clock_functions.c: 136: TRISBbits.TRISB3 = 1;
  2639  0533  0021               	movlb	1	; select bank1
  2640  0534  158D               	bsf	13,3	;volatile
  2641                           
  2642                           ;clock_functions.c: 139: TRISAbits.TRISA3 = 0;
  2643  0535  118C               	bcf	12,3	;volatile
  2644                           
  2645                           ;clock_functions.c: 142: LATAbits.LATA3 = 0;
  2646  0536  0022               	movlb	2	; select bank2
  2647  0537  118C               	bcf	12,3	;volatile
  2648                           
  2649                           ;clock_functions.c: 145: INTCONbits.TMR0IE = 0;
  2650  0538  128B               	bcf	11,5	;volatile
  2651                           
  2652                           ;clock_functions.c: 146: PIE1bits.TMR2IE = 0;
  2653  0539  0021               	movlb	1	; select bank1
  2654  053A  1091               	bcf	17,1	;volatile
  2655                           
  2656                           ;clock_functions.c: 149: TMR2_StopTimer();
  2657  053B  318A  22C0         	fcall	_TMR2_StopTimer
  2658                           
  2659                           ;clock_functions.c: 152: TMR2 = 0;
  2660  053D  0020               	movlb	0	; select bank0
  2661  053E  019A               	clrf	26	;volatile
  2662                           
  2663                           ;clock_functions.c: 155: LATEbits.LATE2 = 0;
  2664  053F  0022               	movlb	2	; select bank2
  2665  0540  1110               	bcf	16,2	;volatile
  2666                           
  2667                           ;clock_functions.c: 156: LATEbits.LATE0 = 0;
  2668  0541  1010               	bcf	16,0	;volatile
  2669  0542  0008               	return
  2670  0543                     __end_of_startup:	
  2671                           
  2672                           	psect	text2
  2673  02F5                     __ptext2:	
  2674 ;; *************** function _checkIDs *****************
  2675 ;; Defined at:
  2676 ;;		line 24 in file "checkIDs.c"
  2677 ;; Parameters:    Size  Location     Type
  2678 ;;		None
  2679 ;; Auto vars:     Size  Location     Type
  2680 ;;  device_ID       2   10[BANK1 ] unsigned short 
  2681 ;;  user_ID_3       2    8[BANK1 ] unsigned short 
  2682 ;;  user_ID_2       2    6[BANK1 ] unsigned short 
  2683 ;;  user_ID_1       2    4[BANK1 ] unsigned short 
  2684 ;;  user_ID_0       2    2[BANK1 ] unsigned short 
  2685 ;; Return value:  Size  Location     Type
  2686 ;;                  1    wreg      void 
  2687 ;; Registers used:
  2688 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
  2689 ;; Tracked objects:
  2690 ;;		On entry : 0/0
  2691 ;;		On exit  : 0/0
  2692 ;;		Unchanged: 0/0
  2693 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2694 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2695 ;;      Locals:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0
  2696 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  2697 ;;      Totals:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0
  2698 ;;Total ram usage:       12 bytes
  2699 ;; Hardware stack levels used:    1
  2700 ;; Hardware stack levels required when called:   10
  2701 ;; This function calls:
  2702 ;;		Nothing
  2703 ;; This function is called by:
  2704 ;;		_startup
  2705 ;; This function uses a non-reentrant model
  2706 ;;
  2707                           
  2708                           
  2709                           ;psect for function _checkIDs
  2710  02F5                     _checkIDs:	
  2711                           
  2712                           ;checkIDs.c: 31: PMADRH = 0x80;
  2713                           
  2714                           ;incstack = 0
  2715                           ; Regs used in _checkIDs: [wreg-fsr0h+status,2+status,0+pclath]
  2716  02F5  3080               	movlw	128
  2717  02F6  0023               	movlb	3	; select bank3
  2718  02F7  0092               	movwf	18	;volatile
  2719                           
  2720                           ;checkIDs.c: 32: PMADRL = 0x00;
  2721  02F8  0191               	clrf	17	;volatile
  2722                           
  2723                           ;checkIDs.c: 33: CFGS = 1;
  2724  02F9  1715               	bsf	21,6	;volatile
  2725                           
  2726                           ;checkIDs.c: 34: RD = 1;
  2727  02FA  1415               	bsf	21,0	;volatile
  2728                           
  2729                           ;checkIDs.c: 35: __nop();
  2730  02FB  0000               	nop
  2731                           
  2732                           ;checkIDs.c: 36: __nop();
  2733  02FC  0000               	nop
  2734                           
  2735                           ;checkIDs.c: 37: unsigned short user_ID_0 = (PMDATH << 8) + PMDATL;
  2736  02FD  0023               	movlb	3	; select bank3
  2737  02FE  0814               	movf	20,w	;volatile
  2738  02FF  0021               	movlb	1	; select bank1
  2739  0300  00CA               	movwf	(checkIDs@user_ID_0+1)^(0+128)
  2740  0301  0023               	movlb	3	; select bank3
  2741  0302  0813               	movf	19,w	;volatile
  2742  0303  0021               	movlb	1	; select bank1
  2743  0304  00C9               	movwf	checkIDs@user_ID_0^(0+128)
  2744  0305                     l3500:	
  2745                           ;checkIDs.c: 38: while (user_ID_0 != expected_user_ID[3]);
  2746                           
  2747  0305  3006               	movlw	low ((_expected_user_ID+6)| (0+32768))
  2748  0306  0084               	movwf	4
  2749  0307  3090               	movlw	high ((_expected_user_ID+6)| (0+32768))
  2750  0308  0085               	movwf	5
  2751  0309  3F00               	moviw [0]fsr0
  2752  030A  00C7               	movwf	??_checkIDs^(0+128)
  2753  030B  3F01               	moviw [1]fsr0
  2754  030C  00C8               	movwf	(??_checkIDs^(0+128)+1)
  2755  030D  084A               	movf	(checkIDs@user_ID_0+1)^(0+128),w
  2756  030E  0648               	xorwf	(??_checkIDs+1)^(0+128),w
  2757  030F  1D03               	skipz
  2758  0310  2B13               	goto	u3295
  2759  0311  0849               	movf	checkIDs@user_ID_0^(0+128),w
  2760  0312  0647               	xorwf	??_checkIDs^(0+128),w
  2761  0313                     u3295:	
  2762  0313  1D03               	skipz
  2763  0314  2B05               	goto	l3500
  2764                           
  2765                           ;checkIDs.c: 40: PMADRH = 0x80;
  2766  0315  3080               	movlw	128
  2767  0316  0023               	movlb	3	; select bank3
  2768  0317  0092               	movwf	18	;volatile
  2769                           
  2770                           ;checkIDs.c: 41: PMADRL = 0x01;
  2771  0318  3001               	movlw	1
  2772  0319  0091               	movwf	17	;volatile
  2773                           
  2774                           ;checkIDs.c: 42: CFGS = 1;
  2775  031A  1715               	bsf	21,6	;volatile
  2776                           
  2777                           ;checkIDs.c: 43: RD = 1;
  2778  031B  1415               	bsf	21,0	;volatile
  2779                           
  2780                           ;checkIDs.c: 44: __nop();
  2781  031C  0000               	nop
  2782                           
  2783                           ;checkIDs.c: 45: __nop();
  2784  031D  0000               	nop
  2785                           
  2786                           ;checkIDs.c: 46: unsigned short user_ID_1 = (PMDATH << 8) + PMDATL;
  2787  031E  0023               	movlb	3	; select bank3
  2788  031F  0814               	movf	20,w	;volatile
  2789  0320  0021               	movlb	1	; select bank1
  2790  0321  00CC               	movwf	(checkIDs@user_ID_1+1)^(0+128)
  2791  0322  0023               	movlb	3	; select bank3
  2792  0323  0813               	movf	19,w	;volatile
  2793  0324  0021               	movlb	1	; select bank1
  2794  0325  00CB               	movwf	checkIDs@user_ID_1^(0+128)
  2795  0326                     l3512:	
  2796                           ;checkIDs.c: 47: while (user_ID_1 != expected_user_ID[2]);
  2797                           
  2798  0326  3004               	movlw	low ((_expected_user_ID+4)| (0+32768))
  2799  0327  0084               	movwf	4
  2800  0328  3090               	movlw	high ((_expected_user_ID+4)| (0+32768))
  2801  0329  0085               	movwf	5
  2802  032A  3F00               	moviw [0]fsr0
  2803  032B  00C7               	movwf	??_checkIDs^(0+128)
  2804  032C  3F01               	moviw [1]fsr0
  2805  032D  00C8               	movwf	(??_checkIDs^(0+128)+1)
  2806  032E  084C               	movf	(checkIDs@user_ID_1+1)^(0+128),w
  2807  032F  0648               	xorwf	(??_checkIDs+1)^(0+128),w
  2808  0330  1D03               	skipz
  2809  0331  2B34               	goto	u3305
  2810  0332  084B               	movf	checkIDs@user_ID_1^(0+128),w
  2811  0333  0647               	xorwf	??_checkIDs^(0+128),w
  2812  0334                     u3305:	
  2813  0334  1D03               	skipz
  2814  0335  2B26               	goto	l3512
  2815                           
  2816                           ;checkIDs.c: 49: PMADRH = 0x80;
  2817  0336  3080               	movlw	128
  2818  0337  0023               	movlb	3	; select bank3
  2819  0338  0092               	movwf	18	;volatile
  2820                           
  2821                           ;checkIDs.c: 50: PMADRL = 0x02;
  2822  0339  3002               	movlw	2
  2823  033A  0091               	movwf	17	;volatile
  2824                           
  2825                           ;checkIDs.c: 51: CFGS = 1;
  2826  033B  1715               	bsf	21,6	;volatile
  2827                           
  2828                           ;checkIDs.c: 52: RD = 1;
  2829  033C  1415               	bsf	21,0	;volatile
  2830                           
  2831                           ;checkIDs.c: 53: __nop();
  2832  033D  0000               	nop
  2833                           
  2834                           ;checkIDs.c: 54: __nop();
  2835  033E  0000               	nop
  2836                           
  2837                           ;checkIDs.c: 55: unsigned short user_ID_2 = (PMDATH << 8) + PMDATL;
  2838  033F  0023               	movlb	3	; select bank3
  2839  0340  0814               	movf	20,w	;volatile
  2840  0341  0021               	movlb	1	; select bank1
  2841  0342  00CE               	movwf	(checkIDs@user_ID_2+1)^(0+128)
  2842  0343  0023               	movlb	3	; select bank3
  2843  0344  0813               	movf	19,w	;volatile
  2844  0345  0021               	movlb	1	; select bank1
  2845  0346  00CD               	movwf	checkIDs@user_ID_2^(0+128)
  2846  0347                     l3524:	
  2847                           ;checkIDs.c: 56: while (user_ID_2 != expected_user_ID[1]);
  2848                           
  2849  0347  3002               	movlw	low ((_expected_user_ID+2)| (0+32768))
  2850  0348  0084               	movwf	4
  2851  0349  3090               	movlw	high ((_expected_user_ID+2)| (0+32768))
  2852  034A  0085               	movwf	5
  2853  034B  3F00               	moviw [0]fsr0
  2854  034C  00C7               	movwf	??_checkIDs^(0+128)
  2855  034D  3F01               	moviw [1]fsr0
  2856  034E  00C8               	movwf	(??_checkIDs^(0+128)+1)
  2857  034F  084E               	movf	(checkIDs@user_ID_2+1)^(0+128),w
  2858  0350  0648               	xorwf	(??_checkIDs+1)^(0+128),w
  2859  0351  1D03               	skipz
  2860  0352  2B55               	goto	u3315
  2861  0353  084D               	movf	checkIDs@user_ID_2^(0+128),w
  2862  0354  0647               	xorwf	??_checkIDs^(0+128),w
  2863  0355                     u3315:	
  2864  0355  1D03               	skipz
  2865  0356  2B47               	goto	l3524
  2866                           
  2867                           ;checkIDs.c: 58: PMADRH = 0x80;
  2868  0357  3080               	movlw	128
  2869  0358  0023               	movlb	3	; select bank3
  2870  0359  0092               	movwf	18	;volatile
  2871                           
  2872                           ;checkIDs.c: 59: PMADRL = 0x03;
  2873  035A  3003               	movlw	3
  2874  035B  0091               	movwf	17	;volatile
  2875                           
  2876                           ;checkIDs.c: 60: CFGS = 1;
  2877  035C  1715               	bsf	21,6	;volatile
  2878                           
  2879                           ;checkIDs.c: 61: RD = 1;
  2880  035D  1415               	bsf	21,0	;volatile
  2881                           
  2882                           ;checkIDs.c: 62: __nop();
  2883  035E  0000               	nop
  2884                           
  2885                           ;checkIDs.c: 63: __nop();
  2886  035F  0000               	nop
  2887                           
  2888                           ;checkIDs.c: 64: unsigned short user_ID_3 = (PMDATH << 8) + PMDATL;
  2889  0360  0023               	movlb	3	; select bank3
  2890  0361  0814               	movf	20,w	;volatile
  2891  0362  0021               	movlb	1	; select bank1
  2892  0363  00D0               	movwf	(checkIDs@user_ID_3+1)^(0+128)
  2893  0364  0023               	movlb	3	; select bank3
  2894  0365  0813               	movf	19,w	;volatile
  2895  0366  0021               	movlb	1	; select bank1
  2896  0367  00CF               	movwf	checkIDs@user_ID_3^(0+128)
  2897  0368                     l3536:	
  2898                           ;checkIDs.c: 65: while (user_ID_3 != expected_user_ID[0]);
  2899                           
  2900  0368  3000               	movlw	low (_expected_user_ID| (0+32768))
  2901  0369  0084               	movwf	4
  2902  036A  3090               	movlw	high (_expected_user_ID| (0+32768))
  2903  036B  0085               	movwf	5
  2904  036C  3F00               	moviw [0]fsr0
  2905  036D  00C7               	movwf	??_checkIDs^(0+128)
  2906  036E  3F01               	moviw [1]fsr0
  2907  036F  00C8               	movwf	(??_checkIDs^(0+128)+1)
  2908  0370  0850               	movf	(checkIDs@user_ID_3+1)^(0+128),w
  2909  0371  0648               	xorwf	(??_checkIDs+1)^(0+128),w
  2910  0372  1D03               	skipz
  2911  0373  2B76               	goto	u3325
  2912  0374  084F               	movf	checkIDs@user_ID_3^(0+128),w
  2913  0375  0647               	xorwf	??_checkIDs^(0+128),w
  2914  0376                     u3325:	
  2915  0376  1D03               	skipz
  2916  0377  2B68               	goto	l3536
  2917                           
  2918                           ;checkIDs.c: 69: PMADRH = 0x80;
  2919  0378  3080               	movlw	128
  2920  0379  0023               	movlb	3	; select bank3
  2921  037A  0092               	movwf	18	;volatile
  2922                           
  2923                           ;checkIDs.c: 70: PMADRL = 0x06;
  2924  037B  3006               	movlw	6
  2925  037C  0091               	movwf	17	;volatile
  2926                           
  2927                           ;checkIDs.c: 71: CFGS = 1;
  2928  037D  1715               	bsf	21,6	;volatile
  2929                           
  2930                           ;checkIDs.c: 72: RD = 1;
  2931  037E  1415               	bsf	21,0	;volatile
  2932                           
  2933                           ;checkIDs.c: 73: __nop();
  2934  037F  0000               	nop
  2935                           
  2936                           ;checkIDs.c: 74: __nop();
  2937  0380  0000               	nop
  2938                           
  2939                           ;checkIDs.c: 75: unsigned short device_ID = (PMDATH << 8) + PMDATL;
  2940  0381  0023               	movlb	3	; select bank3
  2941  0382  0814               	movf	20,w	;volatile
  2942  0383  0021               	movlb	1	; select bank1
  2943  0384  00D2               	movwf	(checkIDs@device_ID+1)^(0+128)
  2944  0385  0023               	movlb	3	; select bank3
  2945  0386  0813               	movf	19,w	;volatile
  2946  0387  0021               	movlb	1	; select bank1
  2947  0388  00D1               	movwf	checkIDs@device_ID^(0+128)
  2948                           
  2949                           ;checkIDs.c: 76: device_ID = (device_ID >> 5);
  2950  0389  0852               	movf	(checkIDs@device_ID+1)^(0+128),w
  2951  038A  00C8               	movwf	(??_checkIDs^(0+128)+1)
  2952  038B  0851               	movf	checkIDs@device_ID^(0+128),w
  2953  038C  00C7               	movwf	??_checkIDs^(0+128)
  2954  038D  3005               	movlw	5
  2955  038E                     u3335:	
  2956  038E  36C8               	lsrf	(??_checkIDs^(0+128)+1),f
  2957  038F  0CC7               	rrf	??_checkIDs^(0+128),f
  2958  0390  0B89               	decfsz	9,f
  2959  0391  2B8E               	goto	u3335
  2960  0392  0847               	movf	??_checkIDs^(0+128),w
  2961  0393  00D1               	movwf	checkIDs@device_ID^(0+128)
  2962  0394  0848               	movf	(??_checkIDs+1)^(0+128),w
  2963  0395  00D2               	movwf	(checkIDs@device_ID+1)^(0+128)
  2964  0396                     l3550:	
  2965                           ;checkIDs.c: 77: while (device_ID != expected_device_ID);
  2966                           
  2967  0396  300B               	movlw	low (_expected_device_ID| (0+32768))
  2968  0397  0084               	movwf	4
  2969  0398  3090               	movlw	high (_expected_device_ID| (0+32768))
  2970  0399  0085               	movwf	5
  2971  039A  3F00               	moviw [0]fsr0
  2972  039B  00C7               	movwf	??_checkIDs^(0+128)
  2973  039C  3F01               	moviw [1]fsr0
  2974  039D  00C8               	movwf	(??_checkIDs^(0+128)+1)
  2975  039E  0848               	movf	(??_checkIDs+1)^(0+128),w
  2976  039F  0652               	xorwf	(checkIDs@device_ID+1)^(0+128),w
  2977  03A0  1D03               	skipz
  2978  03A1  2BA4               	goto	u3345
  2979  03A2  0847               	movf	??_checkIDs^(0+128),w
  2980  03A3  0651               	xorwf	checkIDs@device_ID^(0+128),w
  2981  03A4                     u3345:	
  2982  03A4  1903               	btfsc	3,2
  2983  03A5  0008               	return
  2984  03A6  2B96               	goto	l3550
  2985  03A7                     __end_of_checkIDs:	
  2986                           
  2987                           	psect	text3
  2988  0AC0                     __ptext3:	
  2989 ;; *************** function _TMR2_StopTimer *****************
  2990 ;; Defined at:
  2991 ;;		line 98 in file "mcc_generated_files/tmr2.c"
  2992 ;; Parameters:    Size  Location     Type
  2993 ;;		None
  2994 ;; Auto vars:     Size  Location     Type
  2995 ;;		None
  2996 ;; Return value:  Size  Location     Type
  2997 ;;                  1    wreg      void 
  2998 ;; Registers used:
  2999 ;;		None
  3000 ;; Tracked objects:
  3001 ;;		On entry : 0/0
  3002 ;;		On exit  : 0/0
  3003 ;;		Unchanged: 0/0
  3004 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3005 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3006 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3007 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3008 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3009 ;;Total ram usage:        0 bytes
  3010 ;; Hardware stack levels used:    1
  3011 ;; Hardware stack levels required when called:   10
  3012 ;; This function calls:
  3013 ;;		Nothing
  3014 ;; This function is called by:
  3015 ;;		_startup
  3016 ;; This function uses a non-reentrant model
  3017 ;;
  3018                           
  3019                           
  3020                           ;psect for function _TMR2_StopTimer
  3021  0AC0                     _TMR2_StopTimer:	
  3022                           
  3023                           ;tmr2.c: 101: T2CONbits.TMR2ON = 0;
  3024                           
  3025                           ;incstack = 0
  3026                           ; Regs used in _TMR2_StopTimer: []
  3027  0AC0  0020               	movlb	0	; select bank0
  3028  0AC1  111C               	bcf	28,2	;volatile
  3029  0AC2  0008               	return
  3030  0AC3                     __end_of_TMR2_StopTimer:	
  3031                           
  3032                           	psect	text4
  3033  0BE1                     __ptext4:	
  3034 ;; *************** function _SYSTEM_Initialize *****************
  3035 ;; Defined at:
  3036 ;;		line 74 in file "mcc_generated_files/mcc.c"
  3037 ;; Parameters:    Size  Location     Type
  3038 ;;		None
  3039 ;; Auto vars:     Size  Location     Type
  3040 ;;		None
  3041 ;; Return value:  Size  Location     Type
  3042 ;;                  1    wreg      void 
  3043 ;; Registers used:
  3044 ;;		wreg, status,2, status,0, pclath, cstack
  3045 ;; Tracked objects:
  3046 ;;		On entry : 0/0
  3047 ;;		On exit  : 0/0
  3048 ;;		Unchanged: 0/0
  3049 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3050 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3051 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3052 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3053 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3054 ;;Total ram usage:        0 bytes
  3055 ;; Hardware stack levels used:    1
  3056 ;; Hardware stack levels required when called:   12
  3057 ;; This function calls:
  3058 ;;		_OSCILLATOR_Initialize
  3059 ;;		_PIN_MANAGER_Initialize
  3060 ;;		_TMR0_Initialize
  3061 ;;		_TMR1_Initialize
  3062 ;;		_TMR2_Initialize
  3063 ;;		_WDT_Initialize
  3064 ;; This function is called by:
  3065 ;;		_startup
  3066 ;; This function uses a non-reentrant model
  3067 ;;
  3068                           
  3069                           
  3070                           ;psect for function _SYSTEM_Initialize
  3071  0BE1                     _SYSTEM_Initialize:	
  3072                           
  3073                           ;mcc.c: 77: PIN_MANAGER_Initialize();
  3074                           
  3075                           ;incstack = 0
  3076                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  3077  0BE1  3186  26B6  318B   	fcall	_PIN_MANAGER_Initialize
  3078                           
  3079                           ;mcc.c: 78: OSCILLATOR_Initialize();
  3080  0BE4  318A  22C3  318B   	fcall	_OSCILLATOR_Initialize
  3081                           
  3082                           ;mcc.c: 79: WDT_Initialize();
  3083  0BE7  318A  22C7  318B   	fcall	_WDT_Initialize
  3084                           
  3085                           ;mcc.c: 80: TMR2_Initialize();
  3086  0BEA  318B  23F3  318B   	fcall	_TMR2_Initialize
  3087                           
  3088                           ;mcc.c: 81: TMR1_Initialize();
  3089  0BED  318C  245D  318B   	fcall	_TMR1_Initialize
  3090                           
  3091                           ;mcc.c: 82: TMR0_Initialize();
  3092  0BF0  318C  242F         	fcall	_TMR0_Initialize
  3093  0BF2  0008               	return
  3094  0BF3                     __end_of_SYSTEM_Initialize:	
  3095                           
  3096                           	psect	text5
  3097  0AC7                     __ptext5:	
  3098 ;; *************** function _WDT_Initialize *****************
  3099 ;; Defined at:
  3100 ;;		line 91 in file "mcc_generated_files/mcc.c"
  3101 ;; Parameters:    Size  Location     Type
  3102 ;;		None
  3103 ;; Auto vars:     Size  Location     Type
  3104 ;;		None
  3105 ;; Return value:  Size  Location     Type
  3106 ;;                  1    wreg      void 
  3107 ;; Registers used:
  3108 ;;		wreg
  3109 ;; Tracked objects:
  3110 ;;		On entry : 0/0
  3111 ;;		On exit  : 0/0
  3112 ;;		Unchanged: 0/0
  3113 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3114 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3115 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3116 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3117 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3118 ;;Total ram usage:        0 bytes
  3119 ;; Hardware stack levels used:    1
  3120 ;; Hardware stack levels required when called:   10
  3121 ;; This function calls:
  3122 ;;		Nothing
  3123 ;; This function is called by:
  3124 ;;		_SYSTEM_Initialize
  3125 ;; This function uses a non-reentrant model
  3126 ;;
  3127                           
  3128                           
  3129                           ;psect for function _WDT_Initialize
  3130  0AC7                     _WDT_Initialize:	
  3131                           
  3132                           ;mcc.c: 94: WDTCON = 0x16;
  3133                           
  3134                           ;incstack = 0
  3135                           ; Regs used in _WDT_Initialize: [wreg]
  3136  0AC7  3016               	movlw	22
  3137  0AC8  0021               	movlb	1	; select bank1
  3138  0AC9  0097               	movwf	23	;volatile
  3139  0ACA  0008               	return
  3140  0ACB                     __end_of_WDT_Initialize:	
  3141                           
  3142                           	psect	text6
  3143  0BF3                     __ptext6:	
  3144 ;; *************** function _TMR2_Initialize *****************
  3145 ;; Defined at:
  3146 ;;		line 63 in file "mcc_generated_files/tmr2.c"
  3147 ;; Parameters:    Size  Location     Type
  3148 ;;		None
  3149 ;; Auto vars:     Size  Location     Type
  3150 ;;		None
  3151 ;; Return value:  Size  Location     Type
  3152 ;;                  1    wreg      void 
  3153 ;; Registers used:
  3154 ;;		wreg, status,2, status,0, pclath, cstack
  3155 ;; Tracked objects:
  3156 ;;		On entry : 0/0
  3157 ;;		On exit  : 0/0
  3158 ;;		Unchanged: 0/0
  3159 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3160 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3161 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3162 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3163 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3164 ;;Total ram usage:        0 bytes
  3165 ;; Hardware stack levels used:    1
  3166 ;; Hardware stack levels required when called:   11
  3167 ;; This function calls:
  3168 ;;		_TMR2_SetInterruptHandler
  3169 ;;		_TMR2_StartTimer
  3170 ;; This function is called by:
  3171 ;;		_SYSTEM_Initialize
  3172 ;; This function uses a non-reentrant model
  3173 ;;
  3174                           
  3175                           
  3176                           ;psect for function _TMR2_Initialize
  3177  0BF3                     _TMR2_Initialize:	
  3178                           
  3179                           ;tmr2.c: 68: T2CON = 0x13;
  3180                           
  3181                           ;incstack = 0
  3182                           ; Regs used in _TMR2_Initialize: [wreg+status,2+status,0+pclath+cstack]
  3183  0BF3  3013               	movlw	19
  3184  0BF4  0020               	movlb	0	; select bank0
  3185  0BF5  009C               	movwf	28	;volatile
  3186                           
  3187                           ;tmr2.c: 72: PR2 = 0x48;
  3188  0BF6  3048               	movlw	72
  3189  0BF7  009B               	movwf	27	;volatile
  3190                           
  3191                           ;tmr2.c: 77: TMR2 = 0x00;
  3192  0BF8  019A               	clrf	26	;volatile
  3193                           
  3194                           ;tmr2.c: 80: PIR1bits.TMR2IF = 0;
  3195  0BF9  1091               	bcf	17,1	;volatile
  3196                           
  3197                           ;tmr2.c: 83: PIE1bits.TMR2IE = 1;
  3198  0BFA  0021               	movlb	1	; select bank1
  3199  0BFB  1491               	bsf	17,1	;volatile
  3200                           
  3201                           ;tmr2.c: 86: TMR2_SetInterruptHandler(TMR2_DefaultInterruptHandler);
  3202  0BFC  30FF               	movlw	low _TMR2_DefaultInterruptHandler
  3203  0BFD  00C7               	movwf	TMR2_SetInterruptHandler@InterruptHandler^(0+128)
  3204  0BFE  3007               	movlw	high _TMR2_DefaultInterruptHandler
  3205  0BFF  00C8               	movwf	(TMR2_SetInterruptHandler@InterruptHandler+1)^(0+128)
  3206  0C00  318B  2325  318B   	fcall	_TMR2_SetInterruptHandler
  3207                           
  3208                           ;tmr2.c: 89: TMR2_StartTimer();
  3209  0C03  318A  22BD         	fcall	_TMR2_StartTimer
  3210  0C05  0008               	return
  3211  0C06                     __end_of_TMR2_Initialize:	
  3212                           
  3213                           	psect	text7
  3214  0ABD                     __ptext7:	
  3215 ;; *************** function _TMR2_StartTimer *****************
  3216 ;; Defined at:
  3217 ;;		line 92 in file "mcc_generated_files/tmr2.c"
  3218 ;; Parameters:    Size  Location     Type
  3219 ;;		None
  3220 ;; Auto vars:     Size  Location     Type
  3221 ;;		None
  3222 ;; Return value:  Size  Location     Type
  3223 ;;                  1    wreg      void 
  3224 ;; Registers used:
  3225 ;;		None
  3226 ;; Tracked objects:
  3227 ;;		On entry : 0/0
  3228 ;;		On exit  : 0/0
  3229 ;;		Unchanged: 0/0
  3230 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3231 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3232 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3233 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3234 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3235 ;;Total ram usage:        0 bytes
  3236 ;; Hardware stack levels used:    1
  3237 ;; Hardware stack levels required when called:   10
  3238 ;; This function calls:
  3239 ;;		Nothing
  3240 ;; This function is called by:
  3241 ;;		_TMR2_Initialize
  3242 ;; This function uses a non-reentrant model
  3243 ;;
  3244                           
  3245                           
  3246                           ;psect for function _TMR2_StartTimer
  3247  0ABD                     _TMR2_StartTimer:	
  3248                           
  3249                           ;tmr2.c: 95: T2CONbits.TMR2ON = 1;
  3250                           
  3251                           ;incstack = 0
  3252                           ; Regs used in _TMR2_StartTimer: []
  3253  0ABD  0020               	movlb	0	; select bank0
  3254  0ABE  151C               	bsf	28,2	;volatile
  3255  0ABF  0008               	return
  3256  0AC0                     __end_of_TMR2_StartTimer:	
  3257                           
  3258                           	psect	text8
  3259  0B25                     __ptext8:	
  3260 ;; *************** function _TMR2_SetInterruptHandler *****************
  3261 ;; Defined at:
  3262 ;;		line 137 in file "mcc_generated_files/tmr2.c"
  3263 ;; Parameters:    Size  Location     Type
  3264 ;;  InterruptHan    2    0[BANK1 ] PTR void 
  3265 ;;		 -> blankISR(1), TMR2_DefaultInterruptHandler(1), 
  3266 ;; Auto vars:     Size  Location     Type
  3267 ;;		None
  3268 ;; Return value:  Size  Location     Type
  3269 ;;                  1    wreg      void 
  3270 ;; Registers used:
  3271 ;;		wreg
  3272 ;; Tracked objects:
  3273 ;;		On entry : 0/0
  3274 ;;		On exit  : 0/0
  3275 ;;		Unchanged: 0/0
  3276 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3277 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  3278 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3279 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3280 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  3281 ;;Total ram usage:        2 bytes
  3282 ;; Hardware stack levels used:    1
  3283 ;; Hardware stack levels required when called:   10
  3284 ;; This function calls:
  3285 ;;		Nothing
  3286 ;; This function is called by:
  3287 ;;		_TMR2_Initialize
  3288 ;;		_startup
  3289 ;; This function uses a non-reentrant model
  3290 ;;
  3291                           
  3292                           
  3293                           ;psect for function _TMR2_SetInterruptHandler
  3294  0B25                     _TMR2_SetInterruptHandler:	
  3295                           
  3296                           ;tmr2.c: 138: TMR2_InterruptHandler = InterruptHandler;
  3297                           
  3298                           ;incstack = 0
  3299                           ; Regs used in _TMR2_SetInterruptHandler: [wreg]
  3300  0B25  0021               	movlb	1	; select bank1
  3301  0B26  0848               	movf	(TMR2_SetInterruptHandler@InterruptHandler+1)^(0+128),w
  3302  0B27  00BF               	movwf	(_TMR2_InterruptHandler+1)^(0+128)
  3303  0B28  0847               	movf	TMR2_SetInterruptHandler@InterruptHandler^(0+128),w
  3304  0B29  00BE               	movwf	_TMR2_InterruptHandler^(0+128)
  3305  0B2A  0008               	return
  3306  0B2B                     __end_of_TMR2_SetInterruptHandler:	
  3307                           
  3308                           	psect	text9
  3309  0C5D                     __ptext9:	
  3310 ;; *************** function _TMR1_Initialize *****************
  3311 ;; Defined at:
  3312 ;;		line 63 in file "mcc_generated_files/tmr1.c"
  3313 ;; Parameters:    Size  Location     Type
  3314 ;;		None
  3315 ;; Auto vars:     Size  Location     Type
  3316 ;;		None
  3317 ;; Return value:  Size  Location     Type
  3318 ;;                  1    wreg      void 
  3319 ;; Registers used:
  3320 ;;		wreg, status,2, status,0, pclath, cstack
  3321 ;; Tracked objects:
  3322 ;;		On entry : 0/0
  3323 ;;		On exit  : 0/0
  3324 ;;		Unchanged: 0/0
  3325 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3326 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3327 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3328 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3329 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3330 ;;Total ram usage:        0 bytes
  3331 ;; Hardware stack levels used:    1
  3332 ;; Hardware stack levels required when called:   11
  3333 ;; This function calls:
  3334 ;;		_TMR1_SetInterruptHandler
  3335 ;;		_TMR1_StartTimer
  3336 ;; This function is called by:
  3337 ;;		_SYSTEM_Initialize
  3338 ;; This function uses a non-reentrant model
  3339 ;;
  3340                           
  3341                           
  3342                           ;psect for function _TMR1_Initialize
  3343  0C5D                     _TMR1_Initialize:	
  3344                           
  3345                           ;tmr1.c: 68: T1CON = 0x84;
  3346                           
  3347                           ;incstack = 0
  3348                           ; Regs used in _TMR1_Initialize: [wreg+status,2+status,0+pclath+cstack]
  3349  0C5D  3084               	movlw	132
  3350  0C5E  0020               	movlb	0	; select bank0
  3351  0C5F  0098               	movwf	24	;volatile
  3352                           
  3353                           ;tmr1.c: 71: T1GCON = 0x00;
  3354  0C60  0199               	clrf	25	;volatile
  3355                           
  3356                           ;tmr1.c: 74: TMR1H = 0x80;
  3357  0C61  3080               	movlw	128
  3358  0C62  0097               	movwf	23	;volatile
  3359                           
  3360                           ;tmr1.c: 77: TMR1L = 0x00;
  3361  0C63  0196               	clrf	22	;volatile
  3362                           
  3363                           ;tmr1.c: 80: timer1ReloadVal=(TMR1H << 8) | TMR1L;
  3364  0C64  0817               	movf	23,w	;volatile
  3365  0C65  0021               	movlb	1	; select bank1
  3366  0C66  00C3               	movwf	(_timer1ReloadVal+1)^(0+128)	;volatile
  3367  0C67  0020               	movlb	0	; select bank0
  3368  0C68  0816               	movf	22,w	;volatile
  3369  0C69  0021               	movlb	1	; select bank1
  3370  0C6A  00C2               	movwf	_timer1ReloadVal^(0+128)	;volatile
  3371                           
  3372                           ;tmr1.c: 83: PIR1bits.TMR1IF = 0;
  3373  0C6B  0020               	movlb	0	; select bank0
  3374  0C6C  1011               	bcf	17,0	;volatile
  3375                           
  3376                           ;tmr1.c: 86: PIE1bits.TMR1IE = 1;
  3377  0C6D  0021               	movlb	1	; select bank1
  3378  0C6E  1411               	bsf	17,0	;volatile
  3379                           
  3380                           ;tmr1.c: 89: TMR1_SetInterruptHandler(TMR1_DefaultInterruptHandler);
  3381  0C6F  3003               	movlw	low _TMR1_DefaultInterruptHandler
  3382  0C70  00C7               	movwf	TMR1_SetInterruptHandler@InterruptHandler^(0+128)
  3383  0C71  3000               	movlw	high _TMR1_DefaultInterruptHandler
  3384  0C72  00C8               	movwf	(TMR1_SetInterruptHandler@InterruptHandler+1)^(0+128)
  3385  0C73  318B  231F  318C   	fcall	_TMR1_SetInterruptHandler
  3386                           
  3387                           ;tmr1.c: 92: TMR1_StartTimer();
  3388  0C76  318A  22BA         	fcall	_TMR1_StartTimer
  3389  0C78  0008               	return
  3390  0C79                     __end_of_TMR1_Initialize:	
  3391                           
  3392                           	psect	text10
  3393  0ABA                     __ptext10:	
  3394 ;; *************** function _TMR1_StartTimer *****************
  3395 ;; Defined at:
  3396 ;;		line 95 in file "mcc_generated_files/tmr1.c"
  3397 ;; Parameters:    Size  Location     Type
  3398 ;;		None
  3399 ;; Auto vars:     Size  Location     Type
  3400 ;;		None
  3401 ;; Return value:  Size  Location     Type
  3402 ;;                  1    wreg      void 
  3403 ;; Registers used:
  3404 ;;		None
  3405 ;; Tracked objects:
  3406 ;;		On entry : 0/0
  3407 ;;		On exit  : 0/0
  3408 ;;		Unchanged: 0/0
  3409 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3410 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3411 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3412 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3413 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3414 ;;Total ram usage:        0 bytes
  3415 ;; Hardware stack levels used:    1
  3416 ;; Hardware stack levels required when called:   10
  3417 ;; This function calls:
  3418 ;;		Nothing
  3419 ;; This function is called by:
  3420 ;;		_TMR1_Initialize
  3421 ;;		_main
  3422 ;; This function uses a non-reentrant model
  3423 ;;
  3424                           
  3425                           
  3426                           ;psect for function _TMR1_StartTimer
  3427  0ABA                     _TMR1_StartTimer:	
  3428                           
  3429                           ;tmr1.c: 98: T1CONbits.TMR1ON = 1;
  3430                           
  3431                           ;incstack = 0
  3432                           ; Regs used in _TMR1_StartTimer: []
  3433  0ABA  0020               	movlb	0	; select bank0
  3434  0ABB  1418               	bsf	24,0	;volatile
  3435  0ABC  0008               	return
  3436  0ABD                     __end_of_TMR1_StartTimer:	
  3437                           
  3438                           	psect	text11
  3439  0B1F                     __ptext11:	
  3440 ;; *************** function _TMR1_SetInterruptHandler *****************
  3441 ;; Defined at:
  3442 ;;		line 171 in file "mcc_generated_files/tmr1.c"
  3443 ;; Parameters:    Size  Location     Type
  3444 ;;  InterruptHan    2    0[BANK1 ] PTR void 
  3445 ;;		 -> sleepyTickISR(1), tickISR(1), TMR1_DefaultInterruptHandler(1), 
  3446 ;; Auto vars:     Size  Location     Type
  3447 ;;		None
  3448 ;; Return value:  Size  Location     Type
  3449 ;;                  1    wreg      void 
  3450 ;; Registers used:
  3451 ;;		wreg
  3452 ;; Tracked objects:
  3453 ;;		On entry : 0/0
  3454 ;;		On exit  : 0/0
  3455 ;;		Unchanged: 0/0
  3456 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3457 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  3458 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3459 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3460 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  3461 ;;Total ram usage:        2 bytes
  3462 ;; Hardware stack levels used:    1
  3463 ;; Hardware stack levels required when called:   10
  3464 ;; This function calls:
  3465 ;;		Nothing
  3466 ;; This function is called by:
  3467 ;;		_TMR1_Initialize
  3468 ;;		_startup
  3469 ;; This function uses a non-reentrant model
  3470 ;;
  3471                           
  3472                           
  3473                           ;psect for function _TMR1_SetInterruptHandler
  3474  0B1F                     _TMR1_SetInterruptHandler:	
  3475                           
  3476                           ;tmr1.c: 172: TMR1_InterruptHandler = InterruptHandler;
  3477                           
  3478                           ;incstack = 0
  3479                           ; Regs used in _TMR1_SetInterruptHandler: [wreg]
  3480  0B1F  0021               	movlb	1	; select bank1
  3481  0B20  0848               	movf	(TMR1_SetInterruptHandler@InterruptHandler+1)^(0+128),w
  3482  0B21  00C1               	movwf	(_TMR1_InterruptHandler+1)^(0+128)
  3483  0B22  0847               	movf	TMR1_SetInterruptHandler@InterruptHandler^(0+128),w
  3484  0B23  00C0               	movwf	_TMR1_InterruptHandler^(0+128)
  3485  0B24  0008               	return
  3486  0B25                     __end_of_TMR1_SetInterruptHandler:	
  3487                           
  3488                           	psect	text12
  3489  0C2F                     __ptext12:	
  3490 ;; *************** function _TMR0_Initialize *****************
  3491 ;; Defined at:
  3492 ;;		line 63 in file "mcc_generated_files/tmr0.c"
  3493 ;; Parameters:    Size  Location     Type
  3494 ;;		None
  3495 ;; Auto vars:     Size  Location     Type
  3496 ;;		None
  3497 ;; Return value:  Size  Location     Type
  3498 ;;                  1    wreg      void 
  3499 ;; Registers used:
  3500 ;;		wreg, status,2, status,0, pclath, cstack
  3501 ;; Tracked objects:
  3502 ;;		On entry : 0/0
  3503 ;;		On exit  : 0/0
  3504 ;;		Unchanged: 0/0
  3505 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3506 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3507 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3508 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  3509 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  3510 ;;Total ram usage:        1 bytes
  3511 ;; Hardware stack levels used:    1
  3512 ;; Hardware stack levels required when called:   11
  3513 ;; This function calls:
  3514 ;;		_TMR0_SetInterruptHandler
  3515 ;; This function is called by:
  3516 ;;		_SYSTEM_Initialize
  3517 ;; This function uses a non-reentrant model
  3518 ;;
  3519                           
  3520                           
  3521                           ;psect for function _TMR0_Initialize
  3522  0C2F                     _TMR0_Initialize:	
  3523                           
  3524                           ;tmr0.c: 68: OPTION_REG = (OPTION_REG & 0xC0) | 0xD5 & 0x3F;
  3525                           
  3526                           ;incstack = 0
  3527                           ; Regs used in _TMR0_Initialize: [wreg+status,2+status,0+pclath+cstack]
  3528  0C2F  0021               	movlb	1	; select bank1
  3529  0C30  0815               	movf	21,w	;volatile
  3530  0C31  39C0               	andlw	192
  3531  0C32  3815               	iorlw	21
  3532  0C33  0095               	movwf	21	;volatile
  3533                           
  3534                           ;tmr0.c: 71: TMR0 = 0x16;
  3535  0C34  3016               	movlw	22
  3536  0C35  0020               	movlb	0	; select bank0
  3537  0C36  0095               	movwf	21	;volatile
  3538                           
  3539                           ;tmr0.c: 74: timer0ReloadVal= 22;
  3540  0C37  3016               	movlw	22
  3541  0C38  0021               	movlb	1	; select bank1
  3542  0C39  00C9               	movwf	??_TMR0_Initialize^(0+128)
  3543  0C3A  0849               	movf	??_TMR0_Initialize^(0+128),w
  3544  0C3B  00C6               	movwf	_timer0ReloadVal^(0+128)	;volatile
  3545                           
  3546                           ;tmr0.c: 77: INTCONbits.TMR0IF = 0;
  3547  0C3C  110B               	bcf	11,2	;volatile
  3548                           
  3549                           ;tmr0.c: 80: INTCONbits.TMR0IE = 1;
  3550  0C3D  168B               	bsf	11,5	;volatile
  3551                           
  3552                           ;tmr0.c: 83: TMR0_SetInterruptHandler(TMR0_DefaultInterruptHandler);
  3553  0C3E  3002               	movlw	low _TMR0_DefaultInterruptHandler
  3554  0C3F  00C7               	movwf	TMR0_SetInterruptHandler@InterruptHandler^(0+128)
  3555  0C40  3000               	movlw	high _TMR0_DefaultInterruptHandler
  3556  0C41  00C8               	movwf	(TMR0_SetInterruptHandler@InterruptHandler+1)^(0+128)
  3557  0C42  318B  2319         	fcall	_TMR0_SetInterruptHandler
  3558  0C44  0008               	return
  3559  0C45                     __end_of_TMR0_Initialize:	
  3560                           
  3561                           	psect	text13
  3562  0B19                     __ptext13:	
  3563 ;; *************** function _TMR0_SetInterruptHandler *****************
  3564 ;; Defined at:
  3565 ;;		line 125 in file "mcc_generated_files/tmr0.c"
  3566 ;; Parameters:    Size  Location     Type
  3567 ;;  InterruptHan    2    0[BANK1 ] PTR void 
  3568 ;;		 -> muxISR(1), TMR0_DefaultInterruptHandler(1), 
  3569 ;; Auto vars:     Size  Location     Type
  3570 ;;		None
  3571 ;; Return value:  Size  Location     Type
  3572 ;;                  1    wreg      void 
  3573 ;; Registers used:
  3574 ;;		wreg
  3575 ;; Tracked objects:
  3576 ;;		On entry : 0/0
  3577 ;;		On exit  : 0/0
  3578 ;;		Unchanged: 0/0
  3579 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3580 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  3581 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3582 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3583 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  3584 ;;Total ram usage:        2 bytes
  3585 ;; Hardware stack levels used:    1
  3586 ;; Hardware stack levels required when called:   10
  3587 ;; This function calls:
  3588 ;;		Nothing
  3589 ;; This function is called by:
  3590 ;;		_TMR0_Initialize
  3591 ;;		_startup
  3592 ;; This function uses a non-reentrant model
  3593 ;;
  3594                           
  3595                           
  3596                           ;psect for function _TMR0_SetInterruptHandler
  3597  0B19                     _TMR0_SetInterruptHandler:	
  3598                           
  3599                           ;tmr0.c: 126: TMR0_InterruptHandler = InterruptHandler;
  3600                           
  3601                           ;incstack = 0
  3602                           ; Regs used in _TMR0_SetInterruptHandler: [wreg]
  3603  0B19  0021               	movlb	1	; select bank1
  3604  0B1A  0848               	movf	(TMR0_SetInterruptHandler@InterruptHandler+1)^(0+128),w
  3605  0B1B  00C5               	movwf	(_TMR0_InterruptHandler+1)^(0+128)
  3606  0B1C  0847               	movf	TMR0_SetInterruptHandler@InterruptHandler^(0+128),w
  3607  0B1D  00C4               	movwf	_TMR0_InterruptHandler^(0+128)
  3608  0B1E  0008               	return
  3609  0B1F                     __end_of_TMR0_SetInterruptHandler:	
  3610                           
  3611                           	psect	text14
  3612  06B6                     __ptext14:	
  3613 ;; *************** function _PIN_MANAGER_Initialize *****************
  3614 ;; Defined at:
  3615 ;;		line 58 in file "mcc_generated_files/pin_manager.c"
  3616 ;; Parameters:    Size  Location     Type
  3617 ;;		None
  3618 ;; Auto vars:     Size  Location     Type
  3619 ;;		None
  3620 ;; Return value:  Size  Location     Type
  3621 ;;                  1    wreg      void 
  3622 ;; Registers used:
  3623 ;;		wreg, status,2, status,0, pclath, cstack
  3624 ;; Tracked objects:
  3625 ;;		On entry : 0/0
  3626 ;;		On exit  : 0/0
  3627 ;;		Unchanged: 0/0
  3628 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3629 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3630 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3631 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3632 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3633 ;;Total ram usage:        0 bytes
  3634 ;; Hardware stack levels used:    1
  3635 ;; Hardware stack levels required when called:   11
  3636 ;; This function calls:
  3637 ;;		_IOCBF0_SetInterruptHandler
  3638 ;;		_IOCBF1_SetInterruptHandler
  3639 ;;		_IOCBF2_SetInterruptHandler
  3640 ;;		_IOCBF3_SetInterruptHandler
  3641 ;;		_IOCBF4_SetInterruptHandler
  3642 ;;		_IOCBF5_SetInterruptHandler
  3643 ;; This function is called by:
  3644 ;;		_SYSTEM_Initialize
  3645 ;; This function uses a non-reentrant model
  3646 ;;
  3647                           
  3648                           
  3649                           ;psect for function _PIN_MANAGER_Initialize
  3650  06B6                     _PIN_MANAGER_Initialize:	
  3651                           
  3652                           ;pin_manager.c: 63: LATE = 0x00;
  3653                           
  3654                           ;incstack = 0
  3655                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2+status,0+pclath+cstack]
  3656  06B6  0022               	movlb	2	; select bank2
  3657  06B7  0190               	clrf	16	;volatile
  3658                           
  3659                           ;pin_manager.c: 64: LATD = 0x80;
  3660  06B8  3080               	movlw	128
  3661  06B9  008F               	movwf	15	;volatile
  3662                           
  3663                           ;pin_manager.c: 65: LATA = 0x02;
  3664  06BA  3002               	movlw	2
  3665  06BB  008C               	movwf	12	;volatile
  3666                           
  3667                           ;pin_manager.c: 66: LATB = 0x00;
  3668  06BC  018D               	clrf	13	;volatile
  3669                           
  3670                           ;pin_manager.c: 67: LATC = 0x00;
  3671  06BD  018E               	clrf	14	;volatile
  3672                           
  3673                           ;pin_manager.c: 72: TRISE = 0x00;
  3674  06BE  0021               	movlb	1	; select bank1
  3675  06BF  0190               	clrf	16	;volatile
  3676                           
  3677                           ;pin_manager.c: 73: TRISA = 0xF5;
  3678  06C0  30F5               	movlw	245
  3679  06C1  008C               	movwf	12	;volatile
  3680                           
  3681                           ;pin_manager.c: 74: TRISB = 0xFF;
  3682  06C2  30FF               	movlw	255
  3683  06C3  008D               	movwf	13	;volatile
  3684                           
  3685                           ;pin_manager.c: 75: TRISC = 0xE3;
  3686  06C4  30E3               	movlw	227
  3687  06C5  008E               	movwf	14	;volatile
  3688                           
  3689                           ;pin_manager.c: 76: TRISD = 0x00;
  3690  06C6  018F               	clrf	15	;volatile
  3691                           
  3692                           ;pin_manager.c: 81: ANSELC = 0x02;
  3693  06C7  3002               	movlw	2
  3694  06C8  0023               	movlb	3	; select bank3
  3695  06C9  008E               	movwf	14	;volatile
  3696                           
  3697                           ;pin_manager.c: 82: ANSELB = 0x00;
  3698  06CA  018D               	clrf	13	;volatile
  3699                           
  3700                           ;pin_manager.c: 83: ANSELD = 0x00;
  3701  06CB  018F               	clrf	15	;volatile
  3702                           
  3703                           ;pin_manager.c: 84: ANSELE = 0x00;
  3704  06CC  0190               	clrf	16	;volatile
  3705                           
  3706                           ;pin_manager.c: 85: ANSELA = 0x00;
  3707  06CD  018C               	clrf	12	;volatile
  3708                           
  3709                           ;pin_manager.c: 90: WPUE = 0x08;
  3710  06CE  3008               	movlw	8
  3711  06CF  0024               	movlb	4	; select bank4
  3712  06D0  0090               	movwf	16	;volatile
  3713                           
  3714                           ;pin_manager.c: 91: WPUB = 0xC0;
  3715  06D1  30C0               	movlw	192
  3716  06D2  008D               	movwf	13	;volatile
  3717                           
  3718                           ;pin_manager.c: 92: OPTION_REGbits.nWPUEN = 0;
  3719  06D3  0021               	movlb	1	; select bank1
  3720  06D4  1395               	bcf	21,7	;volatile
  3721                           
  3722                           ;pin_manager.c: 98: APFCON = 0x00;
  3723  06D5  0022               	movlb	2	; select bank2
  3724  06D6  019D               	clrf	29	;volatile
  3725                           
  3726                           ;pin_manager.c: 104: IOCBFbits.IOCBF0 = 0;
  3727  06D7  0027               	movlb	7	; select bank7
  3728  06D8  1016               	bcf	22,0	;volatile
  3729                           
  3730                           ;pin_manager.c: 105: IOCBFbits.IOCBF1 = 0;
  3731  06D9  1096               	bcf	22,1	;volatile
  3732                           
  3733                           ;pin_manager.c: 106: IOCBFbits.IOCBF2 = 0;
  3734  06DA  1116               	bcf	22,2	;volatile
  3735                           
  3736                           ;pin_manager.c: 107: IOCBFbits.IOCBF3 = 0;
  3737  06DB  1196               	bcf	22,3	;volatile
  3738                           
  3739                           ;pin_manager.c: 108: IOCBFbits.IOCBF4 = 0;
  3740  06DC  1216               	bcf	22,4	;volatile
  3741                           
  3742                           ;pin_manager.c: 109: IOCBFbits.IOCBF5 = 0;
  3743  06DD  1296               	bcf	22,5	;volatile
  3744                           
  3745                           ;pin_manager.c: 111: IOCBNbits.IOCBN0 = 1;
  3746  06DE  1415               	bsf	21,0	;volatile
  3747                           
  3748                           ;pin_manager.c: 112: IOCBNbits.IOCBN1 = 1;
  3749  06DF  1495               	bsf	21,1	;volatile
  3750                           
  3751                           ;pin_manager.c: 113: IOCBNbits.IOCBN2 = 1;
  3752  06E0  1515               	bsf	21,2	;volatile
  3753                           
  3754                           ;pin_manager.c: 114: IOCBNbits.IOCBN3 = 1;
  3755  06E1  1595               	bsf	21,3	;volatile
  3756                           
  3757                           ;pin_manager.c: 115: IOCBNbits.IOCBN4 = 1;
  3758  06E2  1615               	bsf	21,4	;volatile
  3759                           
  3760                           ;pin_manager.c: 116: IOCBNbits.IOCBN5 = 1;
  3761  06E3  1695               	bsf	21,5	;volatile
  3762                           
  3763                           ;pin_manager.c: 118: IOCBPbits.IOCBP0 = 0;
  3764  06E4  1014               	bcf	20,0	;volatile
  3765                           
  3766                           ;pin_manager.c: 119: IOCBPbits.IOCBP1 = 0;
  3767  06E5  1094               	bcf	20,1	;volatile
  3768                           
  3769                           ;pin_manager.c: 120: IOCBPbits.IOCBP2 = 0;
  3770  06E6  1114               	bcf	20,2	;volatile
  3771                           
  3772                           ;pin_manager.c: 121: IOCBPbits.IOCBP3 = 0;
  3773  06E7  1194               	bcf	20,3	;volatile
  3774                           
  3775                           ;pin_manager.c: 122: IOCBPbits.IOCBP4 = 1;
  3776  06E8  1614               	bsf	20,4	;volatile
  3777                           
  3778                           ;pin_manager.c: 123: IOCBPbits.IOCBP5 = 1;
  3779  06E9  1694               	bsf	20,5	;volatile
  3780                           
  3781                           ;pin_manager.c: 126: IOCBF0_SetInterruptHandler(IOCBF0_DefaultInterruptHandler);
  3782  06EA  30AB               	movlw	low _IOCBF0_DefaultInterruptHandler
  3783  06EB  0021               	movlb	1	; select bank1
  3784  06EC  00C7               	movwf	IOCBF0_SetInterruptHandler@InterruptHandler^(0+128)
  3785  06ED  300A               	movlw	high _IOCBF0_DefaultInterruptHandler
  3786  06EE  00C8               	movwf	(IOCBF0_SetInterruptHandler@InterruptHandler+1)^(0+128)
  3787  06EF  318A  22FB  3186   	fcall	_IOCBF0_SetInterruptHandler
  3788                           
  3789                           ;pin_manager.c: 127: IOCBF1_SetInterruptHandler(IOCBF1_DefaultInterruptHandler);
  3790  06F2  30AC               	movlw	low _IOCBF1_DefaultInterruptHandler
  3791  06F3  0021               	movlb	1	; select bank1
  3792  06F4  00C7               	movwf	IOCBF1_SetInterruptHandler@InterruptHandler^(0+128)
  3793  06F5  300A               	movlw	high _IOCBF1_DefaultInterruptHandler
  3794  06F6  00C8               	movwf	(IOCBF1_SetInterruptHandler@InterruptHandler+1)^(0+128)
  3795  06F7  318B  2301  3186   	fcall	_IOCBF1_SetInterruptHandler
  3796                           
  3797                           ;pin_manager.c: 128: IOCBF2_SetInterruptHandler(IOCBF2_DefaultInterruptHandler);
  3798  06FA  30AD               	movlw	low _IOCBF2_DefaultInterruptHandler
  3799  06FB  0021               	movlb	1	; select bank1
  3800  06FC  00C7               	movwf	IOCBF2_SetInterruptHandler@InterruptHandler^(0+128)
  3801  06FD  300A               	movlw	high _IOCBF2_DefaultInterruptHandler
  3802  06FE  00C8               	movwf	(IOCBF2_SetInterruptHandler@InterruptHandler+1)^(0+128)
  3803  06FF  318B  2307  3186   	fcall	_IOCBF2_SetInterruptHandler
  3804                           
  3805                           ;pin_manager.c: 129: IOCBF3_SetInterruptHandler(IOCBF3_DefaultInterruptHandler);
  3806  0702  30AE               	movlw	low _IOCBF3_DefaultInterruptHandler
  3807  0703  0021               	movlb	1	; select bank1
  3808  0704  00C7               	movwf	IOCBF3_SetInterruptHandler@InterruptHandler^(0+128)
  3809  0705  300A               	movlw	high _IOCBF3_DefaultInterruptHandler
  3810  0706  00C8               	movwf	(IOCBF3_SetInterruptHandler@InterruptHandler+1)^(0+128)
  3811  0707  318B  230D  3186   	fcall	_IOCBF3_SetInterruptHandler
  3812                           
  3813                           ;pin_manager.c: 130: IOCBF4_SetInterruptHandler(IOCBF4_DefaultInterruptHandler);
  3814  070A  30AF               	movlw	low _IOCBF4_DefaultInterruptHandler
  3815  070B  0021               	movlb	1	; select bank1
  3816  070C  00C7               	movwf	IOCBF4_SetInterruptHandler@InterruptHandler^(0+128)
  3817  070D  300A               	movlw	high _IOCBF4_DefaultInterruptHandler
  3818  070E  00C8               	movwf	(IOCBF4_SetInterruptHandler@InterruptHandler+1)^(0+128)
  3819  070F  318B  2343  3186   	fcall	_IOCBF4_SetInterruptHandler
  3820                           
  3821                           ;pin_manager.c: 131: IOCBF5_SetInterruptHandler(IOCBF5_DefaultInterruptHandler);
  3822  0712  30B0               	movlw	low _IOCBF5_DefaultInterruptHandler
  3823  0713  0021               	movlb	1	; select bank1
  3824  0714  00C7               	movwf	IOCBF5_SetInterruptHandler@InterruptHandler^(0+128)
  3825  0715  300A               	movlw	high _IOCBF5_DefaultInterruptHandler
  3826  0716  00C8               	movwf	(IOCBF5_SetInterruptHandler@InterruptHandler+1)^(0+128)
  3827  0717  318B  2313         	fcall	_IOCBF5_SetInterruptHandler
  3828                           
  3829                           ;pin_manager.c: 134: INTCONbits.IOCIE = 1;
  3830  0719  158B               	bsf	11,3	;volatile
  3831  071A  0008               	return
  3832  071B                     __end_of_PIN_MANAGER_Initialize:	
  3833                           
  3834                           	psect	text15
  3835  0B13                     __ptext15:	
  3836 ;; *************** function _IOCBF5_SetInterruptHandler *****************
  3837 ;; Defined at:
  3838 ;;		line 347 in file "mcc_generated_files/pin_manager.c"
  3839 ;; Parameters:    Size  Location     Type
  3840 ;;  InterruptHan    2    0[BANK1 ] PTR void 
  3841 ;;		 -> IOCBF5_DefaultInterruptHandler(1), 
  3842 ;; Auto vars:     Size  Location     Type
  3843 ;;		None
  3844 ;; Return value:  Size  Location     Type
  3845 ;;                  1    wreg      void 
  3846 ;; Registers used:
  3847 ;;		wreg
  3848 ;; Tracked objects:
  3849 ;;		On entry : 0/0
  3850 ;;		On exit  : 0/0
  3851 ;;		Unchanged: 0/0
  3852 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3853 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  3854 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3855 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3856 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  3857 ;;Total ram usage:        2 bytes
  3858 ;; Hardware stack levels used:    1
  3859 ;; Hardware stack levels required when called:   10
  3860 ;; This function calls:
  3861 ;;		Nothing
  3862 ;; This function is called by:
  3863 ;;		_PIN_MANAGER_Initialize
  3864 ;; This function uses a non-reentrant model
  3865 ;;
  3866                           
  3867                           
  3868                           ;psect for function _IOCBF5_SetInterruptHandler
  3869  0B13                     _IOCBF5_SetInterruptHandler:	
  3870                           
  3871                           ;pin_manager.c: 348: IOCBF5_InterruptHandler = InterruptHandler;
  3872                           
  3873                           ;incstack = 0
  3874                           ; Regs used in _IOCBF5_SetInterruptHandler: [wreg]
  3875  0B13  0021               	movlb	1	; select bank1
  3876  0B14  0848               	movf	(IOCBF5_SetInterruptHandler@InterruptHandler+1)^(0+128),w
  3877  0B15  00B5               	movwf	(_IOCBF5_InterruptHandler+1)^(0+128)
  3878  0B16  0847               	movf	IOCBF5_SetInterruptHandler@InterruptHandler^(0+128),w
  3879  0B17  00B4               	movwf	_IOCBF5_InterruptHandler^(0+128)
  3880  0B18  0008               	return
  3881  0B19                     __end_of_IOCBF5_SetInterruptHandler:	
  3882                           
  3883                           	psect	text16
  3884  0B43                     __ptext16:	
  3885 ;; *************** function _IOCBF4_SetInterruptHandler *****************
  3886 ;; Defined at:
  3887 ;;		line 317 in file "mcc_generated_files/pin_manager.c"
  3888 ;; Parameters:    Size  Location     Type
  3889 ;;  InterruptHan    2    0[BANK1 ] PTR void 
  3890 ;;		 -> powerFailISR(1), IOCBF4_DefaultInterruptHandler(1), 
  3891 ;; Auto vars:     Size  Location     Type
  3892 ;;		None
  3893 ;; Return value:  Size  Location     Type
  3894 ;;                  1    wreg      void 
  3895 ;; Registers used:
  3896 ;;		wreg
  3897 ;; Tracked objects:
  3898 ;;		On entry : 0/0
  3899 ;;		On exit  : 0/0
  3900 ;;		Unchanged: 0/0
  3901 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3902 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  3903 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3904 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3905 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  3906 ;;Total ram usage:        2 bytes
  3907 ;; Hardware stack levels used:    1
  3908 ;; Hardware stack levels required when called:   10
  3909 ;; This function calls:
  3910 ;;		Nothing
  3911 ;; This function is called by:
  3912 ;;		_PIN_MANAGER_Initialize
  3913 ;;		_startup
  3914 ;; This function uses a non-reentrant model
  3915 ;;
  3916                           
  3917                           
  3918                           ;psect for function _IOCBF4_SetInterruptHandler
  3919  0B43                     _IOCBF4_SetInterruptHandler:	
  3920                           
  3921                           ;pin_manager.c: 318: IOCBF4_InterruptHandler = InterruptHandler;
  3922                           
  3923                           ;incstack = 0
  3924                           ; Regs used in _IOCBF4_SetInterruptHandler: [wreg]
  3925  0B43  0021               	movlb	1	; select bank1
  3926  0B44  0848               	movf	(IOCBF4_SetInterruptHandler@InterruptHandler+1)^(0+128),w
  3927  0B45  0020               	movlb	0	; select bank0
  3928  0B46  00ED               	movwf	_IOCBF4_InterruptHandler+1
  3929  0B47  0021               	movlb	1	; select bank1
  3930  0B48  0847               	movf	IOCBF4_SetInterruptHandler@InterruptHandler^(0+128),w
  3931  0B49  0020               	movlb	0	; select bank0
  3932  0B4A  00EC               	movwf	_IOCBF4_InterruptHandler
  3933  0B4B  0008               	return
  3934  0B4C                     __end_of_IOCBF4_SetInterruptHandler:	
  3935                           
  3936                           	psect	text17
  3937  0B0D                     __ptext17:	
  3938 ;; *************** function _IOCBF3_SetInterruptHandler *****************
  3939 ;; Defined at:
  3940 ;;		line 287 in file "mcc_generated_files/pin_manager.c"
  3941 ;; Parameters:    Size  Location     Type
  3942 ;;  InterruptHan    2    0[BANK1 ] PTR void 
  3943 ;;		 -> displayToggleISR(1), IOCBF3_DefaultInterruptHandler(1), 
  3944 ;; Auto vars:     Size  Location     Type
  3945 ;;		None
  3946 ;; Return value:  Size  Location     Type
  3947 ;;                  1    wreg      void 
  3948 ;; Registers used:
  3949 ;;		wreg
  3950 ;; Tracked objects:
  3951 ;;		On entry : 0/0
  3952 ;;		On exit  : 0/0
  3953 ;;		Unchanged: 0/0
  3954 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3955 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  3956 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3957 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3958 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  3959 ;;Total ram usage:        2 bytes
  3960 ;; Hardware stack levels used:    1
  3961 ;; Hardware stack levels required when called:   10
  3962 ;; This function calls:
  3963 ;;		Nothing
  3964 ;; This function is called by:
  3965 ;;		_PIN_MANAGER_Initialize
  3966 ;;		_startup
  3967 ;; This function uses a non-reentrant model
  3968 ;;
  3969                           
  3970                           
  3971                           ;psect for function _IOCBF3_SetInterruptHandler
  3972  0B0D                     _IOCBF3_SetInterruptHandler:	
  3973                           
  3974                           ;pin_manager.c: 288: IOCBF3_InterruptHandler = InterruptHandler;
  3975                           
  3976                           ;incstack = 0
  3977                           ; Regs used in _IOCBF3_SetInterruptHandler: [wreg]
  3978  0B0D  0021               	movlb	1	; select bank1
  3979  0B0E  0848               	movf	(IOCBF3_SetInterruptHandler@InterruptHandler+1)^(0+128),w
  3980  0B0F  00B7               	movwf	(_IOCBF3_InterruptHandler+1)^(0+128)
  3981  0B10  0847               	movf	IOCBF3_SetInterruptHandler@InterruptHandler^(0+128),w
  3982  0B11  00B6               	movwf	_IOCBF3_InterruptHandler^(0+128)
  3983  0B12  0008               	return
  3984  0B13                     __end_of_IOCBF3_SetInterruptHandler:	
  3985                           
  3986                           	psect	text18
  3987  0B07                     __ptext18:	
  3988 ;; *************** function _IOCBF2_SetInterruptHandler *****************
  3989 ;; Defined at:
  3990 ;;		line 257 in file "mcc_generated_files/pin_manager.c"
  3991 ;; Parameters:    Size  Location     Type
  3992 ;;  InterruptHan    2    0[BANK1 ] PTR void 
  3993 ;;		 -> setHoursISR(1), IOCBF2_DefaultInterruptHandler(1), 
  3994 ;; Auto vars:     Size  Location     Type
  3995 ;;		None
  3996 ;; Return value:  Size  Location     Type
  3997 ;;                  1    wreg      void 
  3998 ;; Registers used:
  3999 ;;		wreg
  4000 ;; Tracked objects:
  4001 ;;		On entry : 0/0
  4002 ;;		On exit  : 0/0
  4003 ;;		Unchanged: 0/0
  4004 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4005 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  4006 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4007 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4008 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  4009 ;;Total ram usage:        2 bytes
  4010 ;; Hardware stack levels used:    1
  4011 ;; Hardware stack levels required when called:   10
  4012 ;; This function calls:
  4013 ;;		Nothing
  4014 ;; This function is called by:
  4015 ;;		_PIN_MANAGER_Initialize
  4016 ;;		_startup
  4017 ;; This function uses a non-reentrant model
  4018 ;;
  4019                           
  4020                           
  4021                           ;psect for function _IOCBF2_SetInterruptHandler
  4022  0B07                     _IOCBF2_SetInterruptHandler:	
  4023                           
  4024                           ;pin_manager.c: 258: IOCBF2_InterruptHandler = InterruptHandler;
  4025                           
  4026                           ;incstack = 0
  4027                           ; Regs used in _IOCBF2_SetInterruptHandler: [wreg]
  4028  0B07  0021               	movlb	1	; select bank1
  4029  0B08  0848               	movf	(IOCBF2_SetInterruptHandler@InterruptHandler+1)^(0+128),w
  4030  0B09  00B9               	movwf	(_IOCBF2_InterruptHandler+1)^(0+128)
  4031  0B0A  0847               	movf	IOCBF2_SetInterruptHandler@InterruptHandler^(0+128),w
  4032  0B0B  00B8               	movwf	_IOCBF2_InterruptHandler^(0+128)
  4033  0B0C  0008               	return
  4034  0B0D                     __end_of_IOCBF2_SetInterruptHandler:	
  4035                           
  4036                           	psect	text19
  4037  0B01                     __ptext19:	
  4038 ;; *************** function _IOCBF1_SetInterruptHandler *****************
  4039 ;; Defined at:
  4040 ;;		line 227 in file "mcc_generated_files/pin_manager.c"
  4041 ;; Parameters:    Size  Location     Type
  4042 ;;  InterruptHan    2    0[BANK1 ] PTR void 
  4043 ;;		 -> setMinutesISR(1), IOCBF1_DefaultInterruptHandler(1), 
  4044 ;; Auto vars:     Size  Location     Type
  4045 ;;		None
  4046 ;; Return value:  Size  Location     Type
  4047 ;;                  1    wreg      void 
  4048 ;; Registers used:
  4049 ;;		wreg
  4050 ;; Tracked objects:
  4051 ;;		On entry : 0/0
  4052 ;;		On exit  : 0/0
  4053 ;;		Unchanged: 0/0
  4054 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4055 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  4056 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4057 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4058 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  4059 ;;Total ram usage:        2 bytes
  4060 ;; Hardware stack levels used:    1
  4061 ;; Hardware stack levels required when called:   10
  4062 ;; This function calls:
  4063 ;;		Nothing
  4064 ;; This function is called by:
  4065 ;;		_PIN_MANAGER_Initialize
  4066 ;;		_startup
  4067 ;; This function uses a non-reentrant model
  4068 ;;
  4069                           
  4070                           
  4071                           ;psect for function _IOCBF1_SetInterruptHandler
  4072  0B01                     _IOCBF1_SetInterruptHandler:	
  4073                           
  4074                           ;pin_manager.c: 228: IOCBF1_InterruptHandler = InterruptHandler;
  4075                           
  4076                           ;incstack = 0
  4077                           ; Regs used in _IOCBF1_SetInterruptHandler: [wreg]
  4078  0B01  0021               	movlb	1	; select bank1
  4079  0B02  0848               	movf	(IOCBF1_SetInterruptHandler@InterruptHandler+1)^(0+128),w
  4080  0B03  00BB               	movwf	(_IOCBF1_InterruptHandler+1)^(0+128)
  4081  0B04  0847               	movf	IOCBF1_SetInterruptHandler@InterruptHandler^(0+128),w
  4082  0B05  00BA               	movwf	_IOCBF1_InterruptHandler^(0+128)
  4083  0B06  0008               	return
  4084  0B07                     __end_of_IOCBF1_SetInterruptHandler:	
  4085                           
  4086                           	psect	text20
  4087  0AFB                     __ptext20:	
  4088 ;; *************** function _IOCBF0_SetInterruptHandler *****************
  4089 ;; Defined at:
  4090 ;;		line 197 in file "mcc_generated_files/pin_manager.c"
  4091 ;; Parameters:    Size  Location     Type
  4092 ;;  InterruptHan    2    0[BANK1 ] PTR void 
  4093 ;;		 -> setSecondsISR(1), IOCBF0_DefaultInterruptHandler(1), 
  4094 ;; Auto vars:     Size  Location     Type
  4095 ;;		None
  4096 ;; Return value:  Size  Location     Type
  4097 ;;                  1    wreg      void 
  4098 ;; Registers used:
  4099 ;;		wreg
  4100 ;; Tracked objects:
  4101 ;;		On entry : 0/0
  4102 ;;		On exit  : 0/0
  4103 ;;		Unchanged: 0/0
  4104 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4105 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  4106 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4107 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4108 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  4109 ;;Total ram usage:        2 bytes
  4110 ;; Hardware stack levels used:    1
  4111 ;; Hardware stack levels required when called:   10
  4112 ;; This function calls:
  4113 ;;		Nothing
  4114 ;; This function is called by:
  4115 ;;		_PIN_MANAGER_Initialize
  4116 ;;		_startup
  4117 ;; This function uses a non-reentrant model
  4118 ;;
  4119                           
  4120                           
  4121                           ;psect for function _IOCBF0_SetInterruptHandler
  4122  0AFB                     _IOCBF0_SetInterruptHandler:	
  4123                           
  4124                           ;pin_manager.c: 198: IOCBF0_InterruptHandler = InterruptHandler;
  4125                           
  4126                           ;incstack = 0
  4127                           ; Regs used in _IOCBF0_SetInterruptHandler: [wreg]
  4128  0AFB  0021               	movlb	1	; select bank1
  4129  0AFC  0848               	movf	(IOCBF0_SetInterruptHandler@InterruptHandler+1)^(0+128),w
  4130  0AFD  00BD               	movwf	(_IOCBF0_InterruptHandler+1)^(0+128)
  4131  0AFE  0847               	movf	IOCBF0_SetInterruptHandler@InterruptHandler^(0+128),w
  4132  0AFF  00BC               	movwf	_IOCBF0_InterruptHandler^(0+128)
  4133  0B00  0008               	return
  4134  0B01                     __end_of_IOCBF0_SetInterruptHandler:	
  4135                           
  4136                           	psect	text21
  4137  0AC3                     __ptext21:	
  4138 ;; *************** function _OSCILLATOR_Initialize *****************
  4139 ;; Defined at:
  4140 ;;		line 85 in file "mcc_generated_files/mcc.c"
  4141 ;; Parameters:    Size  Location     Type
  4142 ;;		None
  4143 ;; Auto vars:     Size  Location     Type
  4144 ;;		None
  4145 ;; Return value:  Size  Location     Type
  4146 ;;                  1    wreg      void 
  4147 ;; Registers used:
  4148 ;;		wreg
  4149 ;; Tracked objects:
  4150 ;;		On entry : 0/0
  4151 ;;		On exit  : 0/0
  4152 ;;		Unchanged: 0/0
  4153 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4154 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4155 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4156 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4157 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4158 ;;Total ram usage:        0 bytes
  4159 ;; Hardware stack levels used:    1
  4160 ;; Hardware stack levels required when called:   10
  4161 ;; This function calls:
  4162 ;;		Nothing
  4163 ;; This function is called by:
  4164 ;;		_SYSTEM_Initialize
  4165 ;; This function uses a non-reentrant model
  4166 ;;
  4167                           
  4168                           
  4169                           ;psect for function _OSCILLATOR_Initialize
  4170  0AC3                     _OSCILLATOR_Initialize:	
  4171                           
  4172                           ;mcc.c: 88: OSCCON = 0x50;
  4173                           
  4174                           ;incstack = 0
  4175                           ; Regs used in _OSCILLATOR_Initialize: [wreg]
  4176  0AC3  3050               	movlw	80
  4177  0AC4  0021               	movlb	1	; select bank1
  4178  0AC5  0099               	movwf	25	;volatile
  4179  0AC6  0008               	return
  4180  0AC7                     __end_of_OSCILLATOR_Initialize:	
  4181                           
  4182                           	psect	intentry
  4183  0004                     __pintentry:	
  4184 ;; *************** function _INTERRUPT_InterruptManager *****************
  4185 ;; Defined at:
  4186 ;;		line 51 in file "mcc_generated_files/interrupt_manager.c"
  4187 ;; Parameters:    Size  Location     Type
  4188 ;;		None
  4189 ;; Auto vars:     Size  Location     Type
  4190 ;;		None
  4191 ;; Return value:  Size  Location     Type
  4192 ;;                  1    wreg      void 
  4193 ;; Registers used:
  4194 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4195 ;; Tracked objects:
  4196 ;;		On entry : 0/0
  4197 ;;		On exit  : 0/0
  4198 ;;		Unchanged: 0/0
  4199 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4200 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4201 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4202 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4203 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4204 ;;Total ram usage:        1 bytes
  4205 ;; Hardware stack levels used:    1
  4206 ;; Hardware stack levels required when called:    9
  4207 ;; This function calls:
  4208 ;;		_PIN_MANAGER_IOC
  4209 ;;		_TMR0_ISR
  4210 ;;		_TMR1_ISR
  4211 ;;		_TMR2_ISR
  4212 ;; This function is called by:
  4213 ;;		Interrupt level 1
  4214 ;; This function uses a non-reentrant model
  4215 ;;
  4216                           
  4217  0004                     _INTERRUPT_InterruptManager:	
  4218                           
  4219                           ;incstack = 0
  4220  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  4221                           
  4222                           ; Regs used in _INTERRUPT_InterruptManager: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4223  0005  3180               	pagesel	$
  4224  0006  0020               	movlb	0	; select bank0
  4225  0007  087F               	movf	127,w
  4226  0008  00D6               	movwf	??_INTERRUPT_InterruptManager
  4227                           
  4228                           ;interrupt_manager.c: 54: if(INTCONbits.TMR0IE == 1 && INTCONbits.TMR0IF == 1)
  4229  0009  1A8B               	btfsc	11,5	;volatile
  4230  000A  1D0B               	btfss	11,2	;volatile
  4231  000B  2810               	goto	i1l165
  4232                           
  4233                           ;interrupt_manager.c: 55: {
  4234                           ;interrupt_manager.c: 56: TMR0_ISR();
  4235  000C  318B  23C0  3180   	fcall	_TMR0_ISR
  4236                           
  4237                           ;interrupt_manager.c: 57: }
  4238  000F  282D               	goto	i1l173
  4239  0010                     i1l165:	
  4240                           
  4241                           ;interrupt_manager.c: 58: else if(INTCONbits.PEIE == 1 && PIE1bits.TMR2IE == 1 && PIR1bi
      +                          ts.TMR2IF == 1)
  4242  0010  1F0B               	btfss	11,6	;volatile
  4243  0011  281C               	goto	i1l167
  4244  0012  0021               	movlb	1	; select bank1
  4245  0013  1C91               	btfss	17,1	;volatile
  4246  0014  281C               	goto	i1l167
  4247  0015  0020               	movlb	0	; select bank0
  4248  0016  1C91               	btfss	17,1	;volatile
  4249  0017  281C               	goto	i1l167
  4250                           
  4251                           ;interrupt_manager.c: 59: {
  4252                           ;interrupt_manager.c: 60: TMR2_ISR();
  4253  0018  318B  23B3  3180   	fcall	_TMR2_ISR
  4254                           
  4255                           ;interrupt_manager.c: 61: }
  4256  001B  282D               	goto	i1l173
  4257  001C                     i1l167:	
  4258                           
  4259                           ;interrupt_manager.c: 62: else if(INTCONbits.PEIE == 1 && PIE1bits.TMR1IE == 1 && PIR1bi
      +                          ts.TMR1IF == 1)
  4260  001C  1F0B               	btfss	11,6	;volatile
  4261  001D  2828               	goto	i1l169
  4262  001E  0021               	movlb	1	; select bank1
  4263  001F  1C11               	btfss	17,0	;volatile
  4264  0020  2828               	goto	i1l169
  4265  0021  0020               	movlb	0	; select bank0
  4266  0022  1C11               	btfss	17,0	;volatile
  4267  0023  2828               	goto	i1l169
  4268                           
  4269                           ;interrupt_manager.c: 63: {
  4270                           ;interrupt_manager.c: 64: TMR1_ISR();
  4271  0024  318C  241A  3180   	fcall	_TMR1_ISR
  4272                           
  4273                           ;interrupt_manager.c: 65: }
  4274  0027  282D               	goto	i1l173
  4275  0028                     i1l169:	
  4276                           
  4277                           ;interrupt_manager.c: 66: else if(INTCONbits.IOCIE == 1 && INTCONbits.IOCIF == 1)
  4278  0028  198B               	btfsc	11,3	;volatile
  4279  0029  1C0B               	btfss	11,0	;volatile
  4280  002A  282D               	goto	i1l173
  4281                           
  4282                           ;interrupt_manager.c: 67: {
  4283                           ;interrupt_manager.c: 68: PIN_MANAGER_IOC();
  4284  002B  318D  2542         	fcall	_PIN_MANAGER_IOC
  4285  002D                     i1l173:	
  4286                           ;interrupt_manager.c: 70: else
  4287                           ;interrupt_manager.c: 71: {
  4288                           
  4289                           ;interrupt_manager.c: 69: }
  4290                           
  4291  002D  0020               	movlb	0	; select bank0
  4292  002E  0856               	movf	??_INTERRUPT_InterruptManager,w
  4293  002F  00FF               	movwf	127
  4294  0030  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  4295  0031  0009               	retfie
  4296  0032                     __end_of_INTERRUPT_InterruptManager:	
  4297                           
  4298                           	psect	text23
  4299  0BB3                     __ptext23:	
  4300 ;; *************** function _TMR2_ISR *****************
  4301 ;; Defined at:
  4302 ;;		line 124 in file "mcc_generated_files/tmr2.c"
  4303 ;; Parameters:    Size  Location     Type
  4304 ;;		None
  4305 ;; Auto vars:     Size  Location     Type
  4306 ;;		None
  4307 ;; Return value:  Size  Location     Type
  4308 ;;                  1    wreg      void 
  4309 ;; Registers used:
  4310 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4311 ;; Tracked objects:
  4312 ;;		On entry : 0/0
  4313 ;;		On exit  : 0/0
  4314 ;;		Unchanged: 0/0
  4315 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4316 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4317 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4318 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4319 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4320 ;;Total ram usage:        0 bytes
  4321 ;; Hardware stack levels used:    1
  4322 ;; Hardware stack levels required when called:    2
  4323 ;; This function calls:
  4324 ;;		Absolute function
  4325 ;;		_TMR2_DefaultInterruptHandler
  4326 ;;		_blankISR
  4327 ;; This function is called by:
  4328 ;;		_INTERRUPT_InterruptManager
  4329 ;; This function uses a non-reentrant model
  4330 ;;
  4331                           
  4332                           
  4333                           ;psect for function _TMR2_ISR
  4334  0BB3                     _TMR2_ISR:	
  4335                           
  4336                           ;tmr2.c: 128: PIR1bits.TMR2IF = 0;
  4337                           
  4338                           ;incstack = 0
  4339                           ; Regs used in _TMR2_ISR: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4340  0BB3  0020               	movlb	0	; select bank0
  4341  0BB4  1091               	bcf	17,1	;volatile
  4342                           
  4343                           ;tmr2.c: 130: if(TMR2_InterruptHandler)
  4344  0BB5  0021               	movlb	1	; select bank1
  4345  0BB6  083E               	movf	_TMR2_InterruptHandler^(0+128),w
  4346  0BB7  043F               	iorwf	(_TMR2_InterruptHandler+1)^(0+128),w
  4347  0BB8  1903               	btfsc	3,2
  4348  0BB9  0008               	return
  4349                           
  4350                           ;tmr2.c: 131: {
  4351                           ;tmr2.c: 132: TMR2_InterruptHandler();
  4352  0BBA  083F               	movf	(_TMR2_InterruptHandler+1)^(0+128),w
  4353  0BBB  008A               	movwf	10
  4354  0BBC  083E               	movf	_TMR2_InterruptHandler^(0+128),w
  4355  0BBD  000A               	callw
  4356  0BBE  318B               	pagesel	$
  4357  0BBF  0008               	return
  4358  0BC0                     __end_of_TMR2_ISR:	
  4359                           
  4360                           	psect	text24
  4361  07FF                     __ptext24:	
  4362 ;; *************** function _TMR2_DefaultInterruptHandler *****************
  4363 ;; Defined at:
  4364 ;;		line 141 in file "mcc_generated_files/tmr2.c"
  4365 ;; Parameters:    Size  Location     Type
  4366 ;;		None
  4367 ;; Auto vars:     Size  Location     Type
  4368 ;;		None
  4369 ;; Return value:  Size  Location     Type
  4370 ;;                  1    wreg      void 
  4371 ;; Registers used:
  4372 ;;		None
  4373 ;; Tracked objects:
  4374 ;;		On entry : 0/0
  4375 ;;		On exit  : 0/0
  4376 ;;		Unchanged: 0/0
  4377 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4378 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4379 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4380 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4381 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4382 ;;Total ram usage:        0 bytes
  4383 ;; Hardware stack levels used:    1
  4384 ;; This function calls:
  4385 ;;		Nothing
  4386 ;; This function is called by:
  4387 ;;		_TMR2_Initialize
  4388 ;;		_TMR2_ISR
  4389 ;; This function uses a non-reentrant model
  4390 ;;
  4391                           
  4392                           
  4393                           ;psect for function _TMR2_DefaultInterruptHandler
  4394  07FF                     _TMR2_DefaultInterruptHandler:	
  4395                           
  4396                           ;incstack = 0
  4397                           ; Regs used in _TMR2_DefaultInterruptHandler: []
  4398  07FF  0008               	return
  4399  0800                     __end_of_TMR2_DefaultInterruptHandler:	
  4400                           
  4401                           	psect	text25
  4402  0BA6                     __ptext25:	
  4403 ;; *************** function _blankISR *****************
  4404 ;; Defined at:
  4405 ;;		line 253 in file "clock_functions.c"
  4406 ;; Parameters:    Size  Location     Type
  4407 ;;		None
  4408 ;; Auto vars:     Size  Location     Type
  4409 ;;		None
  4410 ;; Return value:  Size  Location     Type
  4411 ;;                  1    wreg      void 
  4412 ;; Registers used:
  4413 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4414 ;; Tracked objects:
  4415 ;;		On entry : 0/0
  4416 ;;		On exit  : 0/0
  4417 ;;		Unchanged: 0/0
  4418 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4419 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4420 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4421 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4422 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4423 ;;Total ram usage:        0 bytes
  4424 ;; Hardware stack levels used:    1
  4425 ;; Hardware stack levels required when called:    1
  4426 ;; This function calls:
  4427 ;;		_groundCathode
  4428 ;;		i1_TMR2_StopTimer
  4429 ;; This function is called by:
  4430 ;;		_startup
  4431 ;;		_wakeup
  4432 ;;		_TMR2_ISR
  4433 ;; This function uses a non-reentrant model
  4434 ;;
  4435                           
  4436                           
  4437                           ;psect for function _blankISR
  4438  0BA6                     _blankISR:	
  4439                           
  4440                           ;clock_functions.c: 260: TMR2_StopTimer();
  4441                           
  4442                           ;incstack = 0
  4443                           ; Regs used in _blankISR: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4444  0BA6  318A  22B4  318B   	fcall	i1_TMR2_StopTimer
  4445                           
  4446                           ;clock_functions.c: 263: TMR2 = 0;
  4447  0BA9  0020               	movlb	0	; select bank0
  4448  0BAA  019A               	clrf	26	;volatile
  4449                           
  4450                           ;clock_functions.c: 266: groundCathode();
  4451  0BAB  318B  23D0         	fcall	_groundCathode
  4452                           
  4453                           ;clock_functions.c: 269: mux_digit++;
  4454  0BAD  3001               	movlw	1
  4455  0BAE  0020               	movlb	0	; select bank0
  4456  0BAF  07EA               	addwf	_mux_digit,f	;volatile
  4457  0BB0  3000               	movlw	0
  4458  0BB1  3DEB               	addwfc	_mux_digit+1,f	;volatile
  4459  0BB2  0008               	return
  4460  0BB3                     __end_of_blankISR:	
  4461                           
  4462                           	psect	text26
  4463  0BD0                     __ptext26:	
  4464 ;; *************** function _groundCathode *****************
  4465 ;; Defined at:
  4466 ;;		line 961 in file "clock_functions.c"
  4467 ;; Parameters:    Size  Location     Type
  4468 ;;		None
  4469 ;; Auto vars:     Size  Location     Type
  4470 ;;		None
  4471 ;; Return value:  Size  Location     Type
  4472 ;;                  1    wreg      void 
  4473 ;; Registers used:
  4474 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  4475 ;; Tracked objects:
  4476 ;;		On entry : 0/0
  4477 ;;		On exit  : 0/0
  4478 ;;		Unchanged: 0/0
  4479 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4480 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4481 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4482 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4483 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4484 ;;Total ram usage:        0 bytes
  4485 ;; Hardware stack levels used:    1
  4486 ;; This function calls:
  4487 ;;		Nothing
  4488 ;; This function is called by:
  4489 ;;		_blankISR
  4490 ;; This function uses a non-reentrant model
  4491 ;;
  4492                           
  4493                           
  4494                           ;psect for function _groundCathode
  4495  0BD0                     _groundCathode:	
  4496                           
  4497                           ;clock_functions.c: 968: LATDbits.LATD7 = 1;
  4498                           
  4499                           ;incstack = 0
  4500                           ; Regs used in _groundCathode: [wreg+fsr1l+fsr1h+status,2+status,0]
  4501  0BD0  0022               	movlb	2	; select bank2
  4502  0BD1  178F               	bsf	15,7	;volatile
  4503                           
  4504                           ;clock_functions.c: 969: ParallelPort.BCD = mux_numeral[mux_digit];
  4505  0BD2  0020               	movlb	0	; select bank0
  4506  0BD3  356A               	lslf	_mux_digit,w	;volatile
  4507  0BD4  3EA0               	addlw	(low (_mux_numeral| 0))& (0+255)
  4508  0BD5  0086               	movwf	6
  4509  0BD6  0187               	clrf	7
  4510  0BD7  0022               	movlb	2	; select bank2
  4511  0BD8  080F               	movf	15,w	;volatile
  4512  0BD9  0601               	xorwf	1,w
  4513  0BDA  39F0               	andlw	-16
  4514  0BDB  0601               	xorwf	1,w
  4515  0BDC  008F               	movwf	15	;volatile
  4516                           
  4517                           ;clock_functions.c: 970: ParallelPort.BCO = 7;
  4518  0BDD  3070               	movlw	112
  4519  0BDE  048F               	iorwf	15,f	;volatile
  4520                           
  4521                           ;clock_functions.c: 971: LATDbits.LATD7 = 0;
  4522  0BDF  138F               	bcf	15,7	;volatile
  4523  0BE0  0008               	return
  4524  0BE1                     __end_of_groundCathode:	
  4525                           
  4526                           	psect	text27
  4527  0C1A                     __ptext27:	
  4528 ;; *************** function _TMR1_ISR *****************
  4529 ;; Defined at:
  4530 ;;		line 155 in file "mcc_generated_files/tmr1.c"
  4531 ;; Parameters:    Size  Location     Type
  4532 ;;		None
  4533 ;; Auto vars:     Size  Location     Type
  4534 ;;		None
  4535 ;; Return value:  Size  Location     Type
  4536 ;;                  1    wreg      void 
  4537 ;; Registers used:
  4538 ;;		wreg, status,2, status,0, pclath, cstack
  4539 ;; Tracked objects:
  4540 ;;		On entry : 0/0
  4541 ;;		On exit  : 0/0
  4542 ;;		Unchanged: 0/0
  4543 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4544 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4545 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4546 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4547 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4548 ;;Total ram usage:        0 bytes
  4549 ;; Hardware stack levels used:    1
  4550 ;; Hardware stack levels required when called:    3
  4551 ;; This function calls:
  4552 ;;		Absolute function
  4553 ;;		_TMR1_DefaultInterruptHandler
  4554 ;;		_sleepyTickISR
  4555 ;;		_tickISR
  4556 ;; This function is called by:
  4557 ;;		_INTERRUPT_InterruptManager
  4558 ;; This function uses a non-reentrant model
  4559 ;;
  4560                           
  4561                           
  4562                           ;psect for function _TMR1_ISR
  4563  0C1A                     _TMR1_ISR:	
  4564                           
  4565                           ;tmr1.c: 159: PIR1bits.TMR1IF = 0;
  4566                           
  4567                           ;incstack = 0
  4568                           ; Regs used in _TMR1_ISR: [wreg+status,2+status,0+pclath+cstack]
  4569  0C1A  0020               	movlb	0	; select bank0
  4570  0C1B  1011               	bcf	17,0	;volatile
  4571                           
  4572                           ;tmr1.c: 161: TMR1H = (timer1ReloadVal >> 8);
  4573  0C1C  0021               	movlb	1	; select bank1
  4574  0C1D  0843               	movf	(_timer1ReloadVal+1)^(0+128),w	;volatile
  4575  0C1E  0020               	movlb	0	; select bank0
  4576  0C1F  0097               	movwf	23	;volatile
  4577                           
  4578                           ;tmr1.c: 162: TMR1L = timer1ReloadVal;
  4579  0C20  0021               	movlb	1	; select bank1
  4580  0C21  0842               	movf	_timer1ReloadVal^(0+128),w	;volatile
  4581  0C22  0020               	movlb	0	; select bank0
  4582  0C23  0096               	movwf	22	;volatile
  4583                           
  4584                           ;tmr1.c: 164: if(TMR1_InterruptHandler)
  4585  0C24  0021               	movlb	1	; select bank1
  4586  0C25  0840               	movf	_TMR1_InterruptHandler^(0+128),w
  4587  0C26  0441               	iorwf	(_TMR1_InterruptHandler+1)^(0+128),w
  4588  0C27  1903               	btfsc	3,2
  4589  0C28  0008               	return
  4590                           
  4591                           ;tmr1.c: 165: {
  4592                           ;tmr1.c: 166: TMR1_InterruptHandler();
  4593  0C29  0841               	movf	(_TMR1_InterruptHandler+1)^(0+128),w
  4594  0C2A  008A               	movwf	10
  4595  0C2B  0840               	movf	_TMR1_InterruptHandler^(0+128),w
  4596  0C2C  000A               	callw
  4597  0C2D  318C               	pagesel	$
  4598  0C2E  0008               	return
  4599  0C2F                     __end_of_TMR1_ISR:	
  4600                           
  4601                           	psect	text28
  4602  0B4C                     __ptext28:	
  4603 ;; *************** function _sleepyTickISR *****************
  4604 ;; Defined at:
  4605 ;;		line 983 in file "clock_functions.c"
  4606 ;; Parameters:    Size  Location     Type
  4607 ;;		None
  4608 ;; Auto vars:     Size  Location     Type
  4609 ;;		None
  4610 ;; Return value:  Size  Location     Type
  4611 ;;                  1    wreg      void 
  4612 ;; Registers used:
  4613 ;;		wreg
  4614 ;; Tracked objects:
  4615 ;;		On entry : 0/0
  4616 ;;		On exit  : 0/0
  4617 ;;		Unchanged: 0/0
  4618 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4619 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4620 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4621 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4622 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4623 ;;Total ram usage:        0 bytes
  4624 ;; Hardware stack levels used:    1
  4625 ;; This function calls:
  4626 ;;		Nothing
  4627 ;; This function is called by:
  4628 ;;		_shutdown
  4629 ;;		_TMR1_ISR
  4630 ;; This function uses a non-reentrant model
  4631 ;;
  4632                           
  4633                           
  4634                           ;psect for function _sleepyTickISR
  4635  0B4C                     _sleepyTickISR:	
  4636                           
  4637                           ;clock_functions.c: 989: sleepy_seconds++;
  4638                           
  4639                           ;incstack = 0
  4640                           ; Regs used in _sleepyTickISR: [wreg]
  4641  0B4C  3001               	movlw	1
  4642  0B4D  0020               	movlb	0	; select bank0
  4643  0B4E  07D7               	addwf	_sleepy_seconds,f	;volatile
  4644  0B4F  3000               	movlw	0
  4645  0B50  1803               	skipnc
  4646  0B51  3001               	movlw	1
  4647  0B52  07D8               	addwf	_sleepy_seconds+1,f	;volatile
  4648  0B53  3000               	movlw	0
  4649  0B54  1803               	skipnc
  4650  0B55  3001               	movlw	1
  4651  0B56  07D9               	addwf	_sleepy_seconds+2,f	;volatile
  4652  0B57  0008               	return
  4653  0B58                     __end_of_sleepyTickISR:	
  4654                           
  4655                           	psect	text29
  4656  0003                     __ptext29:	
  4657 ;; *************** function _TMR1_DefaultInterruptHandler *****************
  4658 ;; Defined at:
  4659 ;;		line 175 in file "mcc_generated_files/tmr1.c"
  4660 ;; Parameters:    Size  Location     Type
  4661 ;;		None
  4662 ;; Auto vars:     Size  Location     Type
  4663 ;;		None
  4664 ;; Return value:  Size  Location     Type
  4665 ;;                  1    wreg      void 
  4666 ;; Registers used:
  4667 ;;		None
  4668 ;; Tracked objects:
  4669 ;;		On entry : 0/0
  4670 ;;		On exit  : 0/0
  4671 ;;		Unchanged: 0/0
  4672 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4673 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4674 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4675 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4676 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4677 ;;Total ram usage:        0 bytes
  4678 ;; Hardware stack levels used:    1
  4679 ;; This function calls:
  4680 ;;		Nothing
  4681 ;; This function is called by:
  4682 ;;		_TMR1_Initialize
  4683 ;;		_TMR1_ISR
  4684 ;; This function uses a non-reentrant model
  4685 ;;
  4686                           
  4687                           
  4688                           ;psect for function _TMR1_DefaultInterruptHandler
  4689  0003                     _TMR1_DefaultInterruptHandler:	
  4690                           
  4691                           ;incstack = 0
  4692                           ; Regs used in _TMR1_DefaultInterruptHandler: []
  4693  0003  0008               	return
  4694  0004                     __end_of_TMR1_DefaultInterruptHandler:	
  4695                           
  4696                           	psect	text30
  4697  0C98                     __ptext30:	
  4698 ;; *************** function _tickISR *****************
  4699 ;; Defined at:
  4700 ;;		line 218 in file "clock_functions.c"
  4701 ;; Parameters:    Size  Location     Type
  4702 ;;		None
  4703 ;; Auto vars:     Size  Location     Type
  4704 ;;		None
  4705 ;; Return value:  Size  Location     Type
  4706 ;;                  1    wreg      void 
  4707 ;; Registers used:
  4708 ;;		wreg, status,2, status,0, pclath, cstack
  4709 ;; Tracked objects:
  4710 ;;		On entry : 0/0
  4711 ;;		On exit  : 0/0
  4712 ;;		Unchanged: 0/0
  4713 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4714 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4715 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4716 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4717 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4718 ;;Total ram usage:        0 bytes
  4719 ;; Hardware stack levels used:    1
  4720 ;; Hardware stack levels required when called:    2
  4721 ;; This function calls:
  4722 ;;		_isolateDigits
  4723 ;;		_timeParse
  4724 ;;		_twentyFourParse
  4725 ;;		_updateDisplay
  4726 ;; This function is called by:
  4727 ;;		_startup
  4728 ;;		_wakeup
  4729 ;;		_TMR1_ISR
  4730 ;; This function uses a non-reentrant model
  4731 ;;
  4732                           
  4733                           
  4734                           ;psect for function _tickISR
  4735  0C98                     _tickISR:	
  4736                           
  4737                           ;clock_functions.c: 225: LATEbits.LATE1 = !(LATEbits.LATE1);
  4738                           
  4739                           ;incstack = 0
  4740                           ; Regs used in _tickISR: [wreg+status,2+status,0+pclath+cstack]
  4741  0C98  1003               	clrc
  4742  0C99  0022               	movlb	2	; select bank2
  4743  0C9A  1C90               	btfss	16,1	;volatile
  4744  0C9B  1403               	setc
  4745  0C9C  1C03               	btfss	3,0
  4746  0C9D  2CA1               	goto	u339_20
  4747  0C9E  0022               	movlb	2	; select bank2
  4748  0C9F  1490               	bsf	16,1	;volatile
  4749  0CA0  2CA3               	goto	i1l3574
  4750  0CA1                     u339_20:	
  4751  0CA1  0022               	movlb	2	; select bank2
  4752  0CA2  1090               	bcf	16,1	;volatile
  4753  0CA3                     i1l3574:	
  4754                           
  4755                           ;clock_functions.c: 228: LATCbits.LATC3 = 1;
  4756  0CA3  158E               	bsf	14,3	;volatile
  4757                           
  4758                           ;clock_functions.c: 229: LATCbits.LATC4 = 1;
  4759  0CA4  160E               	bsf	14,4	;volatile
  4760                           
  4761                           ;clock_functions.c: 232: if (PORTBbits.RB0 == 1) {
  4762  0CA5  0020               	movlb	0	; select bank0
  4763  0CA6  1C0D               	btfss	13,0	;volatile
  4764  0CA7  2CAC               	goto	i1l3582
  4765                           
  4766                           ;clock_functions.c: 235: seconds++;
  4767  0CA8  3001               	movlw	1
  4768  0CA9  07E6               	addwf	_seconds,f	;volatile
  4769  0CAA  3000               	movlw	0
  4770  0CAB  3DE7               	addwfc	_seconds+1,f	;volatile
  4771  0CAC                     i1l3582:	
  4772                           
  4773                           ;clock_functions.c: 237: }
  4774                           ;clock_functions.c: 240: timeParse();
  4775  0CAC  318C  2479  318C   	fcall	_timeParse
  4776                           
  4777                           ;clock_functions.c: 241: twentyFourParse();
  4778  0CAF  318C  24FA  318C   	fcall	_twentyFourParse
  4779                           
  4780                           ;clock_functions.c: 242: isolateDigits();
  4781  0CB2  3185  2543  318C   	fcall	_isolateDigits
  4782                           
  4783                           ;clock_functions.c: 243: updateDisplay();
  4784  0CB5  318D  2566         	fcall	_updateDisplay
  4785  0CB7  0008               	return
  4786  0CB8                     __end_of_tickISR:	
  4787                           
  4788                           	psect	text31
  4789  0C79                     __ptext31:	
  4790 ;; *************** function _timeParse *****************
  4791 ;; Defined at:
  4792 ;;		line 640 in file "clock_functions.c"
  4793 ;; Parameters:    Size  Location     Type
  4794 ;;		None
  4795 ;; Auto vars:     Size  Location     Type
  4796 ;;		None
  4797 ;; Return value:  Size  Location     Type
  4798 ;;                  1    wreg      void 
  4799 ;; Registers used:
  4800 ;;		wreg, status,2, status,0
  4801 ;; Tracked objects:
  4802 ;;		On entry : 0/0
  4803 ;;		On exit  : 0/0
  4804 ;;		Unchanged: 0/0
  4805 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4806 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4807 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4808 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4809 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4810 ;;Total ram usage:        0 bytes
  4811 ;; Hardware stack levels used:    1
  4812 ;; This function calls:
  4813 ;;		Nothing
  4814 ;; This function is called by:
  4815 ;;		_tickISR
  4816 ;; This function uses a non-reentrant model
  4817 ;;
  4818                           
  4819                           
  4820                           ;psect for function _timeParse
  4821  0C79                     _timeParse:	
  4822                           
  4823                           ;clock_functions.c: 647: if (seconds == 60) {
  4824                           
  4825                           ;incstack = 0
  4826                           ; Regs used in _timeParse: [wreg+status,2+status,0]
  4827  0C79  303C               	movlw	60
  4828  0C7A  0020               	movlb	0	; select bank0
  4829  0C7B  0666               	xorwf	_seconds,w	;volatile
  4830  0C7C  0467               	iorwf	_seconds+1,w	;volatile
  4831  0C7D  1D03               	btfss	3,2
  4832  0C7E  2C85               	goto	i1l3358
  4833                           
  4834                           ;clock_functions.c: 649: seconds = 0;
  4835  0C7F  01E6               	clrf	_seconds	;volatile
  4836  0C80  01E7               	clrf	_seconds+1	;volatile
  4837                           
  4838                           ;clock_functions.c: 650: minutes++;
  4839  0C81  3001               	movlw	1
  4840  0C82  07E4               	addwf	_minutes,f	;volatile
  4841  0C83  3000               	movlw	0
  4842  0C84  3DE5               	addwfc	_minutes+1,f	;volatile
  4843  0C85                     i1l3358:	
  4844                           
  4845                           ;clock_functions.c: 652: }
  4846                           ;clock_functions.c: 655: if (minutes == 60) {
  4847  0C85  303C               	movlw	60
  4848  0C86  0664               	xorwf	_minutes,w	;volatile
  4849  0C87  0465               	iorwf	_minutes+1,w	;volatile
  4850  0C88  1D03               	btfss	3,2
  4851  0C89  2C90               	goto	i1l3364
  4852                           
  4853                           ;clock_functions.c: 657: minutes = 0;
  4854  0C8A  01E4               	clrf	_minutes	;volatile
  4855  0C8B  01E5               	clrf	_minutes+1	;volatile
  4856                           
  4857                           ;clock_functions.c: 658: hours++;
  4858  0C8C  3001               	movlw	1
  4859  0C8D  07E2               	addwf	_hours,f	;volatile
  4860  0C8E  3000               	movlw	0
  4861  0C8F  3DE3               	addwfc	_hours+1,f	;volatile
  4862  0C90                     i1l3364:	
  4863                           
  4864                           ;clock_functions.c: 660: }
  4865                           ;clock_functions.c: 663: if (hours == 24) {
  4866  0C90  3018               	movlw	24
  4867  0C91  0662               	xorwf	_hours,w	;volatile
  4868  0C92  0463               	iorwf	_hours+1,w	;volatile
  4869  0C93  1D03               	btfss	3,2
  4870  0C94  0008               	return
  4871                           
  4872                           ;clock_functions.c: 665: hours = 0;
  4873  0C95  01E2               	clrf	_hours	;volatile
  4874  0C96  01E3               	clrf	_hours+1	;volatile
  4875  0C97  0008               	return
  4876  0C98                     __end_of_timeParse:	
  4877                           
  4878                           	psect	text32
  4879  0BC0                     __ptext32:	
  4880 ;; *************** function _TMR0_ISR *****************
  4881 ;; Defined at:
  4882 ;;		line 108 in file "mcc_generated_files/tmr0.c"
  4883 ;; Parameters:    Size  Location     Type
  4884 ;;		None
  4885 ;; Auto vars:     Size  Location     Type
  4886 ;;		None
  4887 ;; Return value:  Size  Location     Type
  4888 ;;                  1    wreg      void 
  4889 ;; Registers used:
  4890 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4891 ;; Tracked objects:
  4892 ;;		On entry : 0/0
  4893 ;;		On exit  : 0/0
  4894 ;;		Unchanged: 0/0
  4895 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4896 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4897 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4898 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4899 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4900 ;;Total ram usage:        0 bytes
  4901 ;; Hardware stack levels used:    1
  4902 ;; Hardware stack levels required when called:    3
  4903 ;; This function calls:
  4904 ;;		Absolute function
  4905 ;;		_TMR0_DefaultInterruptHandler
  4906 ;;		_muxISR
  4907 ;; This function is called by:
  4908 ;;		_INTERRUPT_InterruptManager
  4909 ;; This function uses a non-reentrant model
  4910 ;;
  4911                           
  4912                           
  4913                           ;psect for function _TMR0_ISR
  4914  0BC0                     _TMR0_ISR:	
  4915                           
  4916                           ;tmr0.c: 112: INTCONbits.TMR0IF = 0;
  4917                           
  4918                           ;incstack = 0
  4919                           ; Regs used in _TMR0_ISR: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4920  0BC0  110B               	bcf	11,2	;volatile
  4921                           
  4922                           ;tmr0.c: 114: TMR0 = timer0ReloadVal;
  4923  0BC1  0021               	movlb	1	; select bank1
  4924  0BC2  0846               	movf	_timer0ReloadVal^(0+128),w	;volatile
  4925  0BC3  0020               	movlb	0	; select bank0
  4926  0BC4  0095               	movwf	21	;volatile
  4927                           
  4928                           ;tmr0.c: 116: if(TMR0_InterruptHandler)
  4929  0BC5  0021               	movlb	1	; select bank1
  4930  0BC6  0844               	movf	_TMR0_InterruptHandler^(0+128),w
  4931  0BC7  0445               	iorwf	(_TMR0_InterruptHandler+1)^(0+128),w
  4932  0BC8  1903               	btfsc	3,2
  4933  0BC9  0008               	return
  4934                           
  4935                           ;tmr0.c: 117: {
  4936                           ;tmr0.c: 118: TMR0_InterruptHandler();
  4937  0BCA  0845               	movf	(_TMR0_InterruptHandler+1)^(0+128),w
  4938  0BCB  008A               	movwf	10
  4939  0BCC  0844               	movf	_TMR0_InterruptHandler^(0+128),w
  4940  0BCD  000A               	callw
  4941  0BCE  318B               	pagesel	$
  4942  0BCF  0008               	return
  4943  0BD0                     __end_of_TMR0_ISR:	
  4944                           
  4945                           	psect	text33
  4946  0002                     __ptext33:	
  4947 ;; *************** function _TMR0_DefaultInterruptHandler *****************
  4948 ;; Defined at:
  4949 ;;		line 129 in file "mcc_generated_files/tmr0.c"
  4950 ;; Parameters:    Size  Location     Type
  4951 ;;		None
  4952 ;; Auto vars:     Size  Location     Type
  4953 ;;		None
  4954 ;; Return value:  Size  Location     Type
  4955 ;;                  1    wreg      void 
  4956 ;; Registers used:
  4957 ;;		None
  4958 ;; Tracked objects:
  4959 ;;		On entry : 0/0
  4960 ;;		On exit  : 0/0
  4961 ;;		Unchanged: 0/0
  4962 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4963 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4964 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4965 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4966 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4967 ;;Total ram usage:        0 bytes
  4968 ;; Hardware stack levels used:    1
  4969 ;; This function calls:
  4970 ;;		Nothing
  4971 ;; This function is called by:
  4972 ;;		_TMR0_Initialize
  4973 ;;		_TMR0_ISR
  4974 ;; This function uses a non-reentrant model
  4975 ;;
  4976                           
  4977                           
  4978                           ;psect for function _TMR0_DefaultInterruptHandler
  4979  0002                     _TMR0_DefaultInterruptHandler:	
  4980                           
  4981                           ;incstack = 0
  4982                           ; Regs used in _TMR0_DefaultInterruptHandler: []
  4983  0002  0008               	return
  4984  0003                     __end_of_TMR0_DefaultInterruptHandler:	
  4985                           
  4986                           	psect	text34
  4987  0D8B                     __ptext34:	
  4988 ;; *************** function _muxISR *****************
  4989 ;; Defined at:
  4990 ;;		line 167 in file "clock_functions.c"
  4991 ;; Parameters:    Size  Location     Type
  4992 ;;		None
  4993 ;; Auto vars:     Size  Location     Type
  4994 ;;		None
  4995 ;; Return value:  Size  Location     Type
  4996 ;;                  1    wreg      void 
  4997 ;; Registers used:
  4998 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4999 ;; Tracked objects:
  5000 ;;		On entry : 0/0
  5001 ;;		On exit  : 0/0
  5002 ;;		Unchanged: 0/0
  5003 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5004 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5005 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5006 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5007 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5008 ;;Total ram usage:        0 bytes
  5009 ;; Hardware stack levels used:    1
  5010 ;; Hardware stack levels required when called:    2
  5011 ;; This function calls:
  5012 ;;		_updateParallelPort
  5013 ;;		i1_TMR2_StartTimer
  5014 ;; This function is called by:
  5015 ;;		_startup
  5016 ;;		_wakeup
  5017 ;;		_TMR0_ISR
  5018 ;; This function uses a non-reentrant model
  5019 ;;
  5020                           
  5021                           
  5022                           ;psect for function _muxISR
  5023  0D8B                     _muxISR:	
  5024                           
  5025                           ;clock_functions.c: 174: LATDbits.LATD7 = 1;
  5026                           
  5027                           ;incstack = 0
  5028                           ; Regs used in _muxISR: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5029  0D8B  0022               	movlb	2	; select bank2
  5030  0D8C  178F               	bsf	15,7	;volatile
  5031                           
  5032                           ;clock_functions.c: 177: if (mux_digit == 6) {
  5033  0D8D  3006               	movlw	6
  5034  0D8E  0020               	movlb	0	; select bank0
  5035  0D8F  066A               	xorwf	_mux_digit,w	;volatile
  5036  0D90  046B               	iorwf	_mux_digit+1,w	;volatile
  5037  0D91  1D03               	btfss	3,2
  5038  0D92  2D95               	goto	i1l3558
  5039                           
  5040                           ;clock_functions.c: 179: mux_digit = 0;
  5041  0D93  01EA               	clrf	_mux_digit	;volatile
  5042  0D94  01EB               	clrf	_mux_digit+1	;volatile
  5043  0D95                     i1l3558:	
  5044                           
  5045                           ;clock_functions.c: 181: }
  5046                           ;clock_functions.c: 185: if (PORTCbits.RC6 == 1 && mux_digit == 5 && hours > 11) {
  5047  0D95  1F0E               	btfss	14,6	;volatile
  5048  0D96  2DA6               	goto	i1l604
  5049  0D97  3005               	movlw	5
  5050  0D98  066A               	xorwf	_mux_digit,w	;volatile
  5051  0D99  046B               	iorwf	_mux_digit+1,w	;volatile
  5052  0D9A  1D03               	btfss	3,2
  5053  0D9B  2DA6               	goto	i1l604
  5054  0D9C  3000               	movlw	0
  5055  0D9D  0263               	subwf	_hours+1,w	;volatile
  5056  0D9E  300C               	movlw	12
  5057  0D9F  1903               	skipnz
  5058  0DA0  0262               	subwf	_hours,w	;volatile
  5059  0DA1  1C03               	skipc
  5060  0DA2  2DA6               	goto	i1l604
  5061                           
  5062                           ;clock_functions.c: 187: LATCbits.LATC2 = 1;
  5063  0DA3  0022               	movlb	2	; select bank2
  5064  0DA4  150E               	bsf	14,2	;volatile
  5065                           
  5066                           ;clock_functions.c: 189: }
  5067  0DA5  2DA8               	goto	i1l3566
  5068  0DA6                     i1l604:	
  5069                           
  5070                           ;clock_functions.c: 191: else {
  5071                           ;clock_functions.c: 193: LATCbits.LATC2 = 0;
  5072  0DA6  0022               	movlb	2	; select bank2
  5073  0DA7  110E               	bcf	14,2	;volatile
  5074  0DA8                     i1l3566:	
  5075                           
  5076                           ;clock_functions.c: 195: }
  5077                           ;clock_functions.c: 199: updateParallelPort();
  5078  0DA8  318C  2445  318D   	fcall	_updateParallelPort
  5079                           
  5080                           ;clock_functions.c: 202: LATDbits.LATD7 = 0;
  5081  0DAB  0022               	movlb	2	; select bank2
  5082  0DAC  138F               	bcf	15,7	;volatile
  5083                           
  5084                           ;clock_functions.c: 205: TMR2_StartTimer();
  5085  0DAD  318A  22B7         	fcall	i1_TMR2_StartTimer
  5086  0DAF  0008               	return
  5087  0DB0                     __end_of_muxISR:	
  5088                           
  5089                           	psect	text35
  5090  0C45                     __ptext35:	
  5091 ;; *************** function _updateParallelPort *****************
  5092 ;; Defined at:
  5093 ;;		line 574 in file "clock_functions.c"
  5094 ;; Parameters:    Size  Location     Type
  5095 ;;		None
  5096 ;; Auto vars:     Size  Location     Type
  5097 ;;		None
  5098 ;; Return value:  Size  Location     Type
  5099 ;;                  1    wreg      void 
  5100 ;; Registers used:
  5101 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5102 ;; Tracked objects:
  5103 ;;		On entry : 0/0
  5104 ;;		On exit  : 0/0
  5105 ;;		Unchanged: 0/0
  5106 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5107 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5108 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5109 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5110 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5111 ;;Total ram usage:        1 bytes
  5112 ;; Hardware stack levels used:    1
  5113 ;; Hardware stack levels required when called:    1
  5114 ;; This function calls:
  5115 ;;		_muxDigitCompensation
  5116 ;; This function is called by:
  5117 ;;		_muxISR
  5118 ;; This function uses a non-reentrant model
  5119 ;;
  5120                           
  5121                           
  5122                           ;psect for function _updateParallelPort
  5123  0C45                     _updateParallelPort:	
  5124                           
  5125                           ;clock_functions.c: 580: muxDigitCompensation();
  5126                           
  5127                           ;incstack = 0
  5128                           ; Regs used in _updateParallelPort: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5129  0C45  318E  2677         	fcall	_muxDigitCompensation
  5130                           
  5131                           ;clock_functions.c: 582: ParallelPort.BCO = mux_digit_compensated;
  5132  0C47  0020               	movlb	0	; select bank0
  5133  0C48  0868               	movf	_mux_digit_compensated,w	;volatile
  5134  0C49  00F0               	movwf	??_updateParallelPort
  5135  0C4A  0EF0               	swapf	??_updateParallelPort,f
  5136  0C4B  0022               	movlb	2	; select bank2
  5137  0C4C  080F               	movf	15,w	;volatile
  5138  0C4D  0670               	xorwf	??_updateParallelPort,w
  5139  0C4E  398F               	andlw	-113
  5140  0C4F  0670               	xorwf	??_updateParallelPort,w
  5141  0C50  008F               	movwf	15	;volatile
  5142                           
  5143                           ;clock_functions.c: 583: ParallelPort.BCD = mux_numeral[mux_digit];
  5144  0C51  0020               	movlb	0	; select bank0
  5145  0C52  356A               	lslf	_mux_digit,w	;volatile
  5146  0C53  3EA0               	addlw	(low (_mux_numeral| 0))& (0+255)
  5147  0C54  0086               	movwf	6
  5148  0C55  0187               	clrf	7
  5149  0C56  0022               	movlb	2	; select bank2
  5150  0C57  080F               	movf	15,w	;volatile
  5151  0C58  0601               	xorwf	1,w
  5152  0C59  39F0               	andlw	-16
  5153  0C5A  0601               	xorwf	1,w
  5154  0C5B  008F               	movwf	15	;volatile
  5155  0C5C  0008               	return
  5156  0C5D                     __end_of_updateParallelPort:	
  5157                           
  5158                           	psect	text36
  5159  0E77                     __ptext36:	
  5160 ;; *************** function _muxDigitCompensation *****************
  5161 ;; Defined at:
  5162 ;;		line 524 in file "clock_functions.c"
  5163 ;; Parameters:    Size  Location     Type
  5164 ;;		None
  5165 ;; Auto vars:     Size  Location     Type
  5166 ;;		None
  5167 ;; Return value:  Size  Location     Type
  5168 ;;                  1    wreg      void 
  5169 ;; Registers used:
  5170 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  5171 ;; Tracked objects:
  5172 ;;		On entry : 0/0
  5173 ;;		On exit  : 0/0
  5174 ;;		Unchanged: 0/0
  5175 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5176 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5177 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5178 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5179 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5180 ;;Total ram usage:        0 bytes
  5181 ;; Hardware stack levels used:    1
  5182 ;; This function calls:
  5183 ;;		Nothing
  5184 ;; This function is called by:
  5185 ;;		_updateParallelPort
  5186 ;; This function uses a non-reentrant model
  5187 ;;
  5188                           
  5189                           
  5190                           ;psect for function _muxDigitCompensation
  5191  0E77                     _muxDigitCompensation:	
  5192                           
  5193                           ;clock_functions.c: 532: switch(mux_digit) {
  5194                           
  5195                           ;incstack = 0
  5196                           ; Regs used in _muxDigitCompensation: [wreg-fsr0h+status,2+status,0]
  5197  0E77  2E9F               	goto	i1l3216
  5198  0E78                     i1l3200:	
  5199                           ;clock_functions.c: 534: case 0:
  5200                           
  5201                           
  5202                           ;clock_functions.c: 535: mux_digit_compensated = 0;
  5203  0E78  0020               	movlb	0	; select bank0
  5204  0E79  01E8               	clrf	_mux_digit_compensated	;volatile
  5205  0E7A  01E9               	clrf	_mux_digit_compensated+1	;volatile
  5206                           
  5207                           ;clock_functions.c: 536: break;
  5208  0E7B  0008               	return
  5209  0E7C                     i1l3202:	
  5210                           ;clock_functions.c: 538: case 1:
  5211                           
  5212                           
  5213                           ;clock_functions.c: 539: mux_digit_compensated = 4;
  5214  0E7C  3004               	movlw	4
  5215  0E7D  00E8               	movwf	_mux_digit_compensated	;volatile
  5216  0E7E  3000               	movlw	0
  5217  0E7F  00E9               	movwf	_mux_digit_compensated+1	;volatile
  5218                           
  5219                           ;clock_functions.c: 540: break;
  5220  0E80  0008               	return
  5221  0E81                     i1l3204:	
  5222                           ;clock_functions.c: 542: case 2:
  5223                           
  5224                           
  5225                           ;clock_functions.c: 543: mux_digit_compensated = 2;
  5226  0E81  3002               	movlw	2
  5227  0E82  00E8               	movwf	_mux_digit_compensated	;volatile
  5228  0E83  3000               	movlw	0
  5229  0E84  00E9               	movwf	_mux_digit_compensated+1	;volatile
  5230                           
  5231                           ;clock_functions.c: 544: break;
  5232  0E85  0008               	return
  5233  0E86                     i1l3206:	
  5234                           ;clock_functions.c: 546: case 3:
  5235                           
  5236                           
  5237                           ;clock_functions.c: 547: mux_digit_compensated = 6;
  5238  0E86  3006               	movlw	6
  5239  0E87  00E8               	movwf	_mux_digit_compensated	;volatile
  5240  0E88  3000               	movlw	0
  5241  0E89  00E9               	movwf	_mux_digit_compensated+1	;volatile
  5242                           
  5243                           ;clock_functions.c: 548: break;
  5244  0E8A  0008               	return
  5245  0E8B                     i1l3208:	
  5246                           ;clock_functions.c: 550: case 4:
  5247                           
  5248                           
  5249                           ;clock_functions.c: 551: mux_digit_compensated = 1;
  5250  0E8B  3001               	movlw	1
  5251  0E8C  00E8               	movwf	_mux_digit_compensated	;volatile
  5252  0E8D  3000               	movlw	0
  5253  0E8E  00E9               	movwf	_mux_digit_compensated+1	;volatile
  5254                           
  5255                           ;clock_functions.c: 552: break;
  5256  0E8F  0008               	return
  5257  0E90                     i1l3210:	
  5258                           ;clock_functions.c: 554: case 5:
  5259                           
  5260                           
  5261                           ;clock_functions.c: 555: mux_digit_compensated = 5;
  5262  0E90  3005               	movlw	5
  5263  0E91  00E8               	movwf	_mux_digit_compensated	;volatile
  5264  0E92  3000               	movlw	0
  5265  0E93  00E9               	movwf	_mux_digit_compensated+1	;volatile
  5266                           
  5267                           ;clock_functions.c: 556: break;
  5268  0E94  0008               	return
  5269  0E95                     i1l3212:	
  5270                           ;clock_functions.c: 558: case 6:
  5271                           
  5272                           
  5273                           ;clock_functions.c: 559: mux_digit_compensated = 3;
  5274  0E95  3003               	movlw	3
  5275  0E96  00E8               	movwf	_mux_digit_compensated	;volatile
  5276  0E97  3000               	movlw	0
  5277  0E98  00E9               	movwf	_mux_digit_compensated+1	;volatile
  5278                           
  5279                           ;clock_functions.c: 560: break;
  5280  0E99  0008               	return
  5281  0E9A                     i1l3214:	
  5282                           ;clock_functions.c: 562: default:
  5283                           
  5284                           
  5285                           ;clock_functions.c: 563: mux_digit_compensated = 7;
  5286  0E9A  3007               	movlw	7
  5287  0E9B  00E8               	movwf	_mux_digit_compensated	;volatile
  5288  0E9C  3000               	movlw	0
  5289  0E9D  00E9               	movwf	_mux_digit_compensated+1	;volatile
  5290                           
  5291                           ;clock_functions.c: 564: }
  5292  0E9E  0008               	return
  5293  0E9F                     i1l3216:	
  5294                           
  5295                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5296                           ; Switch size 1, requested type "space"
  5297                           ; Number of cases is 1, Range of values is 0 to 0
  5298                           ; switch strategies available:
  5299                           ; Name         Instructions Cycles
  5300                           ; simple_byte            4     3 (average)
  5301                           ; direct_byte            8     6 (fixed)
  5302                           ; jumptable            260     6 (fixed)
  5303                           ;	Chosen strategy is simple_byte
  5304  0E9F  0020               	movlb	0	; select bank0
  5305  0EA0  086B               	movf	_mux_digit+1,w	;volatile
  5306  0EA1  3A00               	xorlw	0	; case 0
  5307  0EA2  1903               	skipnz
  5308  0EA3  2EA5               	goto	i1l3860
  5309  0EA4  2E9A               	goto	i1l3214
  5310  0EA5                     i1l3860:	
  5311                           
  5312                           ; Switch size 1, requested type "space"
  5313                           ; Number of cases is 7, Range of values is 0 to 6
  5314                           ; switch strategies available:
  5315                           ; Name         Instructions Cycles
  5316                           ; direct_byte           20     6 (fixed)
  5317                           ; simple_byte           22    12 (average)
  5318                           ; jumptable            260     6 (fixed)
  5319                           ;	Chosen strategy is direct_byte
  5320  0EA5  086A               	movf	_mux_digit,w	;volatile
  5321  0EA6  0084               	movwf	4
  5322  0EA7  3007               	movlw	7
  5323  0EA8  0204               	subwf	4,w
  5324  0EA9  1803               	skipnc
  5325  0EAA  2E9A               	goto	i1l3214
  5326  0EAB  3188               	movlp	high i1S3862
  5327  0EAC  3504               	lslf	4,w
  5328  0EAD  3E00               	addlw	low i1S3862
  5329  0EAE  0082               	movwf	2
  5330  0EAF  0008               	return
  5331  0EB0                     __end_of_muxDigitCompensation:	
  5332                           
  5333                           	psect	swtext1
  5334  0800                     __pswtext1:	
  5335  0800                     i1S3862:	
  5336  0800  318E  2E78         	ljmp	i1l3200
  5337  0802  318E  2E7C         	ljmp	i1l3202
  5338  0804  318E  2E81         	ljmp	i1l3204
  5339  0806  318E  2E86         	ljmp	i1l3206
  5340  0808  318E  2E8B         	ljmp	i1l3208
  5341  080A  318E  2E90         	ljmp	i1l3210
  5342  080C  318E  2E95         	ljmp	i1l3212
  5343                           
  5344                           	psect	text37
  5345  0D42                     __ptext37:	
  5346 ;; *************** function _PIN_MANAGER_IOC *****************
  5347 ;; Defined at:
  5348 ;;		line 138 in file "mcc_generated_files/pin_manager.c"
  5349 ;; Parameters:    Size  Location     Type
  5350 ;;		None
  5351 ;; Auto vars:     Size  Location     Type
  5352 ;;		None
  5353 ;; Return value:  Size  Location     Type
  5354 ;;                  1    wreg      void 
  5355 ;; Registers used:
  5356 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5357 ;; Tracked objects:
  5358 ;;		On entry : 0/0
  5359 ;;		On exit  : 0/0
  5360 ;;		Unchanged: 0/0
  5361 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5362 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5363 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5364 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5365 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5366 ;;Total ram usage:        0 bytes
  5367 ;; Hardware stack levels used:    1
  5368 ;; Hardware stack levels required when called:    8
  5369 ;; This function calls:
  5370 ;;		_IOCBF0_ISR
  5371 ;;		_IOCBF1_ISR
  5372 ;;		_IOCBF2_ISR
  5373 ;;		_IOCBF3_ISR
  5374 ;;		_IOCBF4_ISR
  5375 ;;		_IOCBF5_ISR
  5376 ;; This function is called by:
  5377 ;;		_INTERRUPT_InterruptManager
  5378 ;; This function uses a non-reentrant model
  5379 ;;
  5380                           
  5381                           
  5382                           ;psect for function _PIN_MANAGER_IOC
  5383  0D42                     _PIN_MANAGER_IOC:	
  5384                           
  5385                           ;pin_manager.c: 141: if(IOCBFbits.IOCBF0 == 1)
  5386                           
  5387                           ;incstack = 0
  5388                           ; Regs used in _PIN_MANAGER_IOC: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5389  0D42  0027               	movlb	7	; select bank7
  5390  0D43  1C16               	btfss	22,0	;volatile
  5391  0D44  2D48               	goto	i1l3628
  5392                           
  5393                           ;pin_manager.c: 142: {
  5394                           ;pin_manager.c: 143: IOCBF0_ISR();
  5395  0D45  318B  2358  318D   	fcall	_IOCBF0_ISR
  5396  0D48                     i1l3628:	
  5397                           
  5398                           ;pin_manager.c: 144: }
  5399                           ;pin_manager.c: 147: if(IOCBFbits.IOCBF1 == 1)
  5400  0D48  0027               	movlb	7	; select bank7
  5401  0D49  1C96               	btfss	22,1	;volatile
  5402  0D4A  2D4E               	goto	i1l3632
  5403                           
  5404                           ;pin_manager.c: 148: {
  5405                           ;pin_manager.c: 149: IOCBF1_ISR();
  5406  0D4B  318B  2365  318D   	fcall	_IOCBF1_ISR
  5407  0D4E                     i1l3632:	
  5408                           
  5409                           ;pin_manager.c: 150: }
  5410                           ;pin_manager.c: 153: if(IOCBFbits.IOCBF2 == 1)
  5411  0D4E  0027               	movlb	7	; select bank7
  5412  0D4F  1D16               	btfss	22,2	;volatile
  5413  0D50  2D54               	goto	i1l3636
  5414                           
  5415                           ;pin_manager.c: 154: {
  5416                           ;pin_manager.c: 155: IOCBF2_ISR();
  5417  0D51  318B  2372  318D   	fcall	_IOCBF2_ISR
  5418  0D54                     i1l3636:	
  5419                           
  5420                           ;pin_manager.c: 156: }
  5421                           ;pin_manager.c: 159: if(IOCBFbits.IOCBF3 == 1)
  5422  0D54  0027               	movlb	7	; select bank7
  5423  0D55  1D96               	btfss	22,3	;volatile
  5424  0D56  2D5A               	goto	i1l3640
  5425                           
  5426                           ;pin_manager.c: 160: {
  5427                           ;pin_manager.c: 161: IOCBF3_ISR();
  5428  0D57  318B  237F  318D   	fcall	_IOCBF3_ISR
  5429  0D5A                     i1l3640:	
  5430                           
  5431                           ;pin_manager.c: 162: }
  5432                           ;pin_manager.c: 165: if(IOCBFbits.IOCBF4 == 1)
  5433  0D5A  0027               	movlb	7	; select bank7
  5434  0D5B  1E16               	btfss	22,4	;volatile
  5435  0D5C  2D60               	goto	i1l3644
  5436                           
  5437                           ;pin_manager.c: 166: {
  5438                           ;pin_manager.c: 167: IOCBF4_ISR();
  5439  0D5D  318B  238C  318D   	fcall	_IOCBF4_ISR
  5440  0D60                     i1l3644:	
  5441                           
  5442                           ;pin_manager.c: 168: }
  5443                           ;pin_manager.c: 171: if(IOCBFbits.IOCBF5 == 1)
  5444  0D60  0027               	movlb	7	; select bank7
  5445  0D61  1E96               	btfss	22,5	;volatile
  5446  0D62  0008               	return
  5447                           
  5448                           ;pin_manager.c: 172: {
  5449                           ;pin_manager.c: 173: IOCBF5_ISR();
  5450  0D63  318B  2399         	fcall	_IOCBF5_ISR
  5451  0D65  0008               	return
  5452  0D66                     __end_of_PIN_MANAGER_IOC:	
  5453                           
  5454                           	psect	text38
  5455  0B99                     __ptext38:	
  5456 ;; *************** function _IOCBF5_ISR *****************
  5457 ;; Defined at:
  5458 ;;		line 332 in file "mcc_generated_files/pin_manager.c"
  5459 ;; Parameters:    Size  Location     Type
  5460 ;;		None
  5461 ;; Auto vars:     Size  Location     Type
  5462 ;;		None
  5463 ;; Return value:  Size  Location     Type
  5464 ;;                  1    wreg      void 
  5465 ;; Registers used:
  5466 ;;		wreg, status,2, status,0, pclath, cstack
  5467 ;; Tracked objects:
  5468 ;;		On entry : 0/0
  5469 ;;		On exit  : 0/0
  5470 ;;		Unchanged: 0/0
  5471 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5472 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5473 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5474 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5475 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5476 ;;Total ram usage:        0 bytes
  5477 ;; Hardware stack levels used:    1
  5478 ;; Hardware stack levels required when called:    1
  5479 ;; This function calls:
  5480 ;;		Absolute function
  5481 ;;		_IOCBF5_DefaultInterruptHandler
  5482 ;; This function is called by:
  5483 ;;		_PIN_MANAGER_IOC
  5484 ;; This function uses a non-reentrant model
  5485 ;;
  5486                           
  5487                           
  5488                           ;psect for function _IOCBF5_ISR
  5489  0B99                     _IOCBF5_ISR:	
  5490                           
  5491                           ;pin_manager.c: 337: if(IOCBF5_InterruptHandler)
  5492                           
  5493                           ;incstack = 0
  5494                           ; Regs used in _IOCBF5_ISR: [wreg+status,2+status,0+pclath+cstack]
  5495  0B99  0021               	movlb	1	; select bank1
  5496  0B9A  0834               	movf	_IOCBF5_InterruptHandler^(0+128),w
  5497  0B9B  0435               	iorwf	(_IOCBF5_InterruptHandler+1)^(0+128),w
  5498  0B9C  1903               	btfsc	3,2
  5499  0B9D  2BA3               	goto	i1l3484
  5500                           
  5501                           ;pin_manager.c: 338: {
  5502                           ;pin_manager.c: 339: IOCBF5_InterruptHandler();
  5503  0B9E  0835               	movf	(_IOCBF5_InterruptHandler+1)^(0+128),w
  5504  0B9F  008A               	movwf	10
  5505  0BA0  0834               	movf	_IOCBF5_InterruptHandler^(0+128),w
  5506  0BA1  000A               	callw
  5507  0BA2  318B               	pagesel	$
  5508  0BA3                     i1l3484:	
  5509                           
  5510                           ;pin_manager.c: 340: }
  5511                           ;pin_manager.c: 341: IOCBFbits.IOCBF5 = 0;
  5512  0BA3  0027               	movlb	7	; select bank7
  5513  0BA4  1296               	bcf	22,5	;volatile
  5514  0BA5  0008               	return
  5515  0BA6                     __end_of_IOCBF5_ISR:	
  5516                           
  5517                           	psect	text39
  5518  0AB0                     __ptext39:	
  5519 ;; *************** function _IOCBF5_DefaultInterruptHandler *****************
  5520 ;; Defined at:
  5521 ;;		line 354 in file "mcc_generated_files/pin_manager.c"
  5522 ;; Parameters:    Size  Location     Type
  5523 ;;		None
  5524 ;; Auto vars:     Size  Location     Type
  5525 ;;		None
  5526 ;; Return value:  Size  Location     Type
  5527 ;;                  1    wreg      void 
  5528 ;; Registers used:
  5529 ;;		None
  5530 ;; Tracked objects:
  5531 ;;		On entry : 0/0
  5532 ;;		On exit  : 0/0
  5533 ;;		Unchanged: 0/0
  5534 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5535 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5536 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5537 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5538 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5539 ;;Total ram usage:        0 bytes
  5540 ;; Hardware stack levels used:    1
  5541 ;; This function calls:
  5542 ;;		Nothing
  5543 ;; This function is called by:
  5544 ;;		_PIN_MANAGER_Initialize
  5545 ;;		_IOCBF5_ISR
  5546 ;; This function uses a non-reentrant model
  5547 ;;
  5548                           
  5549                           
  5550                           ;psect for function _IOCBF5_DefaultInterruptHandler
  5551  0AB0                     _IOCBF5_DefaultInterruptHandler:	
  5552                           
  5553                           ;incstack = 0
  5554                           ; Regs used in _IOCBF5_DefaultInterruptHandler: []
  5555  0AB0  0008               	return
  5556  0AB1                     __end_of_IOCBF5_DefaultInterruptHandler:	
  5557                           
  5558                           	psect	text40
  5559  0B8C                     __ptext40:	
  5560 ;; *************** function _IOCBF4_ISR *****************
  5561 ;; Defined at:
  5562 ;;		line 302 in file "mcc_generated_files/pin_manager.c"
  5563 ;; Parameters:    Size  Location     Type
  5564 ;;		None
  5565 ;; Auto vars:     Size  Location     Type
  5566 ;;		None
  5567 ;; Return value:  Size  Location     Type
  5568 ;;                  1    wreg      void 
  5569 ;; Registers used:
  5570 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5571 ;; Tracked objects:
  5572 ;;		On entry : 0/0
  5573 ;;		On exit  : 0/0
  5574 ;;		Unchanged: 0/0
  5575 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5576 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5577 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5578 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5579 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5580 ;;Total ram usage:        0 bytes
  5581 ;; Hardware stack levels used:    1
  5582 ;; Hardware stack levels required when called:    7
  5583 ;; This function calls:
  5584 ;;		Absolute function
  5585 ;;		_IOCBF4_DefaultInterruptHandler
  5586 ;;		_powerFailISR
  5587 ;; This function is called by:
  5588 ;;		_PIN_MANAGER_IOC
  5589 ;; This function uses a non-reentrant model
  5590 ;;
  5591                           
  5592                           
  5593                           ;psect for function _IOCBF4_ISR
  5594  0B8C                     _IOCBF4_ISR:	
  5595                           
  5596                           ;pin_manager.c: 307: if(IOCBF4_InterruptHandler)
  5597                           
  5598                           ;incstack = 0
  5599                           ; Regs used in _IOCBF4_ISR: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5600  0B8C  0020               	movlb	0	; select bank0
  5601  0B8D  086C               	movf	_IOCBF4_InterruptHandler,w
  5602  0B8E  046D               	iorwf	_IOCBF4_InterruptHandler+1,w
  5603  0B8F  1903               	btfsc	3,2
  5604  0B90  2B96               	goto	i1l3478
  5605                           
  5606                           ;pin_manager.c: 308: {
  5607                           ;pin_manager.c: 309: IOCBF4_InterruptHandler();
  5608  0B91  086D               	movf	_IOCBF4_InterruptHandler+1,w
  5609  0B92  008A               	movwf	10
  5610  0B93  086C               	movf	_IOCBF4_InterruptHandler,w
  5611  0B94  000A               	callw
  5612  0B95  318B               	pagesel	$
  5613  0B96                     i1l3478:	
  5614                           
  5615                           ;pin_manager.c: 310: }
  5616                           ;pin_manager.c: 311: IOCBFbits.IOCBF4 = 0;
  5617  0B96  0027               	movlb	7	; select bank7
  5618  0B97  1216               	bcf	22,4	;volatile
  5619  0B98  0008               	return
  5620  0B99                     __end_of_IOCBF4_ISR:	
  5621                           
  5622                           	psect	text41
  5623  0AAF                     __ptext41:	
  5624 ;; *************** function _IOCBF4_DefaultInterruptHandler *****************
  5625 ;; Defined at:
  5626 ;;		line 324 in file "mcc_generated_files/pin_manager.c"
  5627 ;; Parameters:    Size  Location     Type
  5628 ;;		None
  5629 ;; Auto vars:     Size  Location     Type
  5630 ;;		None
  5631 ;; Return value:  Size  Location     Type
  5632 ;;                  1    wreg      void 
  5633 ;; Registers used:
  5634 ;;		None
  5635 ;; Tracked objects:
  5636 ;;		On entry : 0/0
  5637 ;;		On exit  : 0/0
  5638 ;;		Unchanged: 0/0
  5639 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5640 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5641 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5642 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5643 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5644 ;;Total ram usage:        0 bytes
  5645 ;; Hardware stack levels used:    1
  5646 ;; This function calls:
  5647 ;;		Nothing
  5648 ;; This function is called by:
  5649 ;;		_PIN_MANAGER_Initialize
  5650 ;;		_IOCBF4_ISR
  5651 ;; This function uses a non-reentrant model
  5652 ;;
  5653                           
  5654                           
  5655                           ;psect for function _IOCBF4_DefaultInterruptHandler
  5656  0AAF                     _IOCBF4_DefaultInterruptHandler:	
  5657                           
  5658                           ;incstack = 0
  5659                           ; Regs used in _IOCBF4_DefaultInterruptHandler: []
  5660  0AAF  0008               	return
  5661  0AB0                     __end_of_IOCBF4_DefaultInterruptHandler:	
  5662                           
  5663                           	psect	text42
  5664  0B3A                     __ptext42:	
  5665 ;; *************** function _powerFailISR *****************
  5666 ;; Defined at:
  5667 ;;		line 439 in file "clock_functions.c"
  5668 ;; Parameters:    Size  Location     Type
  5669 ;;		None
  5670 ;; Auto vars:     Size  Location     Type
  5671 ;;		None
  5672 ;; Return value:  Size  Location     Type
  5673 ;;                  1    wreg      void 
  5674 ;; Registers used:
  5675 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5676 ;; Tracked objects:
  5677 ;;		On entry : 0/0
  5678 ;;		On exit  : 0/0
  5679 ;;		Unchanged: 0/0
  5680 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5681 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5682 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5683 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5684 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5685 ;;Total ram usage:        0 bytes
  5686 ;; Hardware stack levels used:    1
  5687 ;; Hardware stack levels required when called:    6
  5688 ;; This function calls:
  5689 ;;		_shutdown
  5690 ;;		_wakeup
  5691 ;; This function is called by:
  5692 ;;		_startup
  5693 ;;		_wakeup
  5694 ;;		_IOCBF4_ISR
  5695 ;; This function uses a non-reentrant model
  5696 ;;
  5697                           
  5698                           
  5699                           ;psect for function _powerFailISR
  5700  0B3A                     _powerFailISR:	
  5701                           
  5702                           ;clock_functions.c: 447: if (asleep_flag == 0) {
  5703                           
  5704                           ;incstack = 0
  5705                           ; Regs used in _powerFailISR: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5706  0B3A  0020               	movlb	0	; select bank0
  5707  0B3B  186E               	btfsc	_asleep_flag/(0+8),_asleep_flag& (0+7)	;volatile
  5708  0B3C  2B40               	goto	i1l3436
  5709                           
  5710                           ;clock_functions.c: 449: shutdown();
  5711  0B3D  318E  26B0         	fcall	_shutdown
  5712                           
  5713                           ;clock_functions.c: 451: }
  5714  0B3F  0008               	return
  5715  0B40                     i1l3436:	
  5716                           
  5717                           ;clock_functions.c: 454: else {
  5718                           ;clock_functions.c: 456: wakeup();
  5719  0B40  3183  23A7         	fcall	_wakeup
  5720  0B42  0008               	return
  5721  0B43                     __end_of_powerFailISR:	
  5722                           
  5723                           	psect	text43
  5724  03A7                     __ptext43:	
  5725 ;; *************** function _wakeup *****************
  5726 ;; Defined at:
  5727 ;;		line 807 in file "clock_functions.c"
  5728 ;; Parameters:    Size  Location     Type
  5729 ;;		None
  5730 ;; Auto vars:     Size  Location     Type
  5731 ;;		None
  5732 ;; Return value:  Size  Location     Type
  5733 ;;                  1    wreg      void 
  5734 ;; Registers used:
  5735 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5736 ;; Tracked objects:
  5737 ;;		On entry : 0/0
  5738 ;;		On exit  : 0/0
  5739 ;;		Unchanged: 0/0
  5740 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5741 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5742 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5743 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5744 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5745 ;;Total ram usage:        0 bytes
  5746 ;; Hardware stack levels used:    1
  5747 ;; Hardware stack levels required when called:    5
  5748 ;; This function calls:
  5749 ;;		_isolateDigits
  5750 ;;		_restoreTime
  5751 ;;		_twentyFourParse
  5752 ;;		_updateDisplay
  5753 ;;		i1_IOCBF0_SetInterruptHandler
  5754 ;;		i1_IOCBF1_SetInterruptHandler
  5755 ;;		i1_IOCBF2_SetInterruptHandler
  5756 ;;		i1_IOCBF3_SetInterruptHandler
  5757 ;;		i1_IOCBF4_SetInterruptHandler
  5758 ;;		i1_TMR0_SetInterruptHandler
  5759 ;;		i1_TMR1_SetInterruptHandler
  5760 ;;		i1_TMR2_SetInterruptHandler
  5761 ;;		i1_TMR2_StartTimer
  5762 ;; This function is called by:
  5763 ;;		_powerFailISR
  5764 ;; This function uses a non-reentrant model
  5765 ;;
  5766                           
  5767                           
  5768                           ;psect for function _wakeup
  5769  03A7                     _wakeup:	
  5770                           
  5771                           ;clock_functions.c: 813: (INTCONbits.PEIE = 1);
  5772                           
  5773                           ;incstack = 0
  5774                           ; Regs used in _wakeup: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5775  03A7  170B               	bsf	11,6	;volatile
  5776                           
  5777                           ;clock_functions.c: 818: OSCCONbits.IRCF = 0b1010;
  5778  03A8  0021               	movlb	1	; select bank1
  5779  03A9  0819               	movf	25,w	;volatile
  5780  03AA  3987               	andlw	-121
  5781  03AB  3850               	iorlw	80
  5782  03AC  0099               	movwf	25	;volatile
  5783  03AD                     i1l691:	
  5784                           ;clock_functions.c: 819: while(!HFIOFR);
  5785                           
  5786  03AD  1E1A               	btfss	26,4	;volatile
  5787  03AE  2BAD               	goto	i1l691
  5788                           
  5789                           ;clock_functions.c: 820: OSCCONbits.SCS = 0b00;
  5790  03AF  30FC               	movlw	-4
  5791  03B0  0599               	andwf	25,f	;volatile
  5792  03B1                     i1l694:	
  5793                           ;clock_functions.c: 822: while(!OSTS);
  5794                           
  5795  03B1  1E9A               	btfss	26,5	;volatile
  5796  03B2  2BB1               	goto	i1l694
  5797                           
  5798                           ;clock_functions.c: 825: nT1SYNC = 0;
  5799  03B3  0020               	movlb	0	; select bank0
  5800  03B4  1118               	bcf	24,2	;volatile
  5801                           
  5802                           ;clock_functions.c: 828: TRISEbits.TRISE2 = 0;
  5803  03B5  0021               	movlb	1	; select bank1
  5804  03B6  1110               	bcf	16,2	;volatile
  5805                           
  5806                           ;clock_functions.c: 829: TRISEbits.TRISE1 = 0;
  5807  03B7  1090               	bcf	16,1	;volatile
  5808                           
  5809                           ;clock_functions.c: 830: TRISEbits.TRISE0 = 0;
  5810  03B8  1010               	bcf	16,0	;volatile
  5811                           
  5812                           ;clock_functions.c: 831: LATEbits.LATE2 = 1;
  5813  03B9  0022               	movlb	2	; select bank2
  5814  03BA  1510               	bsf	16,2	;volatile
  5815                           
  5816                           ;clock_functions.c: 835: TMR0_SetInterruptHandler(muxISR);
  5817  03BB  308B               	movlw	low _muxISR
  5818  03BC  00F0               	movwf	i1TMR0_SetInterruptHandler@InterruptHandler
  5819  03BD  300D               	movlw	high _muxISR
  5820  03BE  00F1               	movwf	i1TMR0_SetInterruptHandler@InterruptHandler+1
  5821  03BF  318A  22EF  3183   	fcall	i1_TMR0_SetInterruptHandler
  5822                           
  5823                           ;clock_functions.c: 838: TMR1_SetInterruptHandler(tickISR);
  5824  03C2  3098               	movlw	low _tickISR
  5825  03C3  00F0               	movwf	i1TMR1_SetInterruptHandler@InterruptHandler
  5826  03C4  300C               	movlw	high _tickISR
  5827  03C5  00F1               	movwf	i1TMR1_SetInterruptHandler@InterruptHandler+1
  5828  03C6  318A  22CB  3183   	fcall	i1_TMR1_SetInterruptHandler
  5829                           
  5830                           ;clock_functions.c: 841: TMR2_SetInterruptHandler(blankISR);
  5831  03C9  30A6               	movlw	low _blankISR
  5832  03CA  00F0               	movwf	i1TMR2_SetInterruptHandler@InterruptHandler
  5833  03CB  300B               	movlw	high _blankISR
  5834  03CC  00F1               	movwf	i1TMR2_SetInterruptHandler@InterruptHandler+1
  5835  03CD  318A  22F5  3183   	fcall	i1_TMR2_SetInterruptHandler
  5836                           
  5837                           ;clock_functions.c: 845: IOCBF0_SetInterruptHandler(setSecondsISR);
  5838  03D0  30B8               	movlw	low _setSecondsISR
  5839  03D1  00F0               	movwf	i1IOCBF0_SetInterruptHandler@InterruptHandler
  5840  03D2  300C               	movlw	high _setSecondsISR
  5841  03D3  00F1               	movwf	i1IOCBF0_SetInterruptHandler@InterruptHandler+1
  5842  03D4  318A  22D1  3183   	fcall	i1_IOCBF0_SetInterruptHandler
  5843                           
  5844                           ;clock_functions.c: 848: IOCBF1_SetInterruptHandler(setMinutesISR);
  5845  03D7  30D9               	movlw	low _setMinutesISR
  5846  03D8  00F0               	movwf	i1IOCBF1_SetInterruptHandler@InterruptHandler
  5847  03D9  300C               	movlw	high _setMinutesISR
  5848  03DA  00F1               	movwf	i1IOCBF1_SetInterruptHandler@InterruptHandler+1
  5849  03DB  318A  22D7  3183   	fcall	i1_IOCBF1_SetInterruptHandler
  5850                           
  5851                           ;clock_functions.c: 851: IOCBF2_SetInterruptHandler(setHoursISR);
  5852  03DE  301E               	movlw	low _setHoursISR
  5853  03DF  00F0               	movwf	i1IOCBF2_SetInterruptHandler@InterruptHandler
  5854  03E0  300D               	movlw	high _setHoursISR
  5855  03E1  00F1               	movwf	i1IOCBF2_SetInterruptHandler@InterruptHandler+1
  5856  03E2  318A  22DD  3183   	fcall	i1_IOCBF2_SetInterruptHandler
  5857                           
  5858                           ;clock_functions.c: 854: IOCBF3_SetInterruptHandler(displayToggleISR);
  5859  03E5  30B0               	movlw	low _displayToggleISR
  5860  03E6  00F0               	movwf	i1IOCBF3_SetInterruptHandler@InterruptHandler
  5861  03E7  300D               	movlw	high _displayToggleISR
  5862  03E8  00F1               	movwf	i1IOCBF3_SetInterruptHandler@InterruptHandler+1
  5863  03E9  318A  22E3  3183   	fcall	i1_IOCBF3_SetInterruptHandler
  5864                           
  5865                           ;clock_functions.c: 857: IOCBF4_SetInterruptHandler(powerFailISR);
  5866  03EC  303A               	movlw	low _powerFailISR
  5867  03ED  00F0               	movwf	i1IOCBF4_SetInterruptHandler@InterruptHandler
  5868  03EE  300B               	movlw	high _powerFailISR
  5869  03EF  00F1               	movwf	i1IOCBF4_SetInterruptHandler@InterruptHandler+1
  5870  03F0  318A  22E9  3183   	fcall	i1_IOCBF4_SetInterruptHandler
  5871                           
  5872                           ;clock_functions.c: 860: TRISDbits.TRISD4 = 0;
  5873  03F3  0021               	movlb	1	; select bank1
  5874  03F4  120F               	bcf	15,4	;volatile
  5875                           
  5876                           ;clock_functions.c: 861: TRISDbits.TRISD5 = 0;
  5877  03F5  128F               	bcf	15,5	;volatile
  5878                           
  5879                           ;clock_functions.c: 862: TRISDbits.TRISD6 = 0;
  5880  03F6  130F               	bcf	15,6	;volatile
  5881                           
  5882                           ;clock_functions.c: 863: TRISDbits.TRISD0 = 0;
  5883  03F7  100F               	bcf	15,0	;volatile
  5884                           
  5885                           ;clock_functions.c: 864: TRISDbits.TRISD1 = 0;
  5886  03F8  108F               	bcf	15,1	;volatile
  5887                           
  5888                           ;clock_functions.c: 865: TRISDbits.TRISD2 = 0;
  5889  03F9  110F               	bcf	15,2	;volatile
  5890                           
  5891                           ;clock_functions.c: 866: TRISDbits.TRISD3 = 0;
  5892  03FA  118F               	bcf	15,3	;volatile
  5893                           
  5894                           ;clock_functions.c: 867: TRISDbits.TRISD7 = 0;
  5895  03FB  138F               	bcf	15,7	;volatile
  5896                           
  5897                           ;clock_functions.c: 870: TRISCbits.TRISC3 = 0;
  5898  03FC  118E               	bcf	14,3	;volatile
  5899                           
  5900                           ;clock_functions.c: 871: TRISCbits.TRISC4 = 0;
  5901  03FD  120E               	bcf	14,4	;volatile
  5902                           
  5903                           ;clock_functions.c: 874: LATCbits.LATC3 = 0;
  5904  03FE  0022               	movlb	2	; select bank2
  5905  03FF  118E               	bcf	14,3	;volatile
  5906                           
  5907                           ;clock_functions.c: 875: LATCbits.LATC4 = 0;
  5908  0400  120E               	bcf	14,4	;volatile
  5909                           
  5910                           ;clock_functions.c: 878: TRISBbits.TRISB0 = 1;
  5911  0401  0021               	movlb	1	; select bank1
  5912  0402  140D               	bsf	13,0	;volatile
  5913                           
  5914                           ;clock_functions.c: 879: TRISBbits.TRISB1 = 1;
  5915  0403  148D               	bsf	13,1	;volatile
  5916                           
  5917                           ;clock_functions.c: 880: TRISBbits.TRISB2 = 1;
  5918  0404  150D               	bsf	13,2	;volatile
  5919                           
  5920                           ;clock_functions.c: 883: TRISBbits.TRISB4 = 1;
  5921  0405  160D               	bsf	13,4	;volatile
  5922                           
  5923                           ;clock_functions.c: 886: TRISCbits.TRISC5 = 1;
  5924  0406  168E               	bsf	14,5	;volatile
  5925                           
  5926                           ;clock_functions.c: 889: TRISAbits.TRISA0 = 1;
  5927  0407  140C               	bsf	12,0	;volatile
  5928                           
  5929                           ;clock_functions.c: 890: TRISAbits.TRISA5 = 1;
  5930  0408  168C               	bsf	12,5	;volatile
  5931                           
  5932                           ;clock_functions.c: 891: TRISAbits.TRISA2 = 1;
  5933  0409  150C               	bsf	12,2	;volatile
  5934                           
  5935                           ;clock_functions.c: 894: TRISBbits.TRISB6 = 0;
  5936  040A  130D               	bcf	13,6	;volatile
  5937                           
  5938                           ;clock_functions.c: 895: TRISBbits.TRISB7 = 0;
  5939  040B  138D               	bcf	13,7	;volatile
  5940                           
  5941                           ;clock_functions.c: 896: TRISAbits.TRISA1 = 0;
  5942  040C  108C               	bcf	12,1	;volatile
  5943                           
  5944                           ;clock_functions.c: 897: TRISCbits.TRISC1 = 0;
  5945  040D  108E               	bcf	14,1	;volatile
  5946                           
  5947                           ;clock_functions.c: 900: TRISEbits.TRISE0 = 0;
  5948  040E  1010               	bcf	16,0	;volatile
  5949                           
  5950                           ;clock_functions.c: 903: TRISCbits.TRISC6 = 1;
  5951  040F  170E               	bsf	14,6	;volatile
  5952                           
  5953                           ;clock_functions.c: 906: TRISCbits.TRISC2 = 0;
  5954  0410  110E               	bcf	14,2	;volatile
  5955                           
  5956                           ;clock_functions.c: 907: LATCbits.LATC2 = 0;
  5957  0411  0022               	movlb	2	; select bank2
  5958  0412  110E               	bcf	14,2	;volatile
  5959                           
  5960                           ;clock_functions.c: 910: TRISBbits.TRISB3 = 1;
  5961  0413  0021               	movlb	1	; select bank1
  5962  0414  158D               	bsf	13,3	;volatile
  5963                           
  5964                           ;clock_functions.c: 913: TRISAbits.TRISA3 = 0;
  5965  0415  118C               	bcf	12,3	;volatile
  5966                           
  5967                           ;clock_functions.c: 916: LATEbits.LATE2 = 0;
  5968  0416  0022               	movlb	2	; select bank2
  5969  0417  1110               	bcf	16,2	;volatile
  5970                           
  5971                           ;clock_functions.c: 917: LATEbits.LATE0 = 0;
  5972  0418  1010               	bcf	16,0	;volatile
  5973                           
  5974                           ;clock_functions.c: 920: LATAbits.LATA3 = 0;
  5975  0419  118C               	bcf	12,3	;volatile
  5976                           
  5977                           ;clock_functions.c: 923: IOCBNbits.IOCBN0 = 1;
  5978  041A  0027               	movlb	7	; select bank7
  5979  041B  1415               	bsf	21,0	;volatile
  5980                           
  5981                           ;clock_functions.c: 924: IOCBNbits.IOCBN1 = 1;
  5982  041C  1495               	bsf	21,1	;volatile
  5983                           
  5984                           ;clock_functions.c: 925: IOCBNbits.IOCBN2 = 1;
  5985  041D  1515               	bsf	21,2	;volatile
  5986                           
  5987                           ;clock_functions.c: 926: IOCBNbits.IOCBN3 = 1;
  5988  041E  1595               	bsf	21,3	;volatile
  5989                           
  5990                           ;clock_functions.c: 929: asleep_flag = 0;
  5991  041F  0020               	movlb	0	; select bank0
  5992  0420  106E               	bcf	_asleep_flag/(0+8),_asleep_flag& (0+7)	;volatile
  5993                           
  5994                           ;clock_functions.c: 932: INTCONbits.TMR0IE = 0;
  5995  0421  128B               	bcf	11,5	;volatile
  5996                           
  5997                           ;clock_functions.c: 933: PIE1bits.TMR2IE = 0;
  5998  0422  0021               	movlb	1	; select bank1
  5999  0423  1091               	bcf	17,1	;volatile
  6000                           
  6001                           ;clock_functions.c: 936: TMR0CS = 0;
  6002  0424  1295               	bcf	21,5	;volatile
  6003                           
  6004                           ;clock_functions.c: 937: TMR2_StartTimer();
  6005  0425  318A  22B7  3183   	fcall	i1_TMR2_StartTimer
  6006                           
  6007                           ;clock_functions.c: 941: PIE1bits.TMR1IE = 0;
  6008  0428  0021               	movlb	1	; select bank1
  6009  0429  1011               	bcf	17,0	;volatile
  6010                           
  6011                           ;clock_functions.c: 944: restoreTime();
  6012  042A  3180  2049  3183   	fcall	_restoreTime
  6013                           
  6014                           ;clock_functions.c: 945: twentyFourParse();
  6015  042D  318C  24FA  3183   	fcall	_twentyFourParse
  6016                           
  6017                           ;clock_functions.c: 946: isolateDigits();
  6018  0430  3185  2543  3183   	fcall	_isolateDigits
  6019                           
  6020                           ;clock_functions.c: 947: updateDisplay();
  6021  0433  318D  2566         	fcall	_updateDisplay
  6022                           
  6023                           ;clock_functions.c: 950: PIE1bits.TMR1IE = 1;
  6024  0435  0021               	movlb	1	; select bank1
  6025  0436  1411               	bsf	17,0	;volatile
  6026  0437  0008               	return
  6027  0438                     __end_of_wakeup:	
  6028                           
  6029                           	psect	text44
  6030  0AB7                     __ptext44:	
  6031 ;; *************** function i1_TMR2_StartTimer *****************
  6032 ;; Defined at:
  6033 ;;		line 92 in file "mcc_generated_files/tmr2.c"
  6034 ;; Parameters:    Size  Location     Type
  6035 ;;		None
  6036 ;; Auto vars:     Size  Location     Type
  6037 ;;		None
  6038 ;; Return value:  Size  Location     Type
  6039 ;;                  1    wreg      void 
  6040 ;; Registers used:
  6041 ;;		None
  6042 ;; Tracked objects:
  6043 ;;		On entry : 0/0
  6044 ;;		On exit  : 0/0
  6045 ;;		Unchanged: 0/0
  6046 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6047 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6048 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6049 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6050 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6051 ;;Total ram usage:        0 bytes
  6052 ;; Hardware stack levels used:    1
  6053 ;; This function calls:
  6054 ;;		Nothing
  6055 ;; This function is called by:
  6056 ;;		_muxISR
  6057 ;;		_wakeup
  6058 ;; This function uses a non-reentrant model
  6059 ;;
  6060                           
  6061                           
  6062                           ;psect for function i1_TMR2_StartTimer
  6063  0AB7                     i1_TMR2_StartTimer:	
  6064                           
  6065                           ;tmr2.c: 95: T2CONbits.TMR2ON = 1;
  6066                           
  6067                           ;incstack = 0
  6068                           ; Regs used in i1_TMR2_StartTimer: []
  6069  0AB7  0020               	movlb	0	; select bank0
  6070  0AB8  151C               	bsf	28,2	;volatile
  6071  0AB9  0008               	return
  6072  0ABA                     __end_ofi1_TMR2_StartTimer:	
  6073                           
  6074                           	psect	text45
  6075  0AF5                     __ptext45:	
  6076 ;; *************** function i1_TMR2_SetInterruptHandler *****************
  6077 ;; Defined at:
  6078 ;;		line 137 in file "mcc_generated_files/tmr2.c"
  6079 ;; Parameters:    Size  Location     Type
  6080 ;;  InterruptHan    2    0[COMMON] PTR void 
  6081 ;;		 -> blankISR(1), TMR2_DefaultInterruptHandler(1), 
  6082 ;; Auto vars:     Size  Location     Type
  6083 ;;		None
  6084 ;; Return value:  Size  Location     Type
  6085 ;;                  1    wreg      void 
  6086 ;; Registers used:
  6087 ;;		wreg
  6088 ;; Tracked objects:
  6089 ;;		On entry : 0/0
  6090 ;;		On exit  : 0/0
  6091 ;;		Unchanged: 0/0
  6092 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6093 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6094 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6095 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6096 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6097 ;;Total ram usage:        2 bytes
  6098 ;; Hardware stack levels used:    1
  6099 ;; This function calls:
  6100 ;;		Nothing
  6101 ;; This function is called by:
  6102 ;;		_wakeup
  6103 ;; This function uses a non-reentrant model
  6104 ;;
  6105                           
  6106                           
  6107                           ;psect for function i1_TMR2_SetInterruptHandler
  6108  0AF5                     i1_TMR2_SetInterruptHandler:	
  6109                           
  6110                           ;tmr2.c: 138: TMR2_InterruptHandler = InterruptHandler;
  6111                           
  6112                           ;incstack = 0
  6113                           ; Regs used in i1_TMR2_SetInterruptHandler: [wreg]
  6114  0AF5  0871               	movf	i1TMR2_SetInterruptHandler@InterruptHandler+1,w
  6115  0AF6  0021               	movlb	1	; select bank1
  6116  0AF7  00BF               	movwf	(_TMR2_InterruptHandler+1)^(0+128)
  6117  0AF8  0870               	movf	i1TMR2_SetInterruptHandler@InterruptHandler,w
  6118  0AF9  00BE               	movwf	_TMR2_InterruptHandler^(0+128)
  6119  0AFA  0008               	return
  6120  0AFB                     __end_ofi1_TMR2_SetInterruptHandler:	
  6121                           
  6122                           	psect	text46
  6123  0AEF                     __ptext46:	
  6124 ;; *************** function i1_TMR0_SetInterruptHandler *****************
  6125 ;; Defined at:
  6126 ;;		line 125 in file "mcc_generated_files/tmr0.c"
  6127 ;; Parameters:    Size  Location     Type
  6128 ;;  InterruptHan    2    0[COMMON] PTR void 
  6129 ;;		 -> muxISR(1), TMR0_DefaultInterruptHandler(1), 
  6130 ;; Auto vars:     Size  Location     Type
  6131 ;;		None
  6132 ;; Return value:  Size  Location     Type
  6133 ;;                  1    wreg      void 
  6134 ;; Registers used:
  6135 ;;		wreg
  6136 ;; Tracked objects:
  6137 ;;		On entry : 0/0
  6138 ;;		On exit  : 0/0
  6139 ;;		Unchanged: 0/0
  6140 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6141 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6142 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6143 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6144 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6145 ;;Total ram usage:        2 bytes
  6146 ;; Hardware stack levels used:    1
  6147 ;; This function calls:
  6148 ;;		Nothing
  6149 ;; This function is called by:
  6150 ;;		_wakeup
  6151 ;; This function uses a non-reentrant model
  6152 ;;
  6153                           
  6154                           
  6155                           ;psect for function i1_TMR0_SetInterruptHandler
  6156  0AEF                     i1_TMR0_SetInterruptHandler:	
  6157                           
  6158                           ;tmr0.c: 126: TMR0_InterruptHandler = InterruptHandler;
  6159                           
  6160                           ;incstack = 0
  6161                           ; Regs used in i1_TMR0_SetInterruptHandler: [wreg]
  6162  0AEF  0871               	movf	i1TMR0_SetInterruptHandler@InterruptHandler+1,w
  6163  0AF0  0021               	movlb	1	; select bank1
  6164  0AF1  00C5               	movwf	(_TMR0_InterruptHandler+1)^(0+128)
  6165  0AF2  0870               	movf	i1TMR0_SetInterruptHandler@InterruptHandler,w
  6166  0AF3  00C4               	movwf	_TMR0_InterruptHandler^(0+128)
  6167  0AF4  0008               	return
  6168  0AF5                     __end_ofi1_TMR0_SetInterruptHandler:	
  6169                           
  6170                           	psect	text47
  6171  0AE9                     __ptext47:	
  6172 ;; *************** function i1_IOCBF4_SetInterruptHandler *****************
  6173 ;; Defined at:
  6174 ;;		line 317 in file "mcc_generated_files/pin_manager.c"
  6175 ;; Parameters:    Size  Location     Type
  6176 ;;  InterruptHan    2    0[COMMON] PTR void 
  6177 ;;		 -> powerFailISR(1), IOCBF4_DefaultInterruptHandler(1), 
  6178 ;; Auto vars:     Size  Location     Type
  6179 ;;		None
  6180 ;; Return value:  Size  Location     Type
  6181 ;;                  1    wreg      void 
  6182 ;; Registers used:
  6183 ;;		wreg
  6184 ;; Tracked objects:
  6185 ;;		On entry : 0/0
  6186 ;;		On exit  : 0/0
  6187 ;;		Unchanged: 0/0
  6188 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6189 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6190 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6191 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6192 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6193 ;;Total ram usage:        2 bytes
  6194 ;; Hardware stack levels used:    1
  6195 ;; This function calls:
  6196 ;;		Nothing
  6197 ;; This function is called by:
  6198 ;;		_wakeup
  6199 ;; This function uses a non-reentrant model
  6200 ;;
  6201                           
  6202                           
  6203                           ;psect for function i1_IOCBF4_SetInterruptHandler
  6204  0AE9                     i1_IOCBF4_SetInterruptHandler:	
  6205                           
  6206                           ;pin_manager.c: 318: IOCBF4_InterruptHandler = InterruptHandler;
  6207                           
  6208                           ;incstack = 0
  6209                           ; Regs used in i1_IOCBF4_SetInterruptHandler: [wreg]
  6210  0AE9  0871               	movf	i1IOCBF4_SetInterruptHandler@InterruptHandler+1,w
  6211  0AEA  0020               	movlb	0	; select bank0
  6212  0AEB  00ED               	movwf	_IOCBF4_InterruptHandler+1
  6213  0AEC  0870               	movf	i1IOCBF4_SetInterruptHandler@InterruptHandler,w
  6214  0AED  00EC               	movwf	_IOCBF4_InterruptHandler
  6215  0AEE  0008               	return
  6216  0AEF                     __end_ofi1_IOCBF4_SetInterruptHandler:	
  6217                           
  6218                           	psect	text48
  6219  0AE3                     __ptext48:	
  6220 ;; *************** function i1_IOCBF3_SetInterruptHandler *****************
  6221 ;; Defined at:
  6222 ;;		line 287 in file "mcc_generated_files/pin_manager.c"
  6223 ;; Parameters:    Size  Location     Type
  6224 ;;  InterruptHan    2    0[COMMON] PTR void 
  6225 ;;		 -> displayToggleISR(1), IOCBF3_DefaultInterruptHandler(1), 
  6226 ;; Auto vars:     Size  Location     Type
  6227 ;;		None
  6228 ;; Return value:  Size  Location     Type
  6229 ;;                  1    wreg      void 
  6230 ;; Registers used:
  6231 ;;		wreg
  6232 ;; Tracked objects:
  6233 ;;		On entry : 0/0
  6234 ;;		On exit  : 0/0
  6235 ;;		Unchanged: 0/0
  6236 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6237 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6238 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6239 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6240 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6241 ;;Total ram usage:        2 bytes
  6242 ;; Hardware stack levels used:    1
  6243 ;; This function calls:
  6244 ;;		Nothing
  6245 ;; This function is called by:
  6246 ;;		_wakeup
  6247 ;; This function uses a non-reentrant model
  6248 ;;
  6249                           
  6250                           
  6251                           ;psect for function i1_IOCBF3_SetInterruptHandler
  6252  0AE3                     i1_IOCBF3_SetInterruptHandler:	
  6253                           
  6254                           ;pin_manager.c: 288: IOCBF3_InterruptHandler = InterruptHandler;
  6255                           
  6256                           ;incstack = 0
  6257                           ; Regs used in i1_IOCBF3_SetInterruptHandler: [wreg]
  6258  0AE3  0871               	movf	i1IOCBF3_SetInterruptHandler@InterruptHandler+1,w
  6259  0AE4  0021               	movlb	1	; select bank1
  6260  0AE5  00B7               	movwf	(_IOCBF3_InterruptHandler+1)^(0+128)
  6261  0AE6  0870               	movf	i1IOCBF3_SetInterruptHandler@InterruptHandler,w
  6262  0AE7  00B6               	movwf	_IOCBF3_InterruptHandler^(0+128)
  6263  0AE8  0008               	return
  6264  0AE9                     __end_ofi1_IOCBF3_SetInterruptHandler:	
  6265                           
  6266                           	psect	text49
  6267  0ADD                     __ptext49:	
  6268 ;; *************** function i1_IOCBF2_SetInterruptHandler *****************
  6269 ;; Defined at:
  6270 ;;		line 257 in file "mcc_generated_files/pin_manager.c"
  6271 ;; Parameters:    Size  Location     Type
  6272 ;;  InterruptHan    2    0[COMMON] PTR void 
  6273 ;;		 -> setHoursISR(1), IOCBF2_DefaultInterruptHandler(1), 
  6274 ;; Auto vars:     Size  Location     Type
  6275 ;;		None
  6276 ;; Return value:  Size  Location     Type
  6277 ;;                  1    wreg      void 
  6278 ;; Registers used:
  6279 ;;		wreg
  6280 ;; Tracked objects:
  6281 ;;		On entry : 0/0
  6282 ;;		On exit  : 0/0
  6283 ;;		Unchanged: 0/0
  6284 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6285 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6286 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6287 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6288 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6289 ;;Total ram usage:        2 bytes
  6290 ;; Hardware stack levels used:    1
  6291 ;; This function calls:
  6292 ;;		Nothing
  6293 ;; This function is called by:
  6294 ;;		_wakeup
  6295 ;; This function uses a non-reentrant model
  6296 ;;
  6297                           
  6298                           
  6299                           ;psect for function i1_IOCBF2_SetInterruptHandler
  6300  0ADD                     i1_IOCBF2_SetInterruptHandler:	
  6301                           
  6302                           ;pin_manager.c: 258: IOCBF2_InterruptHandler = InterruptHandler;
  6303                           
  6304                           ;incstack = 0
  6305                           ; Regs used in i1_IOCBF2_SetInterruptHandler: [wreg]
  6306  0ADD  0871               	movf	i1IOCBF2_SetInterruptHandler@InterruptHandler+1,w
  6307  0ADE  0021               	movlb	1	; select bank1
  6308  0ADF  00B9               	movwf	(_IOCBF2_InterruptHandler+1)^(0+128)
  6309  0AE0  0870               	movf	i1IOCBF2_SetInterruptHandler@InterruptHandler,w
  6310  0AE1  00B8               	movwf	_IOCBF2_InterruptHandler^(0+128)
  6311  0AE2  0008               	return
  6312  0AE3                     __end_ofi1_IOCBF2_SetInterruptHandler:	
  6313                           
  6314                           	psect	text50
  6315  0AD7                     __ptext50:	
  6316 ;; *************** function i1_IOCBF1_SetInterruptHandler *****************
  6317 ;; Defined at:
  6318 ;;		line 227 in file "mcc_generated_files/pin_manager.c"
  6319 ;; Parameters:    Size  Location     Type
  6320 ;;  InterruptHan    2    0[COMMON] PTR void 
  6321 ;;		 -> setMinutesISR(1), IOCBF1_DefaultInterruptHandler(1), 
  6322 ;; Auto vars:     Size  Location     Type
  6323 ;;		None
  6324 ;; Return value:  Size  Location     Type
  6325 ;;                  1    wreg      void 
  6326 ;; Registers used:
  6327 ;;		wreg
  6328 ;; Tracked objects:
  6329 ;;		On entry : 0/0
  6330 ;;		On exit  : 0/0
  6331 ;;		Unchanged: 0/0
  6332 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6333 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6334 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6335 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6336 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6337 ;;Total ram usage:        2 bytes
  6338 ;; Hardware stack levels used:    1
  6339 ;; This function calls:
  6340 ;;		Nothing
  6341 ;; This function is called by:
  6342 ;;		_wakeup
  6343 ;; This function uses a non-reentrant model
  6344 ;;
  6345                           
  6346                           
  6347                           ;psect for function i1_IOCBF1_SetInterruptHandler
  6348  0AD7                     i1_IOCBF1_SetInterruptHandler:	
  6349                           
  6350                           ;pin_manager.c: 228: IOCBF1_InterruptHandler = InterruptHandler;
  6351                           
  6352                           ;incstack = 0
  6353                           ; Regs used in i1_IOCBF1_SetInterruptHandler: [wreg]
  6354  0AD7  0871               	movf	i1IOCBF1_SetInterruptHandler@InterruptHandler+1,w
  6355  0AD8  0021               	movlb	1	; select bank1
  6356  0AD9  00BB               	movwf	(_IOCBF1_InterruptHandler+1)^(0+128)
  6357  0ADA  0870               	movf	i1IOCBF1_SetInterruptHandler@InterruptHandler,w
  6358  0ADB  00BA               	movwf	_IOCBF1_InterruptHandler^(0+128)
  6359  0ADC  0008               	return
  6360  0ADD                     __end_ofi1_IOCBF1_SetInterruptHandler:	
  6361                           
  6362                           	psect	text51
  6363  0AD1                     __ptext51:	
  6364 ;; *************** function i1_IOCBF0_SetInterruptHandler *****************
  6365 ;; Defined at:
  6366 ;;		line 197 in file "mcc_generated_files/pin_manager.c"
  6367 ;; Parameters:    Size  Location     Type
  6368 ;;  InterruptHan    2    0[COMMON] PTR void 
  6369 ;;		 -> setSecondsISR(1), IOCBF0_DefaultInterruptHandler(1), 
  6370 ;; Auto vars:     Size  Location     Type
  6371 ;;		None
  6372 ;; Return value:  Size  Location     Type
  6373 ;;                  1    wreg      void 
  6374 ;; Registers used:
  6375 ;;		wreg
  6376 ;; Tracked objects:
  6377 ;;		On entry : 0/0
  6378 ;;		On exit  : 0/0
  6379 ;;		Unchanged: 0/0
  6380 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6381 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6382 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6383 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6384 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6385 ;;Total ram usage:        2 bytes
  6386 ;; Hardware stack levels used:    1
  6387 ;; This function calls:
  6388 ;;		Nothing
  6389 ;; This function is called by:
  6390 ;;		_wakeup
  6391 ;; This function uses a non-reentrant model
  6392 ;;
  6393                           
  6394                           
  6395                           ;psect for function i1_IOCBF0_SetInterruptHandler
  6396  0AD1                     i1_IOCBF0_SetInterruptHandler:	
  6397                           
  6398                           ;pin_manager.c: 198: IOCBF0_InterruptHandler = InterruptHandler;
  6399                           
  6400                           ;incstack = 0
  6401                           ; Regs used in i1_IOCBF0_SetInterruptHandler: [wreg]
  6402  0AD1  0871               	movf	i1IOCBF0_SetInterruptHandler@InterruptHandler+1,w
  6403  0AD2  0021               	movlb	1	; select bank1
  6404  0AD3  00BD               	movwf	(_IOCBF0_InterruptHandler+1)^(0+128)
  6405  0AD4  0870               	movf	i1IOCBF0_SetInterruptHandler@InterruptHandler,w
  6406  0AD5  00BC               	movwf	_IOCBF0_InterruptHandler^(0+128)
  6407  0AD6  0008               	return
  6408  0AD7                     __end_ofi1_IOCBF0_SetInterruptHandler:	
  6409                           
  6410                           	psect	text52
  6411  0049                     __ptext52:	
  6412 ;; *************** function _restoreTime *****************
  6413 ;; Defined at:
  6414 ;;		line 1002 in file "clock_functions.c"
  6415 ;; Parameters:    Size  Location     Type
  6416 ;;		None
  6417 ;; Auto vars:     Size  Location     Type
  6418 ;;  sleepy_secon    3   45[BANK0 ] float 
  6419 ;;  sleepy_secon    3   42[BANK0 ] float 
  6420 ;;  calc_hours      2   52[BANK0 ] int 
  6421 ;;  calc_minutes    2   50[BANK0 ] int 
  6422 ;;  calc_seconds    2   48[BANK0 ] int 
  6423 ;; Return value:  Size  Location     Type
  6424 ;;                  1    wreg      void 
  6425 ;; Registers used:
  6426 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6427 ;; Tracked objects:
  6428 ;;		On entry : 0/0
  6429 ;;		On exit  : 0/0
  6430 ;;		Unchanged: 0/0
  6431 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6432 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6433 ;;      Locals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6434 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6435 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6436 ;;Total ram usage:       15 bytes
  6437 ;; Hardware stack levels used:    1
  6438 ;; Hardware stack levels required when called:    4
  6439 ;; This function calls:
  6440 ;;		___aldiv
  6441 ;;		___almod
  6442 ;;		___ftmul
  6443 ;;		___fttol
  6444 ;;		___ltdiv
  6445 ;;		___ltmod
  6446 ;;		___lttoft
  6447 ;;		_round
  6448 ;; This function is called by:
  6449 ;;		_wakeup
  6450 ;; This function uses a non-reentrant model
  6451 ;;
  6452                           
  6453                           
  6454                           ;psect for function _restoreTime
  6455  0049                     _restoreTime:	
  6456                           
  6457                           ;clock_functions.c: 1009: float sleepy_seconds_adjusted = sleepy_seconds * extended_cali
      +                          bration;
  6458                           
  6459                           ;incstack = 0
  6460                           ; Regs used in _restoreTime: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6461  0049  3008               	movlw	low (_extended_calibration| (0+32768))
  6462  004A  0084               	movwf	4
  6463  004B  3090               	movlw	high (_extended_calibration| (0+32768))
  6464  004C  0085               	movwf	5
  6465  004D  3F00               	moviw [0]fsr0
  6466  004E  0020               	movlb	0	; select bank0
  6467  004F  00A0               	movwf	___ftmul@f1
  6468  0050  3F01               	moviw [1]fsr0
  6469  0051  00A1               	movwf	___ftmul@f1+1
  6470  0052  3F02               	moviw [2]fsr0
  6471  0053  00A2               	movwf	___ftmul@f1+2
  6472  0054  0857               	movf	_sleepy_seconds,w	;volatile
  6473  0055  00F8               	movwf	___lttoft@c
  6474  0056  0858               	movf	_sleepy_seconds+1,w	;volatile
  6475  0057  00F9               	movwf	___lttoft@c+1
  6476  0058  0859               	movf	_sleepy_seconds+2,w	;volatile
  6477  0059  00FA               	movwf	___lttoft@c+2
  6478  005A  318C  2406  3180   	fcall	___lttoft
  6479  005D  0878               	movf	?___lttoft,w
  6480  005E  0020               	movlb	0	; select bank0
  6481  005F  00A3               	movwf	___ftmul@f2
  6482  0060  0879               	movf	?___lttoft+1,w
  6483  0061  00A4               	movwf	___ftmul@f2+1
  6484  0062  087A               	movf	?___lttoft+2,w
  6485  0063  00A5               	movwf	___ftmul@f2+2
  6486  0064  3182  2241  3180   	fcall	___ftmul
  6487  0067  0020               	movlb	0	; select bank0
  6488  0068  0820               	movf	?___ftmul,w
  6489  0069  00CA               	movwf	restoreTime@sleepy_seconds_adjusted
  6490  006A  0821               	movf	?___ftmul+1,w
  6491  006B  00CB               	movwf	restoreTime@sleepy_seconds_adjusted+1
  6492  006C  0822               	movf	?___ftmul+2,w
  6493  006D  00CC               	movwf	restoreTime@sleepy_seconds_adjusted+2
  6494                           
  6495                           ;clock_functions.c: 1010: float sleepy_seconds_rounded = round(sleepy_seconds_adjusted);
  6496  006E  084A               	movf	restoreTime@sleepy_seconds_adjusted,w
  6497  006F  00C1               	movwf	round@x
  6498  0070  084B               	movf	restoreTime@sleepy_seconds_adjusted+1,w
  6499  0071  00C2               	movwf	round@x+1
  6500  0072  084C               	movf	restoreTime@sleepy_seconds_adjusted+2,w
  6501  0073  00C3               	movwf	round@x+2
  6502  0074  318F  27AF  3180   	fcall	_round
  6503  0077  0020               	movlb	0	; select bank0
  6504  0078  0841               	movf	?_round,w
  6505  0079  00CD               	movwf	restoreTime@sleepy_seconds_rounded
  6506  007A  0842               	movf	?_round+1,w
  6507  007B  00CE               	movwf	restoreTime@sleepy_seconds_rounded+1
  6508  007C  0843               	movf	?_round+2,w
  6509  007D  00CF               	movwf	restoreTime@sleepy_seconds_rounded+2
  6510                           
  6511                           ;clock_functions.c: 1011: sleepy_seconds = (unsigned short long) sleepy_seconds_rounded;
  6512  007E  084D               	movf	restoreTime@sleepy_seconds_rounded,w
  6513  007F  00F0               	movwf	___fttol@f1
  6514  0080  084E               	movf	restoreTime@sleepy_seconds_rounded+1,w
  6515  0081  00F1               	movwf	___fttol@f1+1
  6516  0082  084F               	movf	restoreTime@sleepy_seconds_rounded+2,w
  6517  0083  00F2               	movwf	___fttol@f1+2
  6518  0084  3184  2438  3180   	fcall	___fttol
  6519  0087  0872               	movf	?___fttol+2,w
  6520  0088  0020               	movlb	0	; select bank0
  6521  0089  00D9               	movwf	_sleepy_seconds+2	;volatile
  6522  008A  0871               	movf	?___fttol+1,w
  6523  008B  00D8               	movwf	_sleepy_seconds+1	;volatile
  6524  008C  0870               	movf	?___fttol,w
  6525  008D  00D7               	movwf	_sleepy_seconds	;volatile
  6526  008E                     i1l706:	
  6527                           ;clock_functions.c: 1014: while (sleepy_seconds >= 86400) {
  6528                           
  6529  008E  3001               	movlw	1
  6530  008F  0259               	subwf	_sleepy_seconds+2,w	;volatile
  6531  0090  1D03               	skipz
  6532  0091  2898               	goto	u300_25
  6533  0092  3051               	movlw	81
  6534  0093  0258               	subwf	_sleepy_seconds+1,w	;volatile
  6535  0094  1D03               	skipz
  6536  0095  2898               	goto	u300_25
  6537  0096  3080               	movlw	128
  6538  0097  0257               	subwf	_sleepy_seconds,w	;volatile
  6539  0098                     u300_25:	
  6540  0098  1C03               	btfss	3,0
  6541  0099  28A7               	goto	i1l3000
  6542                           
  6543                           ;clock_functions.c: 1016: sleepy_seconds -= 86400;
  6544  009A  3080               	movlw	128
  6545  009B  00C7               	movwf	??_restoreTime
  6546  009C  3051               	movlw	81
  6547  009D  00C8               	movwf	??_restoreTime+1
  6548  009E  3001               	movlw	1
  6549  009F  00C9               	movwf	??_restoreTime+2
  6550  00A0  0847               	movf	??_restoreTime,w
  6551  00A1  02D7               	subwf	_sleepy_seconds,f	;volatile
  6552  00A2  0848               	movf	??_restoreTime+1,w
  6553  00A3  3BD8               	subwfb	_sleepy_seconds+1,f	;volatile
  6554  00A4  0849               	movf	??_restoreTime+2,w
  6555  00A5  3BD9               	subwfb	_sleepy_seconds+2,f	;volatile
  6556  00A6  288E               	goto	i1l706
  6557  00A7                     i1l3000:	
  6558                           
  6559                           ;clock_functions.c: 1018: }
  6560                           ;clock_functions.c: 1021: int calc_seconds = (sleepy_seconds % 60);
  6561  00A7  303C               	movlw	60
  6562  00A8  00F0               	movwf	___ltmod@divisor
  6563  00A9  3000               	movlw	0
  6564  00AA  00F1               	movwf	___ltmod@divisor+1
  6565  00AB  3000               	movlw	0
  6566  00AC  00F2               	movwf	___ltmod@divisor+2
  6567  00AD  0857               	movf	_sleepy_seconds,w	;volatile
  6568  00AE  00F3               	movwf	___ltmod@dividend
  6569  00AF  0858               	movf	_sleepy_seconds+1,w	;volatile
  6570  00B0  00F4               	movwf	___ltmod@dividend+1
  6571  00B1  0859               	movf	_sleepy_seconds+2,w	;volatile
  6572  00B2  00F5               	movwf	___ltmod@dividend+2
  6573  00B3  318E  2640  3180   	fcall	___ltmod
  6574  00B6  0871               	movf	?___ltmod+1,w
  6575  00B7  0020               	movlb	0	; select bank0
  6576  00B8  00D1               	movwf	restoreTime@calc_seconds+1
  6577  00B9  0870               	movf	?___ltmod,w
  6578  00BA  00D0               	movwf	restoreTime@calc_seconds
  6579                           
  6580                           ;clock_functions.c: 1022: int calc_minutes = (sleepy_seconds % 3600) / 60;
  6581  00BB  303C               	movlw	60
  6582  00BC  00F8               	movwf	___ltdiv@divisor
  6583  00BD  3000               	movlw	0
  6584  00BE  00F9               	movwf	___ltdiv@divisor+1
  6585  00BF  3000               	movlw	0
  6586  00C0  00FA               	movwf	___ltdiv@divisor+2
  6587  00C1  0857               	movf	_sleepy_seconds,w	;volatile
  6588  00C2  00F3               	movwf	___ltmod@dividend
  6589  00C3  0858               	movf	_sleepy_seconds+1,w	;volatile
  6590  00C4  00F4               	movwf	___ltmod@dividend+1
  6591  00C5  0859               	movf	_sleepy_seconds+2,w	;volatile
  6592  00C6  00F5               	movwf	___ltmod@dividend+2
  6593  00C7  3010               	movlw	16
  6594  00C8  00F0               	movwf	___ltmod@divisor
  6595  00C9  300E               	movlw	14
  6596  00CA  00F1               	movwf	___ltmod@divisor+1
  6597  00CB  3000               	movlw	0
  6598  00CC  00F2               	movwf	___ltmod@divisor+2
  6599  00CD  318E  2640  3180   	fcall	___ltmod
  6600  00D0  0870               	movf	?___ltmod,w
  6601  00D1  00FB               	movwf	___ltdiv@dividend
  6602  00D2  0871               	movf	?___ltmod+1,w
  6603  00D3  00FC               	movwf	___ltdiv@dividend+1
  6604  00D4  0872               	movf	?___ltmod+2,w
  6605  00D5  00FD               	movwf	___ltdiv@dividend+2
  6606  00D6  318F  276A  3180   	fcall	___ltdiv
  6607  00D9  0879               	movf	?___ltdiv+1,w
  6608  00DA  0020               	movlb	0	; select bank0
  6609  00DB  00D3               	movwf	restoreTime@calc_minutes+1
  6610  00DC  0878               	movf	?___ltdiv,w
  6611  00DD  00D2               	movwf	restoreTime@calc_minutes
  6612                           
  6613                           ;clock_functions.c: 1023: int calc_hours = (sleepy_seconds % 86400) / 3600;
  6614  00DE  3000               	movlw	0
  6615  00DF  00A3               	movwf	___aldiv@divisor+3
  6616  00E0  3000               	movlw	0
  6617  00E1  00A2               	movwf	___aldiv@divisor+2
  6618  00E2  300E               	movlw	14
  6619  00E3  00A1               	movwf	___aldiv@divisor+1
  6620  00E4  3010               	movlw	16
  6621  00E5  00A0               	movwf	___aldiv@divisor
  6622  00E6  0857               	movf	_sleepy_seconds,w	;volatile
  6623  00E7  00F4               	movwf	___almod@dividend
  6624  00E8  0858               	movf	_sleepy_seconds+1,w	;volatile
  6625  00E9  00F5               	movwf	___almod@dividend+1
  6626  00EA  0859               	movf	_sleepy_seconds+2,w	;volatile
  6627  00EB  00F6               	movwf	___almod@dividend+2
  6628  00EC  01F7               	clrf	___almod@dividend+3
  6629  00ED  3000               	movlw	0
  6630  00EE  00F3               	movwf	___almod@divisor+3
  6631  00EF  3001               	movlw	1
  6632  00F0  00F2               	movwf	___almod@divisor+2
  6633  00F1  3051               	movlw	81
  6634  00F2  00F1               	movwf	___almod@divisor+1
  6635  00F3  3080               	movlw	128
  6636  00F4  00F0               	movwf	___almod@divisor
  6637  00F5  3186  2649  3180   	fcall	___almod
  6638  00F8  0873               	movf	?___almod+3,w
  6639  00F9  0020               	movlb	0	; select bank0
  6640  00FA  00A7               	movwf	___aldiv@dividend+3
  6641  00FB  0872               	movf	?___almod+2,w
  6642  00FC  00A6               	movwf	___aldiv@dividend+2
  6643  00FD  0871               	movf	?___almod+1,w
  6644  00FE  00A5               	movwf	___aldiv@dividend+1
  6645  00FF  0870               	movf	?___almod,w
  6646  0100  00A4               	movwf	___aldiv@dividend
  6647  0101  3185  25C7  3180   	fcall	___aldiv
  6648  0104  0020               	movlb	0	; select bank0
  6649  0105  0821               	movf	?___aldiv+1,w
  6650  0106  00D5               	movwf	restoreTime@calc_hours+1
  6651  0107  0820               	movf	?___aldiv,w
  6652  0108  00D4               	movwf	restoreTime@calc_hours
  6653                           
  6654                           ;clock_functions.c: 1026: seconds = seconds + calc_seconds;
  6655  0109  0866               	movf	_seconds,w	;volatile
  6656  010A  0750               	addwf	restoreTime@calc_seconds,w
  6657  010B  00E6               	movwf	_seconds	;volatile
  6658  010C  0867               	movf	_seconds+1,w	;volatile
  6659  010D  3D51               	addwfc	restoreTime@calc_seconds+1,w
  6660  010E  00E7               	movwf	_seconds+1	;volatile
  6661                           
  6662                           ;clock_functions.c: 1027: minutes = minutes + calc_minutes;
  6663  010F  0864               	movf	_minutes,w	;volatile
  6664  0110  0752               	addwf	restoreTime@calc_minutes,w
  6665  0111  00E4               	movwf	_minutes	;volatile
  6666  0112  0865               	movf	_minutes+1,w	;volatile
  6667  0113  3D53               	addwfc	restoreTime@calc_minutes+1,w
  6668  0114  00E5               	movwf	_minutes+1	;volatile
  6669                           
  6670                           ;clock_functions.c: 1028: hours = hours + calc_hours;
  6671  0115  0862               	movf	_hours,w	;volatile
  6672  0116  0754               	addwf	restoreTime@calc_hours,w
  6673  0117  00E2               	movwf	_hours	;volatile
  6674  0118  0863               	movf	_hours+1,w	;volatile
  6675  0119  3D55               	addwfc	restoreTime@calc_hours+1,w
  6676  011A  00E3               	movwf	_hours+1	;volatile
  6677                           
  6678                           ;clock_functions.c: 1031: if (seconds >= 60) {
  6679  011B  3000               	movlw	0
  6680  011C  0267               	subwf	_seconds+1,w	;volatile
  6681  011D  303C               	movlw	60
  6682  011E  1903               	skipnz
  6683  011F  0266               	subwf	_seconds,w	;volatile
  6684  0120  1C03               	skipc
  6685  0121  292A               	goto	i1l709
  6686                           
  6687                           ;clock_functions.c: 1033: seconds -= 60;
  6688  0122  303C               	movlw	60
  6689  0123  02E6               	subwf	_seconds,f	;volatile
  6690  0124  3000               	movlw	0
  6691  0125  3BE7               	subwfb	_seconds+1,f	;volatile
  6692                           
  6693                           ;clock_functions.c: 1034: minutes++;
  6694  0126  3001               	movlw	1
  6695  0127  07E4               	addwf	_minutes,f	;volatile
  6696  0128  3000               	movlw	0
  6697  0129  3DE5               	addwfc	_minutes+1,f	;volatile
  6698  012A                     i1l709:	
  6699                           
  6700                           ;clock_functions.c: 1035: }
  6701                           ;clock_functions.c: 1037: if (minutes >= 60) {
  6702  012A  3000               	movlw	0
  6703  012B  0265               	subwf	_minutes+1,w	;volatile
  6704  012C  303C               	movlw	60
  6705  012D  1903               	skipnz
  6706  012E  0264               	subwf	_minutes,w	;volatile
  6707  012F  1C03               	skipc
  6708  0130  2939               	goto	i1l710
  6709                           
  6710                           ;clock_functions.c: 1039: minutes -= 60;
  6711  0131  303C               	movlw	60
  6712  0132  02E4               	subwf	_minutes,f	;volatile
  6713  0133  3000               	movlw	0
  6714  0134  3BE5               	subwfb	_minutes+1,f	;volatile
  6715                           
  6716                           ;clock_functions.c: 1040: hours++;
  6717  0135  3001               	movlw	1
  6718  0136  07E2               	addwf	_hours,f	;volatile
  6719  0137  3000               	movlw	0
  6720  0138  3DE3               	addwfc	_hours+1,f	;volatile
  6721  0139                     i1l710:	
  6722                           
  6723                           ;clock_functions.c: 1042: }
  6724                           ;clock_functions.c: 1044: if (hours >= 24) {
  6725  0139  3000               	movlw	0
  6726  013A  0263               	subwf	_hours+1,w	;volatile
  6727  013B  3018               	movlw	24
  6728  013C  1903               	skipnz
  6729  013D  0262               	subwf	_hours,w	;volatile
  6730  013E  1C03               	skipc
  6731  013F  2944               	goto	i1l711
  6732                           
  6733                           ;clock_functions.c: 1046: hours -= 24;
  6734  0140  3018               	movlw	24
  6735  0141  02E2               	subwf	_hours,f	;volatile
  6736  0142  3000               	movlw	0
  6737  0143  3BE3               	subwfb	_hours+1,f	;volatile
  6738  0144                     i1l711:	
  6739                           
  6740                           ;clock_functions.c: 1048: }
  6741                           ;clock_functions.c: 1051: sleepy_seconds = 0;
  6742  0144  3000               	movlw	0
  6743  0145  00D7               	movwf	_sleepy_seconds	;volatile
  6744  0146  3000               	movlw	0
  6745  0147  00D8               	movwf	_sleepy_seconds+1	;volatile
  6746  0148  3000               	movlw	0
  6747  0149  00D9               	movwf	_sleepy_seconds+2	;volatile
  6748  014A  0008               	return
  6749  014B                     __end_of_restoreTime:	
  6750                           
  6751                           	psect	text53
  6752  0FAF                     __ptext53:	
  6753 ;; *************** function _round *****************
  6754 ;; Defined at:
  6755 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\round.c"
  6756 ;; Parameters:    Size  Location     Type
  6757 ;;  x               3   33[BANK0 ] void 
  6758 ;; Auto vars:     Size  Location     Type
  6759 ;;  f               3   36[BANK0 ] void 
  6760 ;; Return value:  Size  Location     Type
  6761 ;;                  3   33[BANK0 ] void 
  6762 ;; Registers used:
  6763 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6764 ;; Tracked objects:
  6765 ;;		On entry : 0/0
  6766 ;;		On exit  : 0/0
  6767 ;;		Unchanged: 0/0
  6768 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6769 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6770 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6771 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6772 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6773 ;;Total ram usage:        6 bytes
  6774 ;; Hardware stack levels used:    1
  6775 ;; Hardware stack levels required when called:    3
  6776 ;; This function calls:
  6777 ;;		___ftadd
  6778 ;;		___ftneg
  6779 ;;		_trunc
  6780 ;; This function is called by:
  6781 ;;		_restoreTime
  6782 ;; This function uses a non-reentrant model
  6783 ;;
  6784                           
  6785                           
  6786                           ;psect for function _round
  6787  0FAF                     _round:	
  6788                           
  6789                           ;incstack = 0
  6790                           ; Regs used in _round: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  6791  0FAF  0020               	movlb	0	; select bank0
  6792  0FB0  0841               	movf	round@x,w
  6793  0FB1  00B4               	movwf	___ftadd@f1
  6794  0FB2  0842               	movf	round@x+1,w
  6795  0FB3  00B5               	movwf	___ftadd@f1+1
  6796  0FB4  0843               	movf	round@x+2,w
  6797  0FB5  00B6               	movwf	___ftadd@f1+2
  6798  0FB6  0841               	movf	round@x,w
  6799  0FB7  00A8               	movwf	trunc@x
  6800  0FB8  0842               	movf	round@x+1,w
  6801  0FB9  00A9               	movwf	trunc@x+1
  6802  0FBA  0843               	movf	round@x+2,w
  6803  0FBB  00AA               	movwf	trunc@x+2
  6804  0FBC  318F  2729  318F   	fcall	_trunc
  6805  0FBF  0020               	movlb	0	; select bank0
  6806  0FC0  0828               	movf	?_trunc,w
  6807  0FC1  00B1               	movwf	___ftneg@f1
  6808  0FC2  0829               	movf	?_trunc+1,w
  6809  0FC3  00B2               	movwf	___ftneg@f1+1
  6810  0FC4  082A               	movf	?_trunc+2,w
  6811  0FC5  00B3               	movwf	___ftneg@f1+2
  6812  0FC6  318B  2331  318F   	fcall	___ftneg
  6813  0FC9  0020               	movlb	0	; select bank0
  6814  0FCA  0831               	movf	?___ftneg,w
  6815  0FCB  00B7               	movwf	___ftadd@f2
  6816  0FCC  0832               	movf	?___ftneg+1,w
  6817  0FCD  00B8               	movwf	___ftadd@f2+1
  6818  0FCE  0833               	movf	?___ftneg+2,w
  6819  0FCF  00B9               	movwf	___ftadd@f2+2
  6820  0FD0  3181  214B  318F   	fcall	___ftadd
  6821  0FD3  0020               	movlb	0	; select bank0
  6822  0FD4  0834               	movf	?___ftadd,w
  6823  0FD5  00C4               	movwf	round@f
  6824  0FD6  0835               	movf	?___ftadd+1,w
  6825  0FD7  00C5               	movwf	round@f+1
  6826  0FD8  0836               	movf	?___ftadd+2,w
  6827  0FD9  00C6               	movwf	round@f+2
  6828  0FDA  0844               	movf	round@f,w
  6829  0FDB  00B4               	movwf	___ftadd@f1
  6830  0FDC  0845               	movf	round@f+1,w
  6831  0FDD  00B5               	movwf	___ftadd@f1+1
  6832  0FDE  0846               	movf	round@f+2,w
  6833  0FDF  00B6               	movwf	___ftadd@f1+2
  6834  0FE0  0841               	movf	round@x,w
  6835  0FE1  00B7               	movwf	___ftadd@f2
  6836  0FE2  0842               	movf	round@x+1,w
  6837  0FE3  00B8               	movwf	___ftadd@f2+1
  6838  0FE4  0843               	movf	round@x+2,w
  6839  0FE5  00B9               	movwf	___ftadd@f2+2
  6840  0FE6  3181  214B  318F   	fcall	___ftadd
  6841  0FE9  0020               	movlb	0	; select bank0
  6842  0FEA  0834               	movf	?___ftadd,w
  6843  0FEB  00C1               	movwf	round@x
  6844  0FEC  0835               	movf	?___ftadd+1,w
  6845  0FED  00C2               	movwf	round@x+1
  6846  0FEE  0836               	movf	?___ftadd+2,w
  6847  0FEF  00C3               	movwf	round@x+2
  6848  0FF0  0841               	movf	round@x,w
  6849  0FF1  00A8               	movwf	trunc@x
  6850  0FF2  0842               	movf	round@x+1,w
  6851  0FF3  00A9               	movwf	trunc@x+1
  6852  0FF4  0843               	movf	round@x+2,w
  6853  0FF5  00AA               	movwf	trunc@x+2
  6854  0FF6  318F  2729         	fcall	_trunc
  6855  0FF8  0020               	movlb	0	; select bank0
  6856  0FF9  0828               	movf	?_trunc,w
  6857  0FFA  00C1               	movwf	?_round
  6858  0FFB  0829               	movf	?_trunc+1,w
  6859  0FFC  00C2               	movwf	?_round+1
  6860  0FFD  082A               	movf	?_trunc+2,w
  6861  0FFE  00C3               	movwf	?_round+2
  6862  0FFF  0008               	return
  6863  1000                     __end_of_round:	
  6864                           
  6865                           	psect	text54
  6866  0F29                     __ptext54:	
  6867 ;; *************** function _trunc *****************
  6868 ;; Defined at:
  6869 ;;		line 13 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\trunc.c"
  6870 ;; Parameters:    Size  Location     Type
  6871 ;;  x               3    8[BANK0 ] void 
  6872 ;; Auto vars:     Size  Location     Type
  6873 ;;  i               3   12[BANK0 ] void 
  6874 ;;  expon           2   15[BANK0 ] int 
  6875 ;; Return value:  Size  Location     Type
  6876 ;;                  3    8[BANK0 ] int 
  6877 ;; Registers used:
  6878 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6879 ;; Tracked objects:
  6880 ;;		On entry : 0/0
  6881 ;;		On exit  : 0/0
  6882 ;;		Unchanged: 0/0
  6883 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6884 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6885 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6886 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6887 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6888 ;;Total ram usage:        9 bytes
  6889 ;; Hardware stack levels used:    1
  6890 ;; Hardware stack levels required when called:    2
  6891 ;; This function calls:
  6892 ;;		___altoft
  6893 ;;		___fttol
  6894 ;;		_frexp
  6895 ;; This function is called by:
  6896 ;;		_round
  6897 ;; This function uses a non-reentrant model
  6898 ;;
  6899                           
  6900                           
  6901                           ;psect for function _trunc
  6902  0F29                     _trunc:	
  6903                           
  6904                           ;incstack = 0
  6905                           ; Regs used in _trunc: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  6906  0F29  0020               	movlb	0	; select bank0
  6907  0F2A  0828               	movf	trunc@x,w
  6908  0F2B  00F0               	movwf	frexp@value
  6909  0F2C  0829               	movf	trunc@x+1,w
  6910  0F2D  00F1               	movwf	frexp@value+1
  6911  0F2E  082A               	movf	trunc@x+2,w
  6912  0F2F  00F2               	movwf	frexp@value+2
  6913  0F30  302F               	movlw	(low (trunc@expon| 0))& (0+255)
  6914  0F31  00AB               	movwf	??_trunc
  6915  0F32  082B               	movf	??_trunc,w
  6916  0F33  00F3               	movwf	frexp@eptr
  6917  0F34  318E  260B  318F   	fcall	_frexp
  6918  0F37  0020               	movlb	0	; select bank0
  6919  0F38  1FB0               	btfss	trunc@expon+1,7
  6920  0F39  2F41               	goto	i1l2738
  6921  0F3A  3000               	movlw	0
  6922  0F3B  00A8               	movwf	?_trunc
  6923  0F3C  3000               	movlw	0
  6924  0F3D  00A9               	movwf	?_trunc+1
  6925  0F3E  3000               	movlw	0
  6926  0F3F  00AA               	movwf	?_trunc+2
  6927  0F40  0008               	return
  6928  0F41                     i1l2738:	
  6929  0F41  3000               	movlw	0
  6930  0F42  0230               	subwf	trunc@expon+1,w
  6931  0F43  3015               	movlw	21
  6932  0F44  1903               	skipnz
  6933  0F45  022F               	subwf	trunc@expon,w
  6934  0F46  1803               	btfsc	3,0
  6935  0F47  0008               	return
  6936  0F48  0828               	movf	trunc@x,w
  6937  0F49  00F0               	movwf	___fttol@f1
  6938  0F4A  0829               	movf	trunc@x+1,w
  6939  0F4B  00F1               	movwf	___fttol@f1+1
  6940  0F4C  082A               	movf	trunc@x+2,w
  6941  0F4D  00F2               	movwf	___fttol@f1+2
  6942  0F4E  3184  2438  318F   	fcall	___fttol
  6943  0F51  0873               	movf	?___fttol+3,w
  6944  0F52  0020               	movlb	0	; select bank0
  6945  0F53  00A3               	movwf	___altoft@c+3
  6946  0F54  0872               	movf	?___fttol+2,w
  6947  0F55  00A2               	movwf	___altoft@c+2
  6948  0F56  0871               	movf	?___fttol+1,w
  6949  0F57  00A1               	movwf	___altoft@c+1
  6950  0F58  0870               	movf	?___fttol,w
  6951  0F59  00A0               	movwf	___altoft@c
  6952  0F5A  318E  26EC         	fcall	___altoft
  6953  0F5C  0020               	movlb	0	; select bank0
  6954  0F5D  0820               	movf	?___altoft,w
  6955  0F5E  00AC               	movwf	trunc@i
  6956  0F5F  0821               	movf	?___altoft+1,w
  6957  0F60  00AD               	movwf	trunc@i+1
  6958  0F61  0822               	movf	?___altoft+2,w
  6959  0F62  00AE               	movwf	trunc@i+2
  6960  0F63  082C               	movf	trunc@i,w
  6961  0F64  00A8               	movwf	?_trunc
  6962  0F65  082D               	movf	trunc@i+1,w
  6963  0F66  00A9               	movwf	?_trunc+1
  6964  0F67  082E               	movf	trunc@i+2,w
  6965  0F68  00AA               	movwf	?_trunc+2
  6966  0F69  0008               	return
  6967  0F6A                     __end_of_trunc:	
  6968                           
  6969                           	psect	text55
  6970  0E0B                     __ptext55:	
  6971 ;; *************** function _frexp *****************
  6972 ;; Defined at:
  6973 ;;		line 254 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\frexp.c"
  6974 ;; Parameters:    Size  Location     Type
  6975 ;;  value           3    0[COMMON] int 
  6976 ;;  eptr            1    3[COMMON] PTR int 
  6977 ;;		 -> trunc@expon(2), 
  6978 ;; Auto vars:     Size  Location     Type
  6979 ;;		None
  6980 ;; Return value:  Size  Location     Type
  6981 ;;                  3    0[COMMON] PTR int 
  6982 ;; Registers used:
  6983 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  6984 ;; Tracked objects:
  6985 ;;		On entry : 0/0
  6986 ;;		On exit  : 0/0
  6987 ;;		Unchanged: 0/0
  6988 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6989 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6990 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6991 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6992 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6993 ;;Total ram usage:        6 bytes
  6994 ;; Hardware stack levels used:    1
  6995 ;; This function calls:
  6996 ;;		Nothing
  6997 ;; This function is called by:
  6998 ;;		_trunc
  6999 ;; This function uses a non-reentrant model
  7000 ;;
  7001                           
  7002                           
  7003                           ;psect for function _frexp
  7004  0E0B                     _frexp:	
  7005                           
  7006                           ;incstack = 0
  7007                           ; Regs used in _frexp: [wreg+fsr1l+fsr1h+status,2+status,0]
  7008  0E0B  0872               	movf	frexp@value+2,w
  7009  0E0C  0471               	iorwf	frexp@value+1,w
  7010  0E0D  0470               	iorwf	frexp@value,w
  7011  0E0E  1D03               	skipz
  7012  0E0F  2E17               	goto	i1l2642
  7013  0E10  0873               	movf	frexp@eptr,w
  7014  0E11  0086               	movwf	6
  7015  0E12  0187               	clrf	7
  7016  0E13  3000               	movlw	0
  7017  0E14  3FC0               	movwi [0]fsr1
  7018  0E15  3FC1               	movwi [1]fsr1
  7019                           
  7020                           ;	Return value of _frexp is never used
  7021  0E16  0008               	return
  7022  0E17                     i1l2642:	
  7023  0E17  0872               	movf	frexp@value+2,w
  7024  0E18  397F               	andlw	127
  7025  0E19  00F4               	movwf	??_frexp
  7026  0E1A  01F5               	clrf	??_frexp+1
  7027  0E1B  35F4               	lslf	??_frexp,f
  7028  0E1C  0DF5               	rlf	??_frexp+1,f
  7029  0E1D  0873               	movf	frexp@eptr,w
  7030  0E1E  0086               	movwf	6
  7031  0E1F  0187               	clrf	7
  7032  0E20  0874               	movf	??_frexp,w
  7033  0E21  3FC0               	movwi [0]fsr1
  7034  0E22  0875               	movf	??_frexp+1,w
  7035  0E23  3FC1               	movwi [1]fsr1
  7036  0E24  0D71               	rlf	frexp@value+1,w
  7037  0E25  0D71               	rlf	frexp@value+1,w
  7038  0E26  3901               	andlw	1
  7039  0E27  00F4               	movwf	??_frexp
  7040  0E28  01F5               	clrf	??_frexp+1
  7041  0E29  0873               	movf	frexp@eptr,w
  7042  0E2A  0086               	movwf	6
  7043  0E2B  0187               	clrf	7
  7044  0E2C  0874               	movf	??_frexp,w
  7045  0E2D  0481               	iorwf	1,f
  7046  0E2E  3141               	addfsr 1,1
  7047  0E2F  0875               	movf	??_frexp+1,w
  7048  0E30  0481               	iorwf	1,f
  7049  0E31  0873               	movf	frexp@eptr,w
  7050  0E32  0086               	movwf	6
  7051  0E33  0187               	clrf	7
  7052  0E34  3082               	movlw	130
  7053  0E35  0781               	addwf	1,f
  7054  0E36  3141               	addfsr 1,1
  7055  0E37  30FF               	movlw	255
  7056  0E38  3D81               	addwfc	1,f
  7057  0E39  317F               	addfsr 1,-1
  7058  0E3A  0872               	movf	frexp@value+2,w
  7059  0E3B  3980               	andlw	-128
  7060  0E3C  383F               	iorlw	63
  7061  0E3D  00F2               	movwf	frexp@value+2
  7062  0E3E  13F1               	bcf	frexp@value+1,7
  7063  0E3F  0008               	return
  7064  0E40                     __end_of_frexp:	
  7065                           ;	Return value of _frexp is never used
  7066                           
  7067                           
  7068                           	psect	text56
  7069  0438                     __ptext56:	
  7070 ;; *************** function ___fttol *****************
  7071 ;; Defined at:
  7072 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\fttol.c"
  7073 ;; Parameters:    Size  Location     Type
  7074 ;;  f1              3    0[COMMON] float 
  7075 ;; Auto vars:     Size  Location     Type
  7076 ;;  lval            4    9[COMMON] unsigned long 
  7077 ;;  exp1            1   13[COMMON] unsigned char 
  7078 ;;  sign1           1    8[COMMON] unsigned char 
  7079 ;; Return value:  Size  Location     Type
  7080 ;;                  4    0[COMMON] long 
  7081 ;; Registers used:
  7082 ;;		wreg, status,2, status,0
  7083 ;; Tracked objects:
  7084 ;;		On entry : 0/0
  7085 ;;		On exit  : 0/0
  7086 ;;		Unchanged: 0/0
  7087 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7088 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7089 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7090 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7091 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7092 ;;Total ram usage:       14 bytes
  7093 ;; Hardware stack levels used:    1
  7094 ;; This function calls:
  7095 ;;		Nothing
  7096 ;; This function is called by:
  7097 ;;		_restoreTime
  7098 ;;		_trunc
  7099 ;; This function uses a non-reentrant model
  7100 ;;
  7101                           
  7102                           
  7103                           ;psect for function ___fttol
  7104  0438                     ___fttol:	
  7105                           
  7106                           ;incstack = 0
  7107                           ; Regs used in ___fttol: [wreg+status,2+status,0]
  7108  0438  0870               	movf	___fttol@f1,w
  7109  0439  00F4               	movwf	??___fttol
  7110  043A  0871               	movf	___fttol@f1+1,w
  7111  043B  00F5               	movwf	??___fttol+1
  7112  043C  0872               	movf	___fttol@f1+2,w
  7113  043D  00F6               	movwf	??___fttol+2
  7114  043E  1003               	clrc
  7115  043F  0D75               	rlf	??___fttol+1,w
  7116  0440  0D76               	rlf	??___fttol+2,w
  7117  0441  00F7               	movwf	??___fttol+3
  7118  0442  0877               	movf	??___fttol+3,w
  7119  0443  00FD               	movwf	___fttol@exp1
  7120  0444  087D               	movf	___fttol@exp1,w
  7121  0445  1D03               	btfss	3,2
  7122  0446  2C50               	goto	i1l2600
  7123  0447  3000               	movlw	0
  7124  0448  00F3               	movwf	?___fttol+3
  7125  0449  3000               	movlw	0
  7126  044A  00F2               	movwf	?___fttol+2
  7127  044B  3000               	movlw	0
  7128  044C  00F1               	movwf	?___fttol+1
  7129  044D  3000               	movlw	0
  7130  044E  00F0               	movwf	?___fttol
  7131  044F  0008               	return
  7132  0450                     i1l2600:	
  7133  0450  0870               	movf	___fttol@f1,w
  7134  0451  00F4               	movwf	??___fttol
  7135  0452  0871               	movf	___fttol@f1+1,w
  7136  0453  00F5               	movwf	??___fttol+1
  7137  0454  0872               	movf	___fttol@f1+2,w
  7138  0455  00F6               	movwf	??___fttol+2
  7139  0456  3017               	movlw	23
  7140  0457                     u204_25:	
  7141  0457  36F6               	lsrf	??___fttol+2,f
  7142  0458  0CF5               	rrf	??___fttol+1,f
  7143  0459  0CF4               	rrf	??___fttol,f
  7144  045A  0B89               	decfsz	9,f
  7145  045B  2C57               	goto	u204_25
  7146  045C  0874               	movf	??___fttol,w
  7147  045D  00F7               	movwf	??___fttol+3
  7148  045E  0877               	movf	??___fttol+3,w
  7149  045F  00F8               	movwf	___fttol@sign1
  7150  0460  17F1               	bsf	___fttol@f1+1,7
  7151  0461  30FF               	movlw	255
  7152  0462  05F0               	andwf	___fttol@f1,f
  7153  0463  30FF               	movlw	255
  7154  0464  05F1               	andwf	___fttol@f1+1,f
  7155  0465  3000               	movlw	0
  7156  0466  05F2               	andwf	___fttol@f1+2,f
  7157  0467  0870               	movf	___fttol@f1,w
  7158  0468  00F9               	movwf	___fttol@lval
  7159  0469  0871               	movf	___fttol@f1+1,w
  7160  046A  00FA               	movwf	___fttol@lval+1
  7161  046B  0872               	movf	___fttol@f1+2,w
  7162  046C  00FB               	movwf	___fttol@lval+2
  7163  046D  01FC               	clrf	___fttol@lval+3
  7164  046E  308E               	movlw	142
  7165  046F  02FD               	subwf	___fttol@exp1,f
  7166  0470  1FFD               	btfss	___fttol@exp1,7
  7167  0471  2C8E               	goto	i1l2620
  7168  0472  087D               	movf	___fttol@exp1,w
  7169  0473  3A80               	xorlw	128
  7170  0474  3E8F               	addlw	143
  7171  0475  1803               	skipnc
  7172  0476  2C80               	goto	i1l2618
  7173  0477  3000               	movlw	0
  7174  0478  00F3               	movwf	?___fttol+3
  7175  0479  3000               	movlw	0
  7176  047A  00F2               	movwf	?___fttol+2
  7177  047B  3000               	movlw	0
  7178  047C  00F1               	movwf	?___fttol+1
  7179  047D  3000               	movlw	0
  7180  047E  00F0               	movwf	?___fttol
  7181  047F  0008               	return
  7182  0480                     i1l2618:	
  7183  0480  3001               	movlw	1
  7184  0481                     u207_25:	
  7185  0481  36FC               	lsrf	___fttol@lval+3,f
  7186  0482  0CFB               	rrf	___fttol@lval+2,f
  7187  0483  0CFA               	rrf	___fttol@lval+1,f
  7188  0484  0CF9               	rrf	___fttol@lval,f
  7189  0485  0B89               	decfsz	9,f
  7190  0486  2C81               	goto	u207_25
  7191  0487  3001               	movlw	1
  7192  0488  00F4               	movwf	??___fttol
  7193  0489  0874               	movf	??___fttol,w
  7194  048A  07FD               	addwf	___fttol@exp1,f
  7195  048B  1903               	btfsc	3,2
  7196  048C  2CA7               	goto	i1l2628
  7197  048D  2C80               	goto	i1l2618
  7198  048E                     i1l2620:	
  7199  048E  3018               	movlw	24
  7200  048F  027D               	subwf	___fttol@exp1,w
  7201  0490  1C03               	skipc
  7202  0491  2CA4               	goto	i1l1036
  7203  0492  3000               	movlw	0
  7204  0493  00F3               	movwf	?___fttol+3
  7205  0494  3000               	movlw	0
  7206  0495  00F2               	movwf	?___fttol+2
  7207  0496  3000               	movlw	0
  7208  0497  00F1               	movwf	?___fttol+1
  7209  0498  3000               	movlw	0
  7210  0499  00F0               	movwf	?___fttol
  7211  049A  0008               	return
  7212  049B                     i1l2626:	
  7213  049B  3001               	movlw	1
  7214  049C                     u210_25:	
  7215  049C  35F9               	lslf	___fttol@lval,f
  7216  049D  0DFA               	rlf	___fttol@lval+1,f
  7217  049E  0DFB               	rlf	___fttol@lval+2,f
  7218  049F  0DFC               	rlf	___fttol@lval+3,f
  7219  04A0  0B89               	decfsz	9,f
  7220  04A1  2C9C               	goto	u210_25
  7221  04A2  3001               	movlw	1
  7222  04A3  02FD               	subwf	___fttol@exp1,f
  7223  04A4                     i1l1036:	
  7224  04A4  087D               	movf	___fttol@exp1,w
  7225  04A5  1D03               	btfss	3,2
  7226  04A6  2C9B               	goto	i1l2626
  7227  04A7                     i1l2628:	
  7228  04A7  0878               	movf	___fttol@sign1,w
  7229  04A8  1903               	btfsc	3,2
  7230  04A9  2CB5               	goto	i1l2632
  7231  04AA  09F9               	comf	___fttol@lval,f
  7232  04AB  09FA               	comf	___fttol@lval+1,f
  7233  04AC  09FB               	comf	___fttol@lval+2,f
  7234  04AD  09FC               	comf	___fttol@lval+3,f
  7235  04AE  0AF9               	incf	___fttol@lval,f
  7236  04AF  1903               	skipnz
  7237  04B0  0AFA               	incf	___fttol@lval+1,f
  7238  04B1  1903               	skipnz
  7239  04B2  0AFB               	incf	___fttol@lval+2,f
  7240  04B3  1903               	skipnz
  7241  04B4  0AFC               	incf	___fttol@lval+3,f
  7242  04B5                     i1l2632:	
  7243  04B5  087C               	movf	___fttol@lval+3,w
  7244  04B6  00F3               	movwf	?___fttol+3
  7245  04B7  087B               	movf	___fttol@lval+2,w
  7246  04B8  00F2               	movwf	?___fttol+2
  7247  04B9  087A               	movf	___fttol@lval+1,w
  7248  04BA  00F1               	movwf	?___fttol+1
  7249  04BB  0879               	movf	___fttol@lval,w
  7250  04BC  00F0               	movwf	?___fttol
  7251  04BD  0008               	return
  7252  04BE                     __end_of___fttol:	
  7253                           
  7254                           	psect	text57
  7255  0EEC                     __ptext57:	
  7256 ;; *************** function ___altoft *****************
  7257 ;; Defined at:
  7258 ;;		line 42 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\altoft.c"
  7259 ;; Parameters:    Size  Location     Type
  7260 ;;  c               4    0[BANK0 ] long 
  7261 ;; Auto vars:     Size  Location     Type
  7262 ;;  sign            1    7[BANK0 ] unsigned char 
  7263 ;;  exp             1    6[BANK0 ] unsigned char 
  7264 ;; Return value:  Size  Location     Type
  7265 ;;                  3    0[BANK0 ] float 
  7266 ;; Registers used:
  7267 ;;		wreg, status,2, status,0, pclath, cstack
  7268 ;; Tracked objects:
  7269 ;;		On entry : 0/0
  7270 ;;		On exit  : 0/0
  7271 ;;		Unchanged: 0/0
  7272 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7273 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7274 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7275 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7276 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7277 ;;Total ram usage:        8 bytes
  7278 ;; Hardware stack levels used:    1
  7279 ;; Hardware stack levels required when called:    1
  7280 ;; This function calls:
  7281 ;;		___ftpack
  7282 ;; This function is called by:
  7283 ;;		_trunc
  7284 ;; This function uses a non-reentrant model
  7285 ;;
  7286                           
  7287                           
  7288                           ;psect for function ___altoft
  7289  0EEC                     ___altoft:	
  7290                           
  7291                           ;incstack = 0
  7292                           ; Regs used in ___altoft: [wreg+status,2+status,0+pclath+cstack]
  7293  0EEC  0020               	movlb	0	; select bank0
  7294  0EED  01A7               	clrf	___altoft@sign
  7295  0EEE  308E               	movlw	142
  7296  0EEF  00A4               	movwf	??___altoft
  7297  0EF0  0824               	movf	??___altoft,w
  7298  0EF1  00A6               	movwf	___altoft@exp
  7299  0EF2  1FA3               	btfss	___altoft@c+3,7
  7300  0EF3  2F01               	goto	i1l2588
  7301  0EF4  09A0               	comf	___altoft@c,f
  7302  0EF5  09A1               	comf	___altoft@c+1,f
  7303  0EF6  09A2               	comf	___altoft@c+2,f
  7304  0EF7  09A3               	comf	___altoft@c+3,f
  7305  0EF8  0AA0               	incf	___altoft@c,f
  7306  0EF9  1903               	skipnz
  7307  0EFA  0AA1               	incf	___altoft@c+1,f
  7308  0EFB  1903               	skipnz
  7309  0EFC  0AA2               	incf	___altoft@c+2,f
  7310  0EFD  1903               	skipnz
  7311  0EFE  0AA3               	incf	___altoft@c+3,f
  7312  0EFF  01A7               	clrf	___altoft@sign
  7313  0F00  0AA7               	incf	___altoft@sign,f
  7314  0F01                     i1l2588:	
  7315  0F01  30FF               	movlw	255
  7316  0F02  0523               	andwf	___altoft@c+3,w
  7317  0F03  1903               	btfsc	3,2
  7318  0F04  2F11               	goto	i1l2590
  7319  0F05  3001               	movlw	1
  7320  0F06                     u201_25:	
  7321  0F06  36A3               	lsrf	___altoft@c+3,f
  7322  0F07  0CA2               	rrf	___altoft@c+2,f
  7323  0F08  0CA1               	rrf	___altoft@c+1,f
  7324  0F09  0CA0               	rrf	___altoft@c,f
  7325  0F0A  0B89               	decfsz	9,f
  7326  0F0B  2F06               	goto	u201_25
  7327  0F0C  3001               	movlw	1
  7328  0F0D  00A4               	movwf	??___altoft
  7329  0F0E  0824               	movf	??___altoft,w
  7330  0F0F  07A6               	addwf	___altoft@exp,f
  7331  0F10  2F01               	goto	i1l2588
  7332  0F11                     i1l2590:	
  7333  0F11  0820               	movf	___altoft@c,w
  7334  0F12  00F0               	movwf	___ftpack@arg
  7335  0F13  0821               	movf	___altoft@c+1,w
  7336  0F14  00F1               	movwf	___ftpack@arg+1
  7337  0F15  0822               	movf	___altoft@c+2,w
  7338  0F16  00F2               	movwf	___ftpack@arg+2
  7339  0F17  0826               	movf	___altoft@exp,w
  7340  0F18  00A4               	movwf	??___altoft
  7341  0F19  0824               	movf	??___altoft,w
  7342  0F1A  00F3               	movwf	___ftpack@exp
  7343  0F1B  0827               	movf	___altoft@sign,w
  7344  0F1C  00A5               	movwf	??___altoft+1
  7345  0F1D  0825               	movf	??___altoft+1,w
  7346  0F1E  00F4               	movwf	___ftpack@sign
  7347  0F1F  3187  271B         	fcall	___ftpack
  7348  0F21  0870               	movf	?___ftpack,w
  7349  0F22  0020               	movlb	0	; select bank0
  7350  0F23  00A0               	movwf	?___altoft
  7351  0F24  0871               	movf	?___ftpack+1,w
  7352  0F25  00A1               	movwf	?___altoft+1
  7353  0F26  0872               	movf	?___ftpack+2,w
  7354  0F27  00A2               	movwf	?___altoft+2
  7355  0F28  0008               	return
  7356  0F29                     __end_of___altoft:	
  7357                           
  7358                           	psect	text58
  7359  0B31                     __ptext58:	
  7360 ;; *************** function ___ftneg *****************
  7361 ;; Defined at:
  7362 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftneg.c"
  7363 ;; Parameters:    Size  Location     Type
  7364 ;;  f1              3   17[BANK0 ] float 
  7365 ;; Auto vars:     Size  Location     Type
  7366 ;;		None
  7367 ;; Return value:  Size  Location     Type
  7368 ;;                  3   17[BANK0 ] float 
  7369 ;; Registers used:
  7370 ;;		wreg
  7371 ;; Tracked objects:
  7372 ;;		On entry : 0/0
  7373 ;;		On exit  : 0/0
  7374 ;;		Unchanged: 0/0
  7375 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7376 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7377 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7378 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7379 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7380 ;;Total ram usage:        3 bytes
  7381 ;; Hardware stack levels used:    1
  7382 ;; This function calls:
  7383 ;;		Nothing
  7384 ;; This function is called by:
  7385 ;;		_round
  7386 ;; This function uses a non-reentrant model
  7387 ;;
  7388                           
  7389                           
  7390                           ;psect for function ___ftneg
  7391  0B31                     ___ftneg:	
  7392                           
  7393                           ;incstack = 0
  7394                           ; Regs used in ___ftneg: [wreg]
  7395  0B31  0020               	movlb	0	; select bank0
  7396  0B32  0833               	movf	___ftneg@f1+2,w
  7397  0B33  0432               	iorwf	___ftneg@f1+1,w
  7398  0B34  0431               	iorwf	___ftneg@f1,w
  7399  0B35  1903               	skipnz
  7400  0B36  0008               	return
  7401  0B37  3080               	movlw	128
  7402  0B38  06B3               	xorwf	___ftneg@f1+2,f
  7403  0B39  0008               	return
  7404  0B3A                     __end_of___ftneg:	
  7405                           
  7406                           	psect	text59
  7407  014B                     __ptext59:	
  7408 ;; *************** function ___ftadd *****************
  7409 ;; Defined at:
  7410 ;;		line 86 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftadd.c"
  7411 ;; Parameters:    Size  Location     Type
  7412 ;;  f1              3   20[BANK0 ] float 
  7413 ;;  f2              3   23[BANK0 ] float 
  7414 ;; Auto vars:     Size  Location     Type
  7415 ;;  exp1            1   32[BANK0 ] unsigned char 
  7416 ;;  exp2            1   31[BANK0 ] unsigned char 
  7417 ;;  sign            1   30[BANK0 ] unsigned char 
  7418 ;; Return value:  Size  Location     Type
  7419 ;;                  3   20[BANK0 ] float 
  7420 ;; Registers used:
  7421 ;;		wreg, status,2, status,0, pclath, cstack
  7422 ;; Tracked objects:
  7423 ;;		On entry : 0/0
  7424 ;;		On exit  : 0/0
  7425 ;;		Unchanged: 0/0
  7426 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7427 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7428 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7429 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7430 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7431 ;;Total ram usage:       13 bytes
  7432 ;; Hardware stack levels used:    1
  7433 ;; Hardware stack levels required when called:    1
  7434 ;; This function calls:
  7435 ;;		___ftpack
  7436 ;; This function is called by:
  7437 ;;		_round
  7438 ;; This function uses a non-reentrant model
  7439 ;;
  7440                           
  7441                           
  7442                           ;psect for function ___ftadd
  7443  014B                     ___ftadd:	
  7444                           
  7445                           ;incstack = 0
  7446                           ; Regs used in ___ftadd: [wreg+status,2+status,0+pclath+cstack]
  7447  014B  0020               	movlb	0	; select bank0
  7448  014C  0834               	movf	___ftadd@f1,w
  7449  014D  00BA               	movwf	??___ftadd
  7450  014E  0835               	movf	___ftadd@f1+1,w
  7451  014F  00BB               	movwf	??___ftadd+1
  7452  0150  0836               	movf	___ftadd@f1+2,w
  7453  0151  00BC               	movwf	??___ftadd+2
  7454  0152  1003               	clrc
  7455  0153  0D3B               	rlf	??___ftadd+1,w
  7456  0154  0D3C               	rlf	??___ftadd+2,w
  7457  0155  00BD               	movwf	??___ftadd+3
  7458  0156  083D               	movf	??___ftadd+3,w
  7459  0157  00C0               	movwf	___ftadd@exp1
  7460  0158  0837               	movf	___ftadd@f2,w
  7461  0159  00BA               	movwf	??___ftadd
  7462  015A  0838               	movf	___ftadd@f2+1,w
  7463  015B  00BB               	movwf	??___ftadd+1
  7464  015C  0839               	movf	___ftadd@f2+2,w
  7465  015D  00BC               	movwf	??___ftadd+2
  7466  015E  1003               	clrc
  7467  015F  0D3B               	rlf	??___ftadd+1,w
  7468  0160  0D3C               	rlf	??___ftadd+2,w
  7469  0161  00BD               	movwf	??___ftadd+3
  7470  0162  083D               	movf	??___ftadd+3,w
  7471  0163  00BF               	movwf	___ftadd@exp2
  7472  0164  0840               	movf	___ftadd@exp1,w
  7473  0165  1903               	btfsc	3,2
  7474  0166  2973               	goto	i1l2658
  7475  0167  083F               	movf	___ftadd@exp2,w
  7476  0168  0240               	subwf	___ftadd@exp1,w
  7477  0169  1803               	skipnc
  7478  016A  297A               	goto	i1l2662
  7479  016B  0340               	decf	___ftadd@exp1,w
  7480  016C  3AFF               	xorlw	255
  7481  016D  073F               	addwf	___ftadd@exp2,w
  7482  016E  00BA               	movwf	??___ftadd
  7483  016F  3019               	movlw	25
  7484  0170  023A               	subwf	??___ftadd,w
  7485  0171  1C03               	skipc
  7486  0172  297A               	goto	i1l2662
  7487  0173                     i1l2658:	
  7488  0173  0837               	movf	___ftadd@f2,w
  7489  0174  00B4               	movwf	?___ftadd
  7490  0175  0838               	movf	___ftadd@f2+1,w
  7491  0176  00B5               	movwf	?___ftadd+1
  7492  0177  0839               	movf	___ftadd@f2+2,w
  7493  0178  00B6               	movwf	?___ftadd+2
  7494  0179  0008               	return
  7495  017A                     i1l2662:	
  7496  017A  083F               	movf	___ftadd@exp2,w
  7497  017B  1903               	btfsc	3,2
  7498  017C  0008               	return
  7499  017D  0840               	movf	___ftadd@exp1,w
  7500  017E  023F               	subwf	___ftadd@exp2,w
  7501  017F  1803               	skipnc
  7502  0180  2989               	goto	i1l2668
  7503  0181  033F               	decf	___ftadd@exp2,w
  7504  0182  3AFF               	xorlw	255
  7505  0183  0740               	addwf	___ftadd@exp1,w
  7506  0184  00BA               	movwf	??___ftadd
  7507  0185  3019               	movlw	25
  7508  0186  023A               	subwf	??___ftadd,w
  7509  0187  1803               	btfsc	3,0
  7510  0188  0008               	return
  7511  0189                     i1l2668:	
  7512  0189  3006               	movlw	6
  7513  018A  00BA               	movwf	??___ftadd
  7514  018B  083A               	movf	??___ftadd,w
  7515  018C  00BE               	movwf	___ftadd@sign
  7516  018D  1BB6               	btfsc	___ftadd@f1+2,7
  7517  018E  17BE               	bsf	___ftadd@sign,7
  7518  018F  1BB9               	btfsc	___ftadd@f2+2,7
  7519  0190  173E               	bsf	___ftadd@sign,6
  7520  0191  17B5               	bsf	___ftadd@f1+1,7
  7521  0192  30FF               	movlw	255
  7522  0193  05B4               	andwf	___ftadd@f1,f
  7523  0194  30FF               	movlw	255
  7524  0195  05B5               	andwf	___ftadd@f1+1,f
  7525  0196  3000               	movlw	0
  7526  0197  05B6               	andwf	___ftadd@f1+2,f
  7527  0198  17B8               	bsf	___ftadd@f2+1,7
  7528  0199  30FF               	movlw	255
  7529  019A  05B7               	andwf	___ftadd@f2,f
  7530  019B  30FF               	movlw	255
  7531  019C  05B8               	andwf	___ftadd@f2+1,f
  7532  019D  3000               	movlw	0
  7533  019E  05B9               	andwf	___ftadd@f2+2,f
  7534  019F  083F               	movf	___ftadd@exp2,w
  7535  01A0  0240               	subwf	___ftadd@exp1,w
  7536  01A1  1803               	skipnc
  7537  01A2  29C5               	goto	i1l2690
  7538  01A3                     i1l2680:	
  7539  01A3  3001               	movlw	1
  7540  01A4                     u223_25:	
  7541  01A4  35B7               	lslf	___ftadd@f2,f
  7542  01A5  0DB8               	rlf	___ftadd@f2+1,f
  7543  01A6  0DB9               	rlf	___ftadd@f2+2,f
  7544  01A7  0B89               	decfsz	9,f
  7545  01A8  29A4               	goto	u223_25
  7546  01A9  3001               	movlw	1
  7547  01AA  02BF               	subwf	___ftadd@exp2,f
  7548  01AB  083F               	movf	___ftadd@exp2,w
  7549  01AC  0640               	xorwf	___ftadd@exp1,w
  7550  01AD  1903               	skipnz
  7551  01AE  29C0               	goto	i1l2688
  7552  01AF  3001               	movlw	1
  7553  01B0  02BE               	subwf	___ftadd@sign,f
  7554  01B1  083E               	movf	___ftadd@sign,w
  7555  01B2  3907               	andlw	7
  7556  01B3  1903               	btfsc	3,2
  7557  01B4  29C0               	goto	i1l2688
  7558  01B5  29A3               	goto	i1l2680
  7559  01B6                     i1l2686:	
  7560  01B6  3001               	movlw	1
  7561  01B7                     u226_25:	
  7562  01B7  36B6               	lsrf	___ftadd@f1+2,f
  7563  01B8  0CB5               	rrf	___ftadd@f1+1,f
  7564  01B9  0CB4               	rrf	___ftadd@f1,f
  7565  01BA  0B89               	decfsz	9,f
  7566  01BB  29B7               	goto	u226_25
  7567  01BC  3001               	movlw	1
  7568  01BD  00BA               	movwf	??___ftadd
  7569  01BE  083A               	movf	??___ftadd,w
  7570  01BF  07C0               	addwf	___ftadd@exp1,f
  7571  01C0                     i1l2688:	
  7572  01C0  0840               	movf	___ftadd@exp1,w
  7573  01C1  063F               	xorwf	___ftadd@exp2,w
  7574  01C2  1903               	btfsc	3,2
  7575  01C3  29EA               	goto	i1l976
  7576  01C4  29B6               	goto	i1l2686
  7577  01C5                     i1l2690:	
  7578  01C5  0840               	movf	___ftadd@exp1,w
  7579  01C6  023F               	subwf	___ftadd@exp2,w
  7580  01C7  1803               	skipnc
  7581  01C8  29EA               	goto	i1l976
  7582  01C9                     i1l2692:	
  7583  01C9  3001               	movlw	1
  7584  01CA                     u229_25:	
  7585  01CA  35B4               	lslf	___ftadd@f1,f
  7586  01CB  0DB5               	rlf	___ftadd@f1+1,f
  7587  01CC  0DB6               	rlf	___ftadd@f1+2,f
  7588  01CD  0B89               	decfsz	9,f
  7589  01CE  29CA               	goto	u229_25
  7590  01CF  3001               	movlw	1
  7591  01D0  02C0               	subwf	___ftadd@exp1,f
  7592  01D1  083F               	movf	___ftadd@exp2,w
  7593  01D2  0640               	xorwf	___ftadd@exp1,w
  7594  01D3  1903               	skipnz
  7595  01D4  29E6               	goto	i1l2700
  7596  01D5  3001               	movlw	1
  7597  01D6  02BE               	subwf	___ftadd@sign,f
  7598  01D7  083E               	movf	___ftadd@sign,w
  7599  01D8  3907               	andlw	7
  7600  01D9  1903               	btfsc	3,2
  7601  01DA  29E6               	goto	i1l2700
  7602  01DB  29C9               	goto	i1l2692
  7603  01DC                     i1l2698:	
  7604  01DC  3001               	movlw	1
  7605  01DD                     u232_25:	
  7606  01DD  36B9               	lsrf	___ftadd@f2+2,f
  7607  01DE  0CB8               	rrf	___ftadd@f2+1,f
  7608  01DF  0CB7               	rrf	___ftadd@f2,f
  7609  01E0  0B89               	decfsz	9,f
  7610  01E1  29DD               	goto	u232_25
  7611  01E2  3001               	movlw	1
  7612  01E3  00BA               	movwf	??___ftadd
  7613  01E4  083A               	movf	??___ftadd,w
  7614  01E5  07BF               	addwf	___ftadd@exp2,f
  7615  01E6                     i1l2700:	
  7616  01E6  0840               	movf	___ftadd@exp1,w
  7617  01E7  063F               	xorwf	___ftadd@exp2,w
  7618  01E8  1D03               	skipz
  7619  01E9  29DC               	goto	i1l2698
  7620  01EA                     i1l976:	
  7621  01EA  1FBE               	btfss	___ftadd@sign,7
  7622  01EB  29FC               	goto	i1l2704
  7623  01EC  30FF               	movlw	255
  7624  01ED  06B4               	xorwf	___ftadd@f1,f
  7625  01EE  30FF               	movlw	255
  7626  01EF  06B5               	xorwf	___ftadd@f1+1,f
  7627  01F0  30FF               	movlw	255
  7628  01F1  06B6               	xorwf	___ftadd@f1+2,f
  7629  01F2  3001               	movlw	1
  7630  01F3  07B4               	addwf	___ftadd@f1,f
  7631  01F4  3000               	movlw	0
  7632  01F5  1803               	skipnc
  7633  01F6  3001               	movlw	1
  7634  01F7  07B5               	addwf	___ftadd@f1+1,f
  7635  01F8  3000               	movlw	0
  7636  01F9  1803               	skipnc
  7637  01FA  3001               	movlw	1
  7638  01FB  07B6               	addwf	___ftadd@f1+2,f
  7639  01FC                     i1l2704:	
  7640  01FC  1F3E               	btfss	___ftadd@sign,6
  7641  01FD  2A0E               	goto	i1l2708
  7642  01FE  30FF               	movlw	255
  7643  01FF  06B7               	xorwf	___ftadd@f2,f
  7644  0200  30FF               	movlw	255
  7645  0201  06B8               	xorwf	___ftadd@f2+1,f
  7646  0202  30FF               	movlw	255
  7647  0203  06B9               	xorwf	___ftadd@f2+2,f
  7648  0204  3001               	movlw	1
  7649  0205  07B7               	addwf	___ftadd@f2,f
  7650  0206  3000               	movlw	0
  7651  0207  1803               	skipnc
  7652  0208  3001               	movlw	1
  7653  0209  07B8               	addwf	___ftadd@f2+1,f
  7654  020A  3000               	movlw	0
  7655  020B  1803               	skipnc
  7656  020C  3001               	movlw	1
  7657  020D  07B9               	addwf	___ftadd@f2+2,f
  7658  020E                     i1l2708:	
  7659  020E  01BE               	clrf	___ftadd@sign
  7660  020F  0834               	movf	___ftadd@f1,w
  7661  0210  07B7               	addwf	___ftadd@f2,f
  7662  0211  0835               	movf	___ftadd@f1+1,w
  7663  0212  3DB8               	addwfc	___ftadd@f2+1,f
  7664  0213  0836               	movf	___ftadd@f1+2,w
  7665  0214  3DB9               	addwfc	___ftadd@f2+2,f
  7666  0215  1FB9               	btfss	___ftadd@f2+2,7
  7667  0216  2A29               	goto	i1l2718
  7668  0217  30FF               	movlw	255
  7669  0218  06B7               	xorwf	___ftadd@f2,f
  7670  0219  30FF               	movlw	255
  7671  021A  06B8               	xorwf	___ftadd@f2+1,f
  7672  021B  30FF               	movlw	255
  7673  021C  06B9               	xorwf	___ftadd@f2+2,f
  7674  021D  3001               	movlw	1
  7675  021E  07B7               	addwf	___ftadd@f2,f
  7676  021F  3000               	movlw	0
  7677  0220  1803               	skipnc
  7678  0221  3001               	movlw	1
  7679  0222  07B8               	addwf	___ftadd@f2+1,f
  7680  0223  3000               	movlw	0
  7681  0224  1803               	skipnc
  7682  0225  3001               	movlw	1
  7683  0226  07B9               	addwf	___ftadd@f2+2,f
  7684  0227  01BE               	clrf	___ftadd@sign
  7685  0228  0ABE               	incf	___ftadd@sign,f
  7686  0229                     i1l2718:	
  7687  0229  0837               	movf	___ftadd@f2,w
  7688  022A  00F0               	movwf	___ftpack@arg
  7689  022B  0838               	movf	___ftadd@f2+1,w
  7690  022C  00F1               	movwf	___ftpack@arg+1
  7691  022D  0839               	movf	___ftadd@f2+2,w
  7692  022E  00F2               	movwf	___ftpack@arg+2
  7693  022F  0840               	movf	___ftadd@exp1,w
  7694  0230  00BA               	movwf	??___ftadd
  7695  0231  083A               	movf	??___ftadd,w
  7696  0232  00F3               	movwf	___ftpack@exp
  7697  0233  083E               	movf	___ftadd@sign,w
  7698  0234  00BB               	movwf	??___ftadd+1
  7699  0235  083B               	movf	??___ftadd+1,w
  7700  0236  00F4               	movwf	___ftpack@sign
  7701  0237  3187  271B         	fcall	___ftpack
  7702  0239  0870               	movf	?___ftpack,w
  7703  023A  0020               	movlb	0	; select bank0
  7704  023B  00B4               	movwf	?___ftadd
  7705  023C  0871               	movf	?___ftpack+1,w
  7706  023D  00B5               	movwf	?___ftadd+1
  7707  023E  0872               	movf	?___ftpack+2,w
  7708  023F  00B6               	movwf	?___ftadd+2
  7709  0240  0008               	return
  7710  0241                     __end_of___ftadd:	
  7711                           
  7712                           	psect	text60
  7713  0C06                     __ptext60:	
  7714 ;; *************** function ___lttoft *****************
  7715 ;; Defined at:
  7716 ;;		line 30 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lttoft.c"
  7717 ;; Parameters:    Size  Location     Type
  7718 ;;  c               3    8[COMMON] unsigned um
  7719 ;; Auto vars:     Size  Location     Type
  7720 ;;		None
  7721 ;; Return value:  Size  Location     Type
  7722 ;;                  3    8[COMMON] float 
  7723 ;; Registers used:
  7724 ;;		wreg, status,2, status,0, pclath, cstack
  7725 ;; Tracked objects:
  7726 ;;		On entry : 0/0
  7727 ;;		On exit  : 0/0
  7728 ;;		Unchanged: 0/0
  7729 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7730 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7731 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7732 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7733 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7734 ;;Total ram usage:        4 bytes
  7735 ;; Hardware stack levels used:    1
  7736 ;; Hardware stack levels required when called:    1
  7737 ;; This function calls:
  7738 ;;		___ftpack
  7739 ;; This function is called by:
  7740 ;;		_restoreTime
  7741 ;; This function uses a non-reentrant model
  7742 ;;
  7743                           
  7744                           
  7745                           ;psect for function ___lttoft
  7746  0C06                     ___lttoft:	
  7747                           
  7748                           ;incstack = 0
  7749                           ; Regs used in ___lttoft: [wreg+status,2+status,0+pclath+cstack]
  7750  0C06  0878               	movf	___lttoft@c,w
  7751  0C07  00F0               	movwf	___ftpack@arg
  7752  0C08  0879               	movf	___lttoft@c+1,w
  7753  0C09  00F1               	movwf	___ftpack@arg+1
  7754  0C0A  087A               	movf	___lttoft@c+2,w
  7755  0C0B  00F2               	movwf	___ftpack@arg+2
  7756  0C0C  308E               	movlw	142
  7757  0C0D  00FB               	movwf	??___lttoft
  7758  0C0E  087B               	movf	??___lttoft,w
  7759  0C0F  00F3               	movwf	___ftpack@exp
  7760  0C10  01F4               	clrf	___ftpack@sign
  7761  0C11  3187  271B         	fcall	___ftpack
  7762  0C13  0870               	movf	?___ftpack,w
  7763  0C14  00F8               	movwf	?___lttoft
  7764  0C15  0871               	movf	?___ftpack+1,w
  7765  0C16  00F9               	movwf	?___lttoft+1
  7766  0C17  0872               	movf	?___ftpack+2,w
  7767  0C18  00FA               	movwf	?___lttoft+2
  7768  0C19  0008               	return
  7769  0C1A                     __end_of___lttoft:	
  7770                           
  7771                           	psect	text61
  7772  0E40                     __ptext61:	
  7773 ;; *************** function ___ltmod *****************
  7774 ;; Defined at:
  7775 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ltmod.c"
  7776 ;; Parameters:    Size  Location     Type
  7777 ;;  divisor         3    0[COMMON] unsigned um
  7778 ;;  dividend        3    3[COMMON] unsigned um
  7779 ;; Auto vars:     Size  Location     Type
  7780 ;;  counter         1    7[COMMON] unsigned char 
  7781 ;; Return value:  Size  Location     Type
  7782 ;;                  3    0[COMMON] unsigned um
  7783 ;; Registers used:
  7784 ;;		wreg, status,2, status,0
  7785 ;; Tracked objects:
  7786 ;;		On entry : 0/0
  7787 ;;		On exit  : 0/0
  7788 ;;		Unchanged: 0/0
  7789 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7790 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7791 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7792 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7793 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7794 ;;Total ram usage:        8 bytes
  7795 ;; Hardware stack levels used:    1
  7796 ;; This function calls:
  7797 ;;		Nothing
  7798 ;; This function is called by:
  7799 ;;		_restoreTime
  7800 ;; This function uses a non-reentrant model
  7801 ;;
  7802                           
  7803                           
  7804                           ;psect for function ___ltmod
  7805  0E40                     ___ltmod:	
  7806                           
  7807                           ;incstack = 0
  7808                           ; Regs used in ___ltmod: [wreg+status,2+status,0]
  7809  0E40  0872               	movf	___ltmod@divisor+2,w
  7810  0E41  0471               	iorwf	___ltmod@divisor+1,w
  7811  0E42  0470               	iorwf	___ltmod@divisor,w
  7812  0E43  1903               	skipnz
  7813  0E44  2E70               	goto	i1l2918
  7814  0E45  01F7               	clrf	___ltmod@counter
  7815  0E46  0AF7               	incf	___ltmod@counter,f
  7816  0E47                     i1l2908:	
  7817  0E47  1BF2               	btfsc	___ltmod@divisor+2,7
  7818  0E48  2E54               	goto	i1l2910
  7819  0E49  3001               	movlw	1
  7820  0E4A                     u279_25:	
  7821  0E4A  35F0               	lslf	___ltmod@divisor,f
  7822  0E4B  0DF1               	rlf	___ltmod@divisor+1,f
  7823  0E4C  0DF2               	rlf	___ltmod@divisor+2,f
  7824  0E4D  0B89               	decfsz	9,f
  7825  0E4E  2E4A               	goto	u279_25
  7826  0E4F  3001               	movlw	1
  7827  0E50  00F6               	movwf	??___ltmod
  7828  0E51  0876               	movf	??___ltmod,w
  7829  0E52  07F7               	addwf	___ltmod@counter,f
  7830  0E53  2E47               	goto	i1l2908
  7831  0E54                     i1l2910:	
  7832  0E54  0872               	movf	___ltmod@divisor+2,w
  7833  0E55  0275               	subwf	___ltmod@dividend+2,w
  7834  0E56  1D03               	skipz
  7835  0E57  2E5E               	goto	u281_25
  7836  0E58  0871               	movf	___ltmod@divisor+1,w
  7837  0E59  0274               	subwf	___ltmod@dividend+1,w
  7838  0E5A  1D03               	skipz
  7839  0E5B  2E5E               	goto	u281_25
  7840  0E5C  0870               	movf	___ltmod@divisor,w
  7841  0E5D  0273               	subwf	___ltmod@dividend,w
  7842  0E5E                     u281_25:	
  7843  0E5E  1C03               	skipc
  7844  0E5F  2E66               	goto	i1l2914
  7845  0E60  0870               	movf	___ltmod@divisor,w
  7846  0E61  02F3               	subwf	___ltmod@dividend,f
  7847  0E62  0871               	movf	___ltmod@divisor+1,w
  7848  0E63  3BF4               	subwfb	___ltmod@dividend+1,f
  7849  0E64  0872               	movf	___ltmod@divisor+2,w
  7850  0E65  3BF5               	subwfb	___ltmod@dividend+2,f
  7851  0E66                     i1l2914:	
  7852  0E66  3001               	movlw	1
  7853  0E67                     u282_25:	
  7854  0E67  36F2               	lsrf	___ltmod@divisor+2,f
  7855  0E68  0CF1               	rrf	___ltmod@divisor+1,f
  7856  0E69  0CF0               	rrf	___ltmod@divisor,f
  7857  0E6A  0B89               	decfsz	9,f
  7858  0E6B  2E67               	goto	u282_25
  7859  0E6C  3001               	movlw	1
  7860  0E6D  02F7               	subwf	___ltmod@counter,f
  7861  0E6E  1D03               	btfss	3,2
  7862  0E6F  2E54               	goto	i1l2910
  7863  0E70                     i1l2918:	
  7864  0E70  0873               	movf	___ltmod@dividend,w
  7865  0E71  00F0               	movwf	?___ltmod
  7866  0E72  0874               	movf	___ltmod@dividend+1,w
  7867  0E73  00F1               	movwf	?___ltmod+1
  7868  0E74  0875               	movf	___ltmod@dividend+2,w
  7869  0E75  00F2               	movwf	?___ltmod+2
  7870  0E76  0008               	return
  7871  0E77                     __end_of___ltmod:	
  7872                           
  7873                           	psect	text62
  7874  0F6A                     __ptext62:	
  7875 ;; *************** function ___ltdiv *****************
  7876 ;; Defined at:
  7877 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ltdiv.c"
  7878 ;; Parameters:    Size  Location     Type
  7879 ;;  divisor         3    8[COMMON] unsigned um
  7880 ;;  dividend        3   11[COMMON] unsigned um
  7881 ;; Auto vars:     Size  Location     Type
  7882 ;;  quotient        3    1[BANK0 ] unsigned um
  7883 ;;  counter         1    4[BANK0 ] unsigned char 
  7884 ;; Return value:  Size  Location     Type
  7885 ;;                  3    8[COMMON] unsigned um
  7886 ;; Registers used:
  7887 ;;		wreg, status,2, status,0
  7888 ;; Tracked objects:
  7889 ;;		On entry : 0/0
  7890 ;;		On exit  : 0/0
  7891 ;;		Unchanged: 0/0
  7892 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7893 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7894 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7895 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7896 ;;      Totals:         6       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7897 ;;Total ram usage:       11 bytes
  7898 ;; Hardware stack levels used:    1
  7899 ;; This function calls:
  7900 ;;		Nothing
  7901 ;; This function is called by:
  7902 ;;		_restoreTime
  7903 ;; This function uses a non-reentrant model
  7904 ;;
  7905                           
  7906                           
  7907                           ;psect for function ___ltdiv
  7908  0F6A                     ___ltdiv:	
  7909                           
  7910                           ;incstack = 0
  7911                           ; Regs used in ___ltdiv: [wreg+status,2+status,0]
  7912  0F6A  3000               	movlw	0
  7913  0F6B  0020               	movlb	0	; select bank0
  7914  0F6C  00A1               	movwf	___ltdiv@quotient
  7915  0F6D  3000               	movlw	0
  7916  0F6E  00A2               	movwf	___ltdiv@quotient+1
  7917  0F6F  3000               	movlw	0
  7918  0F70  00A3               	movwf	___ltdiv@quotient+2
  7919  0F71  087A               	movf	___ltdiv@divisor+2,w
  7920  0F72  0479               	iorwf	___ltdiv@divisor+1,w
  7921  0F73  0478               	iorwf	___ltdiv@divisor,w
  7922  0F74  1903               	skipnz
  7923  0F75  2FA8               	goto	i1l2898
  7924  0F76  01A4               	clrf	___ltdiv@counter
  7925  0F77  0AA4               	incf	___ltdiv@counter,f
  7926  0F78                     i1l2884:	
  7927  0F78  1BFA               	btfsc	___ltdiv@divisor+2,7
  7928  0F79  2F85               	goto	i1l2886
  7929  0F7A  3001               	movlw	1
  7930  0F7B                     u272_25:	
  7931  0F7B  35F8               	lslf	___ltdiv@divisor,f
  7932  0F7C  0DF9               	rlf	___ltdiv@divisor+1,f
  7933  0F7D  0DFA               	rlf	___ltdiv@divisor+2,f
  7934  0F7E  0B89               	decfsz	9,f
  7935  0F7F  2F7B               	goto	u272_25
  7936  0F80  3001               	movlw	1
  7937  0F81  00A0               	movwf	??___ltdiv
  7938  0F82  0820               	movf	??___ltdiv,w
  7939  0F83  07A4               	addwf	___ltdiv@counter,f
  7940  0F84  2F78               	goto	i1l2884
  7941  0F85                     i1l2886:	
  7942  0F85  3001               	movlw	1
  7943  0F86                     u274_25:	
  7944  0F86  35A1               	lslf	___ltdiv@quotient,f
  7945  0F87  0DA2               	rlf	___ltdiv@quotient+1,f
  7946  0F88  0DA3               	rlf	___ltdiv@quotient+2,f
  7947  0F89  0B89               	decfsz	9,f
  7948  0F8A  2F86               	goto	u274_25
  7949  0F8B  087A               	movf	___ltdiv@divisor+2,w
  7950  0F8C  027D               	subwf	___ltdiv@dividend+2,w
  7951  0F8D  1D03               	skipz
  7952  0F8E  2F95               	goto	u275_25
  7953  0F8F  0879               	movf	___ltdiv@divisor+1,w
  7954  0F90  027C               	subwf	___ltdiv@dividend+1,w
  7955  0F91  1D03               	skipz
  7956  0F92  2F95               	goto	u275_25
  7957  0F93  0878               	movf	___ltdiv@divisor,w
  7958  0F94  027B               	subwf	___ltdiv@dividend,w
  7959  0F95                     u275_25:	
  7960  0F95  1C03               	skipc
  7961  0F96  2F9E               	goto	i1l2894
  7962  0F97  0878               	movf	___ltdiv@divisor,w
  7963  0F98  02FB               	subwf	___ltdiv@dividend,f
  7964  0F99  0879               	movf	___ltdiv@divisor+1,w
  7965  0F9A  3BFC               	subwfb	___ltdiv@dividend+1,f
  7966  0F9B  087A               	movf	___ltdiv@divisor+2,w
  7967  0F9C  3BFD               	subwfb	___ltdiv@dividend+2,f
  7968  0F9D  1421               	bsf	___ltdiv@quotient,0
  7969  0F9E                     i1l2894:	
  7970  0F9E  3001               	movlw	1
  7971  0F9F                     u276_25:	
  7972  0F9F  36FA               	lsrf	___ltdiv@divisor+2,f
  7973  0FA0  0CF9               	rrf	___ltdiv@divisor+1,f
  7974  0FA1  0CF8               	rrf	___ltdiv@divisor,f
  7975  0FA2  0B89               	decfsz	9,f
  7976  0FA3  2F9F               	goto	u276_25
  7977  0FA4  3001               	movlw	1
  7978  0FA5  02A4               	subwf	___ltdiv@counter,f
  7979  0FA6  1D03               	btfss	3,2
  7980  0FA7  2F85               	goto	i1l2886
  7981  0FA8                     i1l2898:	
  7982  0FA8  0821               	movf	___ltdiv@quotient,w
  7983  0FA9  00F8               	movwf	?___ltdiv
  7984  0FAA  0822               	movf	___ltdiv@quotient+1,w
  7985  0FAB  00F9               	movwf	?___ltdiv+1
  7986  0FAC  0823               	movf	___ltdiv@quotient+2,w
  7987  0FAD  00FA               	movwf	?___ltdiv+2
  7988  0FAE  0008               	return
  7989  0FAF                     __end_of___ltdiv:	
  7990                           
  7991                           	psect	text63
  7992  0241                     __ptext63:	
  7993 ;; *************** function ___ftmul *****************
  7994 ;; Defined at:
  7995 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftmul.c"
  7996 ;; Parameters:    Size  Location     Type
  7997 ;;  f1              3    0[BANK0 ] float 
  7998 ;;  f2              3    3[BANK0 ] float 
  7999 ;; Auto vars:     Size  Location     Type
  8000 ;;  f3_as_produc    3   11[BANK0 ] unsigned um
  8001 ;;  sign            1   15[BANK0 ] unsigned char 
  8002 ;;  cntr            1   14[BANK0 ] unsigned char 
  8003 ;;  exp             1   10[BANK0 ] unsigned char 
  8004 ;; Return value:  Size  Location     Type
  8005 ;;                  3    0[BANK0 ] float 
  8006 ;; Registers used:
  8007 ;;		wreg, status,2, status,0, pclath, cstack
  8008 ;; Tracked objects:
  8009 ;;		On entry : 0/0
  8010 ;;		On exit  : 0/0
  8011 ;;		Unchanged: 0/0
  8012 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8013 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8014 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8015 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8016 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8017 ;;Total ram usage:       16 bytes
  8018 ;; Hardware stack levels used:    1
  8019 ;; Hardware stack levels required when called:    1
  8020 ;; This function calls:
  8021 ;;		___ftpack
  8022 ;; This function is called by:
  8023 ;;		_restoreTime
  8024 ;; This function uses a non-reentrant model
  8025 ;;
  8026                           
  8027                           
  8028                           ;psect for function ___ftmul
  8029  0241                     ___ftmul:	
  8030                           
  8031                           ;incstack = 0
  8032                           ; Regs used in ___ftmul: [wreg+status,2+status,0+pclath+cstack]
  8033  0241  0020               	movlb	0	; select bank0
  8034  0242  0820               	movf	___ftmul@f1,w
  8035  0243  00A6               	movwf	??___ftmul
  8036  0244  0821               	movf	___ftmul@f1+1,w
  8037  0245  00A7               	movwf	??___ftmul+1
  8038  0246  0822               	movf	___ftmul@f1+2,w
  8039  0247  00A8               	movwf	??___ftmul+2
  8040  0248  1003               	clrc
  8041  0249  0D27               	rlf	??___ftmul+1,w
  8042  024A  0D28               	rlf	??___ftmul+2,w
  8043  024B  00A9               	movwf	??___ftmul+3
  8044  024C  0829               	movf	??___ftmul+3,w
  8045  024D  00AA               	movwf	___ftmul@exp
  8046  024E  082A               	movf	___ftmul@exp,w
  8047  024F  1D03               	btfss	3,2
  8048  0250  2A58               	goto	i1l2834
  8049  0251  3000               	movlw	0
  8050  0252  00A0               	movwf	?___ftmul
  8051  0253  3000               	movlw	0
  8052  0254  00A1               	movwf	?___ftmul+1
  8053  0255  3000               	movlw	0
  8054  0256  00A2               	movwf	?___ftmul+2
  8055  0257  0008               	return
  8056  0258                     i1l2834:	
  8057  0258  0823               	movf	___ftmul@f2,w
  8058  0259  00A6               	movwf	??___ftmul
  8059  025A  0824               	movf	___ftmul@f2+1,w
  8060  025B  00A7               	movwf	??___ftmul+1
  8061  025C  0825               	movf	___ftmul@f2+2,w
  8062  025D  00A8               	movwf	??___ftmul+2
  8063  025E  1003               	clrc
  8064  025F  0D27               	rlf	??___ftmul+1,w
  8065  0260  0D28               	rlf	??___ftmul+2,w
  8066  0261  00A9               	movwf	??___ftmul+3
  8067  0262  0829               	movf	??___ftmul+3,w
  8068  0263  00AF               	movwf	___ftmul@sign
  8069  0264  082F               	movf	___ftmul@sign,w
  8070  0265  1D03               	btfss	3,2
  8071  0266  2A6E               	goto	i1l2840
  8072  0267  3000               	movlw	0
  8073  0268  00A0               	movwf	?___ftmul
  8074  0269  3000               	movlw	0
  8075  026A  00A1               	movwf	?___ftmul+1
  8076  026B  3000               	movlw	0
  8077  026C  00A2               	movwf	?___ftmul+2
  8078  026D  0008               	return
  8079  026E                     i1l2840:	
  8080  026E  082F               	movf	___ftmul@sign,w
  8081  026F  3E7B               	addlw	123
  8082  0270  00A6               	movwf	??___ftmul
  8083  0271  0826               	movf	??___ftmul,w
  8084  0272  07AA               	addwf	___ftmul@exp,f
  8085  0273  0820               	movf	___ftmul@f1,w
  8086  0274  00A6               	movwf	??___ftmul
  8087  0275  0821               	movf	___ftmul@f1+1,w
  8088  0276  00A7               	movwf	??___ftmul+1
  8089  0277  0822               	movf	___ftmul@f1+2,w
  8090  0278  00A8               	movwf	??___ftmul+2
  8091  0279  3010               	movlw	16
  8092  027A                     u261_25:	
  8093  027A  36A8               	lsrf	??___ftmul+2,f
  8094  027B  0CA7               	rrf	??___ftmul+1,f
  8095  027C  0CA6               	rrf	??___ftmul,f
  8096  027D  0B89               	decfsz	9,f
  8097  027E  2A7A               	goto	u261_25
  8098  027F  0826               	movf	??___ftmul,w
  8099  0280  00A9               	movwf	??___ftmul+3
  8100  0281  0829               	movf	??___ftmul+3,w
  8101  0282  00AF               	movwf	___ftmul@sign
  8102  0283  0823               	movf	___ftmul@f2,w
  8103  0284  00A6               	movwf	??___ftmul
  8104  0285  0824               	movf	___ftmul@f2+1,w
  8105  0286  00A7               	movwf	??___ftmul+1
  8106  0287  0825               	movf	___ftmul@f2+2,w
  8107  0288  00A8               	movwf	??___ftmul+2
  8108  0289  3010               	movlw	16
  8109  028A                     u262_25:	
  8110  028A  36A8               	lsrf	??___ftmul+2,f
  8111  028B  0CA7               	rrf	??___ftmul+1,f
  8112  028C  0CA6               	rrf	??___ftmul,f
  8113  028D  0B89               	decfsz	9,f
  8114  028E  2A8A               	goto	u262_25
  8115  028F  0826               	movf	??___ftmul,w
  8116  0290  00A9               	movwf	??___ftmul+3
  8117  0291  0829               	movf	??___ftmul+3,w
  8118  0292  06AF               	xorwf	___ftmul@sign,f
  8119  0293  3080               	movlw	128
  8120  0294  00A6               	movwf	??___ftmul
  8121  0295  0826               	movf	??___ftmul,w
  8122  0296  05AF               	andwf	___ftmul@sign,f
  8123  0297  17A1               	bsf	___ftmul@f1+1,7
  8124  0298  17A4               	bsf	___ftmul@f2+1,7
  8125  0299  30FF               	movlw	255
  8126  029A  05A3               	andwf	___ftmul@f2,f
  8127  029B  30FF               	movlw	255
  8128  029C  05A4               	andwf	___ftmul@f2+1,f
  8129  029D  3000               	movlw	0
  8130  029E  05A5               	andwf	___ftmul@f2+2,f
  8131  029F  3000               	movlw	0
  8132  02A0  00AB               	movwf	___ftmul@f3_as_product
  8133  02A1  3000               	movlw	0
  8134  02A2  00AC               	movwf	___ftmul@f3_as_product+1
  8135  02A3  3000               	movlw	0
  8136  02A4  00AD               	movwf	___ftmul@f3_as_product+2
  8137  02A5  3007               	movlw	7
  8138  02A6  00A6               	movwf	??___ftmul
  8139  02A7  0826               	movf	??___ftmul,w
  8140  02A8  00AE               	movwf	___ftmul@cntr
  8141  02A9                     i1l2852:	
  8142  02A9  1C20               	btfss	___ftmul@f1,0
  8143  02AA  2AB1               	goto	i1l2856
  8144  02AB  0823               	movf	___ftmul@f2,w
  8145  02AC  07AB               	addwf	___ftmul@f3_as_product,f
  8146  02AD  0824               	movf	___ftmul@f2+1,w
  8147  02AE  3DAC               	addwfc	___ftmul@f3_as_product+1,f
  8148  02AF  0825               	movf	___ftmul@f2+2,w
  8149  02B0  3DAD               	addwfc	___ftmul@f3_as_product+2,f
  8150  02B1                     i1l2856:	
  8151  02B1  3001               	movlw	1
  8152  02B2                     u264_25:	
  8153  02B2  36A2               	lsrf	___ftmul@f1+2,f
  8154  02B3  0CA1               	rrf	___ftmul@f1+1,f
  8155  02B4  0CA0               	rrf	___ftmul@f1,f
  8156  02B5  0B89               	decfsz	9,f
  8157  02B6  2AB2               	goto	u264_25
  8158  02B7  3001               	movlw	1
  8159  02B8                     u265_25:	
  8160  02B8  35A3               	lslf	___ftmul@f2,f
  8161  02B9  0DA4               	rlf	___ftmul@f2+1,f
  8162  02BA  0DA5               	rlf	___ftmul@f2+2,f
  8163  02BB  0B89               	decfsz	9,f
  8164  02BC  2AB8               	goto	u265_25
  8165  02BD  3001               	movlw	1
  8166  02BE  02AE               	subwf	___ftmul@cntr,f
  8167  02BF  1D03               	btfss	3,2
  8168  02C0  2AA9               	goto	i1l2852
  8169  02C1  3009               	movlw	9
  8170  02C2  00A6               	movwf	??___ftmul
  8171  02C3  0826               	movf	??___ftmul,w
  8172  02C4  00AE               	movwf	___ftmul@cntr
  8173  02C5                     i1l2864:	
  8174  02C5  1C20               	btfss	___ftmul@f1,0
  8175  02C6  2ACD               	goto	i1l2868
  8176  02C7  0823               	movf	___ftmul@f2,w
  8177  02C8  07AB               	addwf	___ftmul@f3_as_product,f
  8178  02C9  0824               	movf	___ftmul@f2+1,w
  8179  02CA  3DAC               	addwfc	___ftmul@f3_as_product+1,f
  8180  02CB  0825               	movf	___ftmul@f2+2,w
  8181  02CC  3DAD               	addwfc	___ftmul@f3_as_product+2,f
  8182  02CD                     i1l2868:	
  8183  02CD  3001               	movlw	1
  8184  02CE                     u268_25:	
  8185  02CE  36A2               	lsrf	___ftmul@f1+2,f
  8186  02CF  0CA1               	rrf	___ftmul@f1+1,f
  8187  02D0  0CA0               	rrf	___ftmul@f1,f
  8188  02D1  0B89               	decfsz	9,f
  8189  02D2  2ACE               	goto	u268_25
  8190  02D3  3001               	movlw	1
  8191  02D4                     u269_25:	
  8192  02D4  36AD               	lsrf	___ftmul@f3_as_product+2,f
  8193  02D5  0CAC               	rrf	___ftmul@f3_as_product+1,f
  8194  02D6  0CAB               	rrf	___ftmul@f3_as_product,f
  8195  02D7  0B89               	decfsz	9,f
  8196  02D8  2AD4               	goto	u269_25
  8197  02D9  3001               	movlw	1
  8198  02DA  02AE               	subwf	___ftmul@cntr,f
  8199  02DB  1D03               	btfss	3,2
  8200  02DC  2AC5               	goto	i1l2864
  8201  02DD  082B               	movf	___ftmul@f3_as_product,w
  8202  02DE  00F0               	movwf	___ftpack@arg
  8203  02DF  082C               	movf	___ftmul@f3_as_product+1,w
  8204  02E0  00F1               	movwf	___ftpack@arg+1
  8205  02E1  082D               	movf	___ftmul@f3_as_product+2,w
  8206  02E2  00F2               	movwf	___ftpack@arg+2
  8207  02E3  082A               	movf	___ftmul@exp,w
  8208  02E4  00A6               	movwf	??___ftmul
  8209  02E5  0826               	movf	??___ftmul,w
  8210  02E6  00F3               	movwf	___ftpack@exp
  8211  02E7  082F               	movf	___ftmul@sign,w
  8212  02E8  00A7               	movwf	??___ftmul+1
  8213  02E9  0827               	movf	??___ftmul+1,w
  8214  02EA  00F4               	movwf	___ftpack@sign
  8215  02EB  3187  271B         	fcall	___ftpack
  8216  02ED  0870               	movf	?___ftpack,w
  8217  02EE  0020               	movlb	0	; select bank0
  8218  02EF  00A0               	movwf	?___ftmul
  8219  02F0  0871               	movf	?___ftpack+1,w
  8220  02F1  00A1               	movwf	?___ftmul+1
  8221  02F2  0872               	movf	?___ftpack+2,w
  8222  02F3  00A2               	movwf	?___ftmul+2
  8223  02F4  0008               	return
  8224  02F5                     __end_of___ftmul:	
  8225                           
  8226                           	psect	text64
  8227  071B                     __ptext64:	
  8228 ;; *************** function ___ftpack *****************
  8229 ;; Defined at:
  8230 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\float.c"
  8231 ;; Parameters:    Size  Location     Type
  8232 ;;  arg             3    0[COMMON] unsigned um
  8233 ;;  exp             1    3[COMMON] unsigned char 
  8234 ;;  sign            1    4[COMMON] unsigned char 
  8235 ;; Auto vars:     Size  Location     Type
  8236 ;;		None
  8237 ;; Return value:  Size  Location     Type
  8238 ;;                  3    0[COMMON] float 
  8239 ;; Registers used:
  8240 ;;		wreg, status,2, status,0
  8241 ;; Tracked objects:
  8242 ;;		On entry : 0/0
  8243 ;;		On exit  : 0/0
  8244 ;;		Unchanged: 0/0
  8245 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8246 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8247 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8248 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8249 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8250 ;;Total ram usage:        8 bytes
  8251 ;; Hardware stack levels used:    1
  8252 ;; This function calls:
  8253 ;;		Nothing
  8254 ;; This function is called by:
  8255 ;;		___altoft
  8256 ;;		___ftadd
  8257 ;;		___ftmul
  8258 ;;		___lttoft
  8259 ;; This function uses a non-reentrant model
  8260 ;;
  8261                           
  8262                           
  8263                           ;psect for function ___ftpack
  8264  071B                     ___ftpack:	
  8265                           
  8266                           ;incstack = 0
  8267                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
  8268  071B  0873               	movf	___ftpack@exp,w
  8269  071C  1903               	btfsc	3,2
  8270  071D  2F23               	goto	i1l2550
  8271  071E  0872               	movf	___ftpack@arg+2,w
  8272  071F  0471               	iorwf	___ftpack@arg+1,w
  8273  0720  0470               	iorwf	___ftpack@arg,w
  8274  0721  1D03               	skipz
  8275  0722  2F34               	goto	i1l2556
  8276  0723                     i1l2550:	
  8277  0723  3000               	movlw	0
  8278  0724  00F0               	movwf	?___ftpack
  8279  0725  3000               	movlw	0
  8280  0726  00F1               	movwf	?___ftpack+1
  8281  0727  3000               	movlw	0
  8282  0728  00F2               	movwf	?___ftpack+2
  8283  0729  0008               	return
  8284  072A                     i1l2554:	
  8285  072A  3001               	movlw	1
  8286  072B  00F5               	movwf	??___ftpack
  8287  072C  0875               	movf	??___ftpack,w
  8288  072D  07F3               	addwf	___ftpack@exp,f
  8289  072E  3001               	movlw	1
  8290  072F                     u190_25:	
  8291  072F  36F2               	lsrf	___ftpack@arg+2,f
  8292  0730  0CF1               	rrf	___ftpack@arg+1,f
  8293  0731  0CF0               	rrf	___ftpack@arg,f
  8294  0732  0B89               	decfsz	9,f
  8295  0733  2F2F               	goto	u190_25
  8296  0734                     i1l2556:	
  8297  0734  30FE               	movlw	254
  8298  0735  0572               	andwf	___ftpack@arg+2,w
  8299  0736  1903               	btfsc	3,2
  8300  0737  2F4D               	goto	i1l945
  8301  0738  2F2A               	goto	i1l2554
  8302  0739                     i1l2558:	
  8303  0739  3001               	movlw	1
  8304  073A  00F5               	movwf	??___ftpack
  8305  073B  0875               	movf	??___ftpack,w
  8306  073C  07F3               	addwf	___ftpack@exp,f
  8307  073D  3001               	movlw	1
  8308  073E  07F0               	addwf	___ftpack@arg,f
  8309  073F  3000               	movlw	0
  8310  0740  1803               	skipnc
  8311  0741  3001               	movlw	1
  8312  0742  07F1               	addwf	___ftpack@arg+1,f
  8313  0743  3000               	movlw	0
  8314  0744  1803               	skipnc
  8315  0745  3001               	movlw	1
  8316  0746  07F2               	addwf	___ftpack@arg+2,f
  8317  0747  3001               	movlw	1
  8318  0748                     u192_25:	
  8319  0748  36F2               	lsrf	___ftpack@arg+2,f
  8320  0749  0CF1               	rrf	___ftpack@arg+1,f
  8321  074A  0CF0               	rrf	___ftpack@arg,f
  8322  074B  0B89               	decfsz	9,f
  8323  074C  2F48               	goto	u192_25
  8324  074D                     i1l945:	
  8325  074D  30FF               	movlw	255
  8326  074E  0572               	andwf	___ftpack@arg+2,w
  8327  074F  1903               	btfsc	3,2
  8328  0750  2F5A               	goto	i1l2566
  8329  0751  2F39               	goto	i1l2558
  8330  0752                     i1l2564:	
  8331  0752  3001               	movlw	1
  8332  0753  02F3               	subwf	___ftpack@exp,f
  8333  0754  3001               	movlw	1
  8334  0755                     u194_25:	
  8335  0755  35F0               	lslf	___ftpack@arg,f
  8336  0756  0DF1               	rlf	___ftpack@arg+1,f
  8337  0757  0DF2               	rlf	___ftpack@arg+2,f
  8338  0758  0B89               	decfsz	9,f
  8339  0759  2F55               	goto	u194_25
  8340  075A                     i1l2566:	
  8341  075A  1BF1               	btfsc	___ftpack@arg+1,7
  8342  075B  2F60               	goto	i1l952
  8343  075C  3002               	movlw	2
  8344  075D  0273               	subwf	___ftpack@exp,w
  8345  075E  1803               	skipnc
  8346  075F  2F52               	goto	i1l2564
  8347  0760                     i1l952:	
  8348  0760  1873               	btfsc	___ftpack@exp,0
  8349  0761  2F68               	goto	i1l953
  8350  0762  30FF               	movlw	255
  8351  0763  05F0               	andwf	___ftpack@arg,f
  8352  0764  307F               	movlw	127
  8353  0765  05F1               	andwf	___ftpack@arg+1,f
  8354  0766  30FF               	movlw	255
  8355  0767  05F2               	andwf	___ftpack@arg+2,f
  8356  0768                     i1l953:	
  8357  0768  1003               	clrc
  8358  0769  0CF3               	rrf	___ftpack@exp,f
  8359  076A  0873               	movf	___ftpack@exp,w
  8360  076B  00F5               	movwf	??___ftpack
  8361  076C  01F6               	clrf	??___ftpack+1
  8362  076D  01F7               	clrf	??___ftpack+2
  8363  076E  3010               	movlw	16
  8364  076F                     u198_25:	
  8365  076F  35F5               	lslf	??___ftpack,f
  8366  0770  0DF6               	rlf	??___ftpack+1,f
  8367  0771  0DF7               	rlf	??___ftpack+2,f
  8368  0772  0B89               	decfsz	9,f
  8369  0773  2F6F               	goto	u198_25
  8370  0774  0875               	movf	??___ftpack,w
  8371  0775  04F0               	iorwf	___ftpack@arg,f
  8372  0776  0876               	movf	??___ftpack+1,w
  8373  0777  04F1               	iorwf	___ftpack@arg+1,f
  8374  0778  0877               	movf	??___ftpack+2,w
  8375  0779  04F2               	iorwf	___ftpack@arg+2,f
  8376  077A  0874               	movf	___ftpack@sign,w
  8377  077B  1903               	btfsc	3,2
  8378  077C  0008               	return
  8379  077D  17F2               	bsf	___ftpack@arg+2,7
  8380  077E  0008               	return
  8381  077F                     __end_of___ftpack:	
  8382                           
  8383                           	psect	text65
  8384  0649                     __ptext65:	
  8385 ;; *************** function ___almod *****************
  8386 ;; Defined at:
  8387 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\almod.c"
  8388 ;; Parameters:    Size  Location     Type
  8389 ;;  divisor         4    0[COMMON] long 
  8390 ;;  dividend        4    4[COMMON] long 
  8391 ;; Auto vars:     Size  Location     Type
  8392 ;;  sign            1   10[COMMON] unsigned char 
  8393 ;;  counter         1    9[COMMON] unsigned char 
  8394 ;; Return value:  Size  Location     Type
  8395 ;;                  4    0[COMMON] long 
  8396 ;; Registers used:
  8397 ;;		wreg, status,2, status,0
  8398 ;; Tracked objects:
  8399 ;;		On entry : 0/0
  8400 ;;		On exit  : 0/0
  8401 ;;		Unchanged: 0/0
  8402 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8403 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8404 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8405 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8406 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8407 ;;Total ram usage:       11 bytes
  8408 ;; Hardware stack levels used:    1
  8409 ;; This function calls:
  8410 ;;		Nothing
  8411 ;; This function is called by:
  8412 ;;		_restoreTime
  8413 ;; This function uses a non-reentrant model
  8414 ;;
  8415                           
  8416                           
  8417                           ;psect for function ___almod
  8418  0649                     ___almod:	
  8419                           
  8420                           ;incstack = 0
  8421                           ; Regs used in ___almod: [wreg+status,2+status,0]
  8422  0649  01FA               	clrf	___almod@sign
  8423  064A  1FF7               	btfss	___almod@dividend+3,7
  8424  064B  2E59               	goto	i1l852
  8425  064C  09F4               	comf	___almod@dividend,f
  8426  064D  09F5               	comf	___almod@dividend+1,f
  8427  064E  09F6               	comf	___almod@dividend+2,f
  8428  064F  09F7               	comf	___almod@dividend+3,f
  8429  0650  0AF4               	incf	___almod@dividend,f
  8430  0651  1903               	skipnz
  8431  0652  0AF5               	incf	___almod@dividend+1,f
  8432  0653  1903               	skipnz
  8433  0654  0AF6               	incf	___almod@dividend+2,f
  8434  0655  1903               	skipnz
  8435  0656  0AF7               	incf	___almod@dividend+3,f
  8436  0657  01FA               	clrf	___almod@sign
  8437  0658  0AFA               	incf	___almod@sign,f
  8438  0659                     i1l852:	
  8439  0659  1FF3               	btfss	___almod@divisor+3,7
  8440  065A  2E66               	goto	i1l2804
  8441  065B  09F0               	comf	___almod@divisor,f
  8442  065C  09F1               	comf	___almod@divisor+1,f
  8443  065D  09F2               	comf	___almod@divisor+2,f
  8444  065E  09F3               	comf	___almod@divisor+3,f
  8445  065F  0AF0               	incf	___almod@divisor,f
  8446  0660  1903               	skipnz
  8447  0661  0AF1               	incf	___almod@divisor+1,f
  8448  0662  1903               	skipnz
  8449  0663  0AF2               	incf	___almod@divisor+2,f
  8450  0664  1903               	skipnz
  8451  0665  0AF3               	incf	___almod@divisor+3,f
  8452  0666                     i1l2804:	
  8453  0666  0873               	movf	___almod@divisor+3,w
  8454  0667  0472               	iorwf	___almod@divisor+2,w
  8455  0668  0471               	iorwf	___almod@divisor+1,w
  8456  0669  0470               	iorwf	___almod@divisor,w
  8457  066A  1903               	skipnz
  8458  066B  2E9F               	goto	i1l2820
  8459  066C  01F9               	clrf	___almod@counter
  8460  066D  0AF9               	incf	___almod@counter,f
  8461  066E                     i1l2810:	
  8462  066E  1BF3               	btfsc	___almod@divisor+3,7
  8463  066F  2E7C               	goto	i1l2812
  8464  0670  3001               	movlw	1
  8465  0671                     u253_25:	
  8466  0671  35F0               	lslf	___almod@divisor,f
  8467  0672  0DF1               	rlf	___almod@divisor+1,f
  8468  0673  0DF2               	rlf	___almod@divisor+2,f
  8469  0674  0DF3               	rlf	___almod@divisor+3,f
  8470  0675  0B89               	decfsz	9,f
  8471  0676  2E71               	goto	u253_25
  8472  0677  3001               	movlw	1
  8473  0678  00F8               	movwf	??___almod
  8474  0679  0878               	movf	??___almod,w
  8475  067A  07F9               	addwf	___almod@counter,f
  8476  067B  2E6E               	goto	i1l2810
  8477  067C                     i1l2812:	
  8478  067C  0873               	movf	___almod@divisor+3,w
  8479  067D  0277               	subwf	___almod@dividend+3,w
  8480  067E  1D03               	skipz
  8481  067F  2E8A               	goto	u255_25
  8482  0680  0872               	movf	___almod@divisor+2,w
  8483  0681  0276               	subwf	___almod@dividend+2,w
  8484  0682  1D03               	skipz
  8485  0683  2E8A               	goto	u255_25
  8486  0684  0871               	movf	___almod@divisor+1,w
  8487  0685  0275               	subwf	___almod@dividend+1,w
  8488  0686  1D03               	skipz
  8489  0687  2E8A               	goto	u255_25
  8490  0688  0870               	movf	___almod@divisor,w
  8491  0689  0274               	subwf	___almod@dividend,w
  8492  068A                     u255_25:	
  8493  068A  1C03               	skipc
  8494  068B  2E94               	goto	i1l2816
  8495  068C  0870               	movf	___almod@divisor,w
  8496  068D  02F4               	subwf	___almod@dividend,f
  8497  068E  0871               	movf	___almod@divisor+1,w
  8498  068F  3BF5               	subwfb	___almod@dividend+1,f
  8499  0690  0872               	movf	___almod@divisor+2,w
  8500  0691  3BF6               	subwfb	___almod@dividend+2,f
  8501  0692  0873               	movf	___almod@divisor+3,w
  8502  0693  3BF7               	subwfb	___almod@dividend+3,f
  8503  0694                     i1l2816:	
  8504  0694  3001               	movlw	1
  8505  0695                     u256_25:	
  8506  0695  36F3               	lsrf	___almod@divisor+3,f
  8507  0696  0CF2               	rrf	___almod@divisor+2,f
  8508  0697  0CF1               	rrf	___almod@divisor+1,f
  8509  0698  0CF0               	rrf	___almod@divisor,f
  8510  0699  0B89               	decfsz	9,f
  8511  069A  2E95               	goto	u256_25
  8512  069B  3001               	movlw	1
  8513  069C  02F9               	subwf	___almod@counter,f
  8514  069D  1D03               	btfss	3,2
  8515  069E  2E7C               	goto	i1l2812
  8516  069F                     i1l2820:	
  8517  069F  087A               	movf	___almod@sign,w
  8518  06A0  1903               	btfsc	3,2
  8519  06A1  2EAD               	goto	i1l2824
  8520  06A2  09F4               	comf	___almod@dividend,f
  8521  06A3  09F5               	comf	___almod@dividend+1,f
  8522  06A4  09F6               	comf	___almod@dividend+2,f
  8523  06A5  09F7               	comf	___almod@dividend+3,f
  8524  06A6  0AF4               	incf	___almod@dividend,f
  8525  06A7  1903               	skipnz
  8526  06A8  0AF5               	incf	___almod@dividend+1,f
  8527  06A9  1903               	skipnz
  8528  06AA  0AF6               	incf	___almod@dividend+2,f
  8529  06AB  1903               	skipnz
  8530  06AC  0AF7               	incf	___almod@dividend+3,f
  8531  06AD                     i1l2824:	
  8532  06AD  0877               	movf	___almod@dividend+3,w
  8533  06AE  00F3               	movwf	?___almod+3
  8534  06AF  0876               	movf	___almod@dividend+2,w
  8535  06B0  00F2               	movwf	?___almod+2
  8536  06B1  0875               	movf	___almod@dividend+1,w
  8537  06B2  00F1               	movwf	?___almod+1
  8538  06B3  0874               	movf	___almod@dividend,w
  8539  06B4  00F0               	movwf	?___almod
  8540  06B5  0008               	return
  8541  06B6                     __end_of___almod:	
  8542                           
  8543                           	psect	text66
  8544  05C7                     __ptext66:	
  8545 ;; *************** function ___aldiv *****************
  8546 ;; Defined at:
  8547 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\aldiv.c"
  8548 ;; Parameters:    Size  Location     Type
  8549 ;;  divisor         4    0[BANK0 ] long 
  8550 ;;  dividend        4    4[BANK0 ] long 
  8551 ;; Auto vars:     Size  Location     Type
  8552 ;;  quotient        4   10[BANK0 ] long 
  8553 ;;  sign            1    9[BANK0 ] unsigned char 
  8554 ;;  counter         1    8[BANK0 ] unsigned char 
  8555 ;; Return value:  Size  Location     Type
  8556 ;;                  4    0[BANK0 ] long 
  8557 ;; Registers used:
  8558 ;;		wreg, status,2, status,0
  8559 ;; Tracked objects:
  8560 ;;		On entry : 0/0
  8561 ;;		On exit  : 0/0
  8562 ;;		Unchanged: 0/0
  8563 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8564 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8565 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8566 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8567 ;;      Totals:         1      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8568 ;;Total ram usage:       15 bytes
  8569 ;; Hardware stack levels used:    1
  8570 ;; This function calls:
  8571 ;;		Nothing
  8572 ;; This function is called by:
  8573 ;;		_restoreTime
  8574 ;; This function uses a non-reentrant model
  8575 ;;
  8576                           
  8577                           
  8578                           ;psect for function ___aldiv
  8579  05C7                     ___aldiv:	
  8580                           
  8581                           ;incstack = 0
  8582                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
  8583  05C7  0020               	movlb	0	; select bank0
  8584  05C8  01A9               	clrf	___aldiv@sign
  8585  05C9  1FA3               	btfss	___aldiv@divisor+3,7
  8586  05CA  2DD8               	goto	i1l839
  8587  05CB  09A0               	comf	___aldiv@divisor,f
  8588  05CC  09A1               	comf	___aldiv@divisor+1,f
  8589  05CD  09A2               	comf	___aldiv@divisor+2,f
  8590  05CE  09A3               	comf	___aldiv@divisor+3,f
  8591  05CF  0AA0               	incf	___aldiv@divisor,f
  8592  05D0  1903               	skipnz
  8593  05D1  0AA1               	incf	___aldiv@divisor+1,f
  8594  05D2  1903               	skipnz
  8595  05D3  0AA2               	incf	___aldiv@divisor+2,f
  8596  05D4  1903               	skipnz
  8597  05D5  0AA3               	incf	___aldiv@divisor+3,f
  8598  05D6  01A9               	clrf	___aldiv@sign
  8599  05D7  0AA9               	incf	___aldiv@sign,f
  8600  05D8                     i1l839:	
  8601  05D8  1FA7               	btfss	___aldiv@dividend+3,7
  8602  05D9  2DE9               	goto	i1l2766
  8603  05DA  09A4               	comf	___aldiv@dividend,f
  8604  05DB  09A5               	comf	___aldiv@dividend+1,f
  8605  05DC  09A6               	comf	___aldiv@dividend+2,f
  8606  05DD  09A7               	comf	___aldiv@dividend+3,f
  8607  05DE  0AA4               	incf	___aldiv@dividend,f
  8608  05DF  1903               	skipnz
  8609  05E0  0AA5               	incf	___aldiv@dividend+1,f
  8610  05E1  1903               	skipnz
  8611  05E2  0AA6               	incf	___aldiv@dividend+2,f
  8612  05E3  1903               	skipnz
  8613  05E4  0AA7               	incf	___aldiv@dividend+3,f
  8614  05E5  3001               	movlw	1
  8615  05E6  00FB               	movwf	??___aldiv
  8616  05E7  087B               	movf	??___aldiv,w
  8617  05E8  06A9               	xorwf	___aldiv@sign,f
  8618  05E9                     i1l2766:	
  8619  05E9  3000               	movlw	0
  8620  05EA  00AD               	movwf	___aldiv@quotient+3
  8621  05EB  3000               	movlw	0
  8622  05EC  00AC               	movwf	___aldiv@quotient+2
  8623  05ED  3000               	movlw	0
  8624  05EE  00AB               	movwf	___aldiv@quotient+1
  8625  05EF  3000               	movlw	0
  8626  05F0  00AA               	movwf	___aldiv@quotient
  8627  05F1  0823               	movf	___aldiv@divisor+3,w
  8628  05F2  0422               	iorwf	___aldiv@divisor+2,w
  8629  05F3  0421               	iorwf	___aldiv@divisor+1,w
  8630  05F4  0420               	iorwf	___aldiv@divisor,w
  8631  05F5  1903               	skipnz
  8632  05F6  2E32               	goto	i1l2788
  8633  05F7  01A8               	clrf	___aldiv@counter
  8634  05F8  0AA8               	incf	___aldiv@counter,f
  8635  05F9                     i1l2774:	
  8636  05F9  1BA3               	btfsc	___aldiv@divisor+3,7
  8637  05FA  2E07               	goto	i1l2776
  8638  05FB  3001               	movlw	1
  8639  05FC                     u243_25:	
  8640  05FC  35A0               	lslf	___aldiv@divisor,f
  8641  05FD  0DA1               	rlf	___aldiv@divisor+1,f
  8642  05FE  0DA2               	rlf	___aldiv@divisor+2,f
  8643  05FF  0DA3               	rlf	___aldiv@divisor+3,f
  8644  0600  0B89               	decfsz	9,f
  8645  0601  2DFC               	goto	u243_25
  8646  0602  3001               	movlw	1
  8647  0603  00FB               	movwf	??___aldiv
  8648  0604  087B               	movf	??___aldiv,w
  8649  0605  07A8               	addwf	___aldiv@counter,f
  8650  0606  2DF9               	goto	i1l2774
  8651  0607                     i1l2776:	
  8652  0607  3001               	movlw	1
  8653  0608                     u245_25:	
  8654  0608  35AA               	lslf	___aldiv@quotient,f
  8655  0609  0DAB               	rlf	___aldiv@quotient+1,f
  8656  060A  0DAC               	rlf	___aldiv@quotient+2,f
  8657  060B  0DAD               	rlf	___aldiv@quotient+3,f
  8658  060C  0B89               	decfsz	9,f
  8659  060D  2E08               	goto	u245_25
  8660  060E  0823               	movf	___aldiv@divisor+3,w
  8661  060F  0227               	subwf	___aldiv@dividend+3,w
  8662  0610  1D03               	skipz
  8663  0611  2E1C               	goto	u246_25
  8664  0612  0822               	movf	___aldiv@divisor+2,w
  8665  0613  0226               	subwf	___aldiv@dividend+2,w
  8666  0614  1D03               	skipz
  8667  0615  2E1C               	goto	u246_25
  8668  0616  0821               	movf	___aldiv@divisor+1,w
  8669  0617  0225               	subwf	___aldiv@dividend+1,w
  8670  0618  1D03               	skipz
  8671  0619  2E1C               	goto	u246_25
  8672  061A  0820               	movf	___aldiv@divisor,w
  8673  061B  0224               	subwf	___aldiv@dividend,w
  8674  061C                     u246_25:	
  8675  061C  1C03               	skipc
  8676  061D  2E27               	goto	i1l2784
  8677  061E  0820               	movf	___aldiv@divisor,w
  8678  061F  02A4               	subwf	___aldiv@dividend,f
  8679  0620  0821               	movf	___aldiv@divisor+1,w
  8680  0621  3BA5               	subwfb	___aldiv@dividend+1,f
  8681  0622  0822               	movf	___aldiv@divisor+2,w
  8682  0623  3BA6               	subwfb	___aldiv@dividend+2,f
  8683  0624  0823               	movf	___aldiv@divisor+3,w
  8684  0625  3BA7               	subwfb	___aldiv@dividend+3,f
  8685  0626  142A               	bsf	___aldiv@quotient,0
  8686  0627                     i1l2784:	
  8687  0627  3001               	movlw	1
  8688  0628                     u247_25:	
  8689  0628  36A3               	lsrf	___aldiv@divisor+3,f
  8690  0629  0CA2               	rrf	___aldiv@divisor+2,f
  8691  062A  0CA1               	rrf	___aldiv@divisor+1,f
  8692  062B  0CA0               	rrf	___aldiv@divisor,f
  8693  062C  0B89               	decfsz	9,f
  8694  062D  2E28               	goto	u247_25
  8695  062E  3001               	movlw	1
  8696  062F  02A8               	subwf	___aldiv@counter,f
  8697  0630  1D03               	btfss	3,2
  8698  0631  2E07               	goto	i1l2776
  8699  0632                     i1l2788:	
  8700  0632  0829               	movf	___aldiv@sign,w
  8701  0633  1903               	btfsc	3,2
  8702  0634  2E40               	goto	i1l2792
  8703  0635  09AA               	comf	___aldiv@quotient,f
  8704  0636  09AB               	comf	___aldiv@quotient+1,f
  8705  0637  09AC               	comf	___aldiv@quotient+2,f
  8706  0638  09AD               	comf	___aldiv@quotient+3,f
  8707  0639  0AAA               	incf	___aldiv@quotient,f
  8708  063A  1903               	skipnz
  8709  063B  0AAB               	incf	___aldiv@quotient+1,f
  8710  063C  1903               	skipnz
  8711  063D  0AAC               	incf	___aldiv@quotient+2,f
  8712  063E  1903               	skipnz
  8713  063F  0AAD               	incf	___aldiv@quotient+3,f
  8714  0640                     i1l2792:	
  8715  0640  082D               	movf	___aldiv@quotient+3,w
  8716  0641  00A3               	movwf	?___aldiv+3
  8717  0642  082C               	movf	___aldiv@quotient+2,w
  8718  0643  00A2               	movwf	?___aldiv+2
  8719  0644  082B               	movf	___aldiv@quotient+1,w
  8720  0645  00A1               	movwf	?___aldiv+1
  8721  0646  082A               	movf	___aldiv@quotient,w
  8722  0647  00A0               	movwf	?___aldiv
  8723  0648  0008               	return
  8724  0649                     __end_of___aldiv:	
  8725                           
  8726                           	psect	text67
  8727  0EB0                     __ptext67:	
  8728 ;; *************** function _shutdown *****************
  8729 ;; Defined at:
  8730 ;;		line 726 in file "clock_functions.c"
  8731 ;; Parameters:    Size  Location     Type
  8732 ;;		None
  8733 ;; Auto vars:     Size  Location     Type
  8734 ;;		None
  8735 ;; Return value:  Size  Location     Type
  8736 ;;                  1    wreg      void 
  8737 ;; Registers used:
  8738 ;;		wreg, status,2, status,0, pclath, cstack
  8739 ;; Tracked objects:
  8740 ;;		On entry : 0/0
  8741 ;;		On exit  : 0/0
  8742 ;;		Unchanged: 0/0
  8743 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8744 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8745 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8746 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8747 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8748 ;;Total ram usage:        0 bytes
  8749 ;; Hardware stack levels used:    1
  8750 ;; Hardware stack levels required when called:    1
  8751 ;; This function calls:
  8752 ;;		i1_TMR1_SetInterruptHandler
  8753 ;;		i1_TMR2_StopTimer
  8754 ;; This function is called by:
  8755 ;;		_powerFailISR
  8756 ;; This function uses a non-reentrant model
  8757 ;;
  8758                           
  8759                           
  8760                           ;psect for function _shutdown
  8761  0EB0                     _shutdown:	
  8762                           
  8763                           ;clock_functions.c: 732: IOCBNbits.IOCBN0 = 0;
  8764                           
  8765                           ;incstack = 0
  8766                           ; Regs used in _shutdown: [wreg+status,2+status,0+pclath+cstack]
  8767  0EB0  0027               	movlb	7	; select bank7
  8768  0EB1  1015               	bcf	21,0	;volatile
  8769                           
  8770                           ;clock_functions.c: 733: IOCBNbits.IOCBN1 = 0;
  8771  0EB2  1095               	bcf	21,1	;volatile
  8772                           
  8773                           ;clock_functions.c: 734: IOCBNbits.IOCBN2 = 0;
  8774  0EB3  1115               	bcf	21,2	;volatile
  8775                           
  8776                           ;clock_functions.c: 735: IOCBNbits.IOCBN3 = 0;
  8777  0EB4  1195               	bcf	21,3	;volatile
  8778                           
  8779                           ;clock_functions.c: 738: LATEbits.LATE0 = 0;
  8780  0EB5  0022               	movlb	2	; select bank2
  8781  0EB6  1010               	bcf	16,0	;volatile
  8782                           
  8783                           ;clock_functions.c: 741: LATEbits.LATE1 = 0;
  8784  0EB7  1090               	bcf	16,1	;volatile
  8785                           
  8786                           ;clock_functions.c: 744: LATEbits.LATE2 = 0;
  8787  0EB8  1110               	bcf	16,2	;volatile
  8788                           
  8789                           ;clock_functions.c: 747: LATCbits.LATC3 = 0;
  8790  0EB9  118E               	bcf	14,3	;volatile
  8791                           
  8792                           ;clock_functions.c: 748: LATCbits.LATC4 = 0;
  8793  0EBA  120E               	bcf	14,4	;volatile
  8794                           
  8795                           ;clock_functions.c: 751: LATCbits.LATC2 = 0;
  8796  0EBB  110E               	bcf	14,2	;volatile
  8797                           
  8798                           ;clock_functions.c: 754: ParallelPort.BCO = 0;
  8799  0EBC  308F               	movlw	-113
  8800  0EBD  058F               	andwf	15,f	;volatile
  8801                           
  8802                           ;clock_functions.c: 755: ParallelPort.BCD = 0;
  8803  0EBE  30F0               	movlw	-16
  8804  0EBF  058F               	andwf	15,f	;volatile
  8805                           
  8806                           ;clock_functions.c: 758: LATDbits.LATD7 = 1;
  8807  0EC0  178F               	bsf	15,7	;volatile
  8808                           
  8809                           ;clock_functions.c: 761: TRISA = 0xFD;
  8810  0EC1  30FD               	movlw	253
  8811  0EC2  0021               	movlb	1	; select bank1
  8812  0EC3  008C               	movwf	12	;volatile
  8813                           
  8814                           ;clock_functions.c: 762: TRISB = 0x3F;
  8815  0EC4  303F               	movlw	63
  8816  0EC5  008D               	movwf	13	;volatile
  8817                           
  8818                           ;clock_functions.c: 763: TRISC = 0xFD;
  8819  0EC6  30FD               	movlw	253
  8820  0EC7  008E               	movwf	14	;volatile
  8821                           
  8822                           ;clock_functions.c: 764: TRISD = 0xFF;
  8823  0EC8  30FF               	movlw	255
  8824  0EC9  008F               	movwf	15	;volatile
  8825                           
  8826                           ;clock_functions.c: 765: TRISE = 0xF;
  8827  0ECA  300F               	movlw	15
  8828  0ECB  0090               	movwf	16	;volatile
  8829                           
  8830                           ;clock_functions.c: 768: LATAbits.LATA3 = 0;
  8831  0ECC  0022               	movlb	2	; select bank2
  8832  0ECD  118C               	bcf	12,3	;volatile
  8833                           
  8834                           ;clock_functions.c: 771: asleep_flag = 1;
  8835  0ECE  0020               	movlb	0	; select bank0
  8836  0ECF  146E               	bsf	_asleep_flag/(0+8),_asleep_flag& (0+7)	;volatile
  8837                           
  8838                           ;clock_functions.c: 774: INTCONbits.TMR0IE = 0;
  8839  0ED0  128B               	bcf	11,5	;volatile
  8840                           
  8841                           ;clock_functions.c: 775: PIE1bits.TMR2IE = 0;
  8842  0ED1  0021               	movlb	1	; select bank1
  8843  0ED2  1091               	bcf	17,1	;volatile
  8844                           
  8845                           ;clock_functions.c: 778: TMR0CS = 1;
  8846  0ED3  1695               	bsf	21,5	;volatile
  8847                           
  8848                           ;clock_functions.c: 779: TMR2_StopTimer();
  8849  0ED4  318A  22B4  318E   	fcall	i1_TMR2_StopTimer
  8850                           
  8851                           ;clock_functions.c: 782: nT1SYNC = 1;
  8852  0ED7  0020               	movlb	0	; select bank0
  8853  0ED8  1518               	bsf	24,2	;volatile
  8854                           
  8855                           ;clock_functions.c: 785: TMR1_SetInterruptHandler(sleepyTickISR);
  8856  0ED9  304C               	movlw	low _sleepyTickISR
  8857  0EDA  00F0               	movwf	i1TMR1_SetInterruptHandler@InterruptHandler
  8858  0EDB  300B               	movlw	high _sleepyTickISR
  8859  0EDC  00F1               	movwf	i1TMR1_SetInterruptHandler@InterruptHandler+1
  8860  0EDD  318A  22CB  318E   	fcall	i1_TMR1_SetInterruptHandler
  8861                           
  8862                           ;clock_functions.c: 789: OSCCONbits.IRCF = 0b0000;
  8863  0EE0  3087               	movlw	-121
  8864  0EE1  0021               	movlb	1	; select bank1
  8865  0EE2  0599               	andwf	25,f	;volatile
  8866  0EE3                     i1l682:	
  8867                           ;clock_functions.c: 790: while(!LFIOFR);
  8868                           
  8869  0EE3  1C9A               	btfss	26,1	;volatile
  8870  0EE4  2EE3               	goto	i1l682
  8871                           
  8872                           ;clock_functions.c: 791: OSCCONbits.SCS = 0b11;
  8873  0EE5  3003               	movlw	3
  8874  0EE6  0499               	iorwf	25,f	;volatile
  8875  0EE7                     i1l685:	
  8876                           ;clock_functions.c: 792: while(!LFIOFR);
  8877                           
  8878  0EE7  1C9A               	btfss	26,1	;volatile
  8879  0EE8  2EE7               	goto	i1l685
  8880  0EE9  0063               	sleep	;# 
  8881                           
  8882                           ;clock_functions.c: 798: __nop();
  8883  0EEA  0000               	nop
  8884  0EEB  0008               	return
  8885  0EEC                     __end_of_shutdown:	
  8886                           
  8887                           	psect	text68
  8888  0AB4                     __ptext68:	
  8889 ;; *************** function i1_TMR2_StopTimer *****************
  8890 ;; Defined at:
  8891 ;;		line 98 in file "mcc_generated_files/tmr2.c"
  8892 ;; Parameters:    Size  Location     Type
  8893 ;;		None
  8894 ;; Auto vars:     Size  Location     Type
  8895 ;;		None
  8896 ;; Return value:  Size  Location     Type
  8897 ;;                  1    wreg      void 
  8898 ;; Registers used:
  8899 ;;		None
  8900 ;; Tracked objects:
  8901 ;;		On entry : 0/0
  8902 ;;		On exit  : 0/0
  8903 ;;		Unchanged: 0/0
  8904 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8905 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8906 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8907 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8908 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8909 ;;Total ram usage:        0 bytes
  8910 ;; Hardware stack levels used:    1
  8911 ;; This function calls:
  8912 ;;		Nothing
  8913 ;; This function is called by:
  8914 ;;		_blankISR
  8915 ;;		_shutdown
  8916 ;; This function uses a non-reentrant model
  8917 ;;
  8918                           
  8919                           
  8920                           ;psect for function i1_TMR2_StopTimer
  8921  0AB4                     i1_TMR2_StopTimer:	
  8922                           
  8923                           ;tmr2.c: 101: T2CONbits.TMR2ON = 0;
  8924                           
  8925                           ;incstack = 0
  8926                           ; Regs used in i1_TMR2_StopTimer: []
  8927  0AB4  0020               	movlb	0	; select bank0
  8928  0AB5  111C               	bcf	28,2	;volatile
  8929  0AB6  0008               	return
  8930  0AB7                     __end_ofi1_TMR2_StopTimer:	
  8931                           
  8932                           	psect	text69
  8933  0ACB                     __ptext69:	
  8934 ;; *************** function i1_TMR1_SetInterruptHandler *****************
  8935 ;; Defined at:
  8936 ;;		line 171 in file "mcc_generated_files/tmr1.c"
  8937 ;; Parameters:    Size  Location     Type
  8938 ;;  InterruptHan    2    0[COMMON] PTR void 
  8939 ;;		 -> sleepyTickISR(1), tickISR(1), TMR1_DefaultInterruptHandler(1), 
  8940 ;; Auto vars:     Size  Location     Type
  8941 ;;		None
  8942 ;; Return value:  Size  Location     Type
  8943 ;;                  1    wreg      void 
  8944 ;; Registers used:
  8945 ;;		wreg
  8946 ;; Tracked objects:
  8947 ;;		On entry : 0/0
  8948 ;;		On exit  : 0/0
  8949 ;;		Unchanged: 0/0
  8950 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8951 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8952 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8953 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8954 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8955 ;;Total ram usage:        2 bytes
  8956 ;; Hardware stack levels used:    1
  8957 ;; This function calls:
  8958 ;;		Nothing
  8959 ;; This function is called by:
  8960 ;;		_shutdown
  8961 ;;		_wakeup
  8962 ;; This function uses a non-reentrant model
  8963 ;;
  8964                           
  8965                           
  8966                           ;psect for function i1_TMR1_SetInterruptHandler
  8967  0ACB                     i1_TMR1_SetInterruptHandler:	
  8968                           
  8969                           ;tmr1.c: 172: TMR1_InterruptHandler = InterruptHandler;
  8970                           
  8971                           ;incstack = 0
  8972                           ; Regs used in i1_TMR1_SetInterruptHandler: [wreg]
  8973  0ACB  0871               	movf	i1TMR1_SetInterruptHandler@InterruptHandler+1,w
  8974  0ACC  0021               	movlb	1	; select bank1
  8975  0ACD  00C1               	movwf	(_TMR1_InterruptHandler+1)^(0+128)
  8976  0ACE  0870               	movf	i1TMR1_SetInterruptHandler@InterruptHandler,w
  8977  0ACF  00C0               	movwf	_TMR1_InterruptHandler^(0+128)
  8978  0AD0  0008               	return
  8979  0AD1                     __end_ofi1_TMR1_SetInterruptHandler:	
  8980                           
  8981                           	psect	text70
  8982  0B7F                     __ptext70:	
  8983 ;; *************** function _IOCBF3_ISR *****************
  8984 ;; Defined at:
  8985 ;;		line 272 in file "mcc_generated_files/pin_manager.c"
  8986 ;; Parameters:    Size  Location     Type
  8987 ;;		None
  8988 ;; Auto vars:     Size  Location     Type
  8989 ;;		None
  8990 ;; Return value:  Size  Location     Type
  8991 ;;                  1    wreg      void 
  8992 ;; Registers used:
  8993 ;;		wreg, status,2, status,0, pclath, cstack
  8994 ;; Tracked objects:
  8995 ;;		On entry : 0/0
  8996 ;;		On exit  : 0/0
  8997 ;;		Unchanged: 0/0
  8998 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8999 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9000 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9001 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9002 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9003 ;;Total ram usage:        0 bytes
  9004 ;; Hardware stack levels used:    1
  9005 ;; Hardware stack levels required when called:    1
  9006 ;; This function calls:
  9007 ;;		Absolute function
  9008 ;;		_IOCBF3_DefaultInterruptHandler
  9009 ;;		_displayToggleISR
  9010 ;; This function is called by:
  9011 ;;		_PIN_MANAGER_IOC
  9012 ;; This function uses a non-reentrant model
  9013 ;;
  9014                           
  9015                           
  9016                           ;psect for function _IOCBF3_ISR
  9017  0B7F                     _IOCBF3_ISR:	
  9018                           
  9019                           ;pin_manager.c: 277: if(IOCBF3_InterruptHandler)
  9020                           
  9021                           ;incstack = 0
  9022                           ; Regs used in _IOCBF3_ISR: [wreg+status,2+status,0+pclath+cstack]
  9023  0B7F  0021               	movlb	1	; select bank1
  9024  0B80  0836               	movf	_IOCBF3_InterruptHandler^(0+128),w
  9025  0B81  0437               	iorwf	(_IOCBF3_InterruptHandler+1)^(0+128),w
  9026  0B82  1903               	btfsc	3,2
  9027  0B83  2B89               	goto	i1l3472
  9028                           
  9029                           ;pin_manager.c: 278: {
  9030                           ;pin_manager.c: 279: IOCBF3_InterruptHandler();
  9031  0B84  0837               	movf	(_IOCBF3_InterruptHandler+1)^(0+128),w
  9032  0B85  008A               	movwf	10
  9033  0B86  0836               	movf	_IOCBF3_InterruptHandler^(0+128),w
  9034  0B87  000A               	callw
  9035  0B88  318B               	pagesel	$
  9036  0B89                     i1l3472:	
  9037                           
  9038                           ;pin_manager.c: 280: }
  9039                           ;pin_manager.c: 281: IOCBFbits.IOCBF3 = 0;
  9040  0B89  0027               	movlb	7	; select bank7
  9041  0B8A  1196               	bcf	22,3	;volatile
  9042  0B8B  0008               	return
  9043  0B8C                     __end_of_IOCBF3_ISR:	
  9044                           
  9045                           	psect	text71
  9046  0AAE                     __ptext71:	
  9047 ;; *************** function _IOCBF3_DefaultInterruptHandler *****************
  9048 ;; Defined at:
  9049 ;;		line 294 in file "mcc_generated_files/pin_manager.c"
  9050 ;; Parameters:    Size  Location     Type
  9051 ;;		None
  9052 ;; Auto vars:     Size  Location     Type
  9053 ;;		None
  9054 ;; Return value:  Size  Location     Type
  9055 ;;                  1    wreg      void 
  9056 ;; Registers used:
  9057 ;;		None
  9058 ;; Tracked objects:
  9059 ;;		On entry : 0/0
  9060 ;;		On exit  : 0/0
  9061 ;;		Unchanged: 0/0
  9062 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9063 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9064 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9065 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9066 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9067 ;;Total ram usage:        0 bytes
  9068 ;; Hardware stack levels used:    1
  9069 ;; This function calls:
  9070 ;;		Nothing
  9071 ;; This function is called by:
  9072 ;;		_PIN_MANAGER_Initialize
  9073 ;;		_IOCBF3_ISR
  9074 ;; This function uses a non-reentrant model
  9075 ;;
  9076                           
  9077                           
  9078                           ;psect for function _IOCBF3_DefaultInterruptHandler
  9079  0AAE                     _IOCBF3_DefaultInterruptHandler:	
  9080                           
  9081                           ;incstack = 0
  9082                           ; Regs used in _IOCBF3_DefaultInterruptHandler: []
  9083  0AAE  0008               	return
  9084  0AAF                     __end_of_IOCBF3_DefaultInterruptHandler:	
  9085                           
  9086                           	psect	text72
  9087  0DB0                     __ptext72:	
  9088 ;; *************** function _displayToggleISR *****************
  9089 ;; Defined at:
  9090 ;;		line 469 in file "clock_functions.c"
  9091 ;; Parameters:    Size  Location     Type
  9092 ;;		None
  9093 ;; Auto vars:     Size  Location     Type
  9094 ;;		None
  9095 ;; Return value:  Size  Location     Type
  9096 ;;                  1    wreg      void 
  9097 ;; Registers used:
  9098 ;;		status,0
  9099 ;; Tracked objects:
  9100 ;;		On entry : 0/0
  9101 ;;		On exit  : 0/0
  9102 ;;		Unchanged: 0/0
  9103 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9104 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9105 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9106 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9107 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9108 ;;Total ram usage:        0 bytes
  9109 ;; Hardware stack levels used:    1
  9110 ;; This function calls:
  9111 ;;		Nothing
  9112 ;; This function is called by:
  9113 ;;		_startup
  9114 ;;		_wakeup
  9115 ;;		_IOCBF3_ISR
  9116 ;; This function uses a non-reentrant model
  9117 ;;
  9118                           
  9119                           
  9120                           ;psect for function _displayToggleISR
  9121  0DB0                     _displayToggleISR:	
  9122                           
  9123                           ;clock_functions.c: 476: if (PORTBbits.RB3 == 0) {
  9124                           
  9125                           ;incstack = 0
  9126                           ; Regs used in _displayToggleISR: [status,0]
  9127  0DB0  0020               	movlb	0	; select bank0
  9128  0DB1  198D               	btfsc	13,3	;volatile
  9129  0DB2  0008               	return
  9130                           
  9131                           ;clock_functions.c: 479: if (LATAbits.LATA3 == 0) {
  9132  0DB3  0022               	movlb	2	; select bank2
  9133  0DB4  198C               	btfsc	12,3	;volatile
  9134  0DB5  2DCD               	goto	i1l637
  9135                           
  9136                           ;clock_functions.c: 481: LATAbits.LATA3 = !(PORTCbits.RC5);
  9137  0DB6  1003               	clrc
  9138  0DB7  0020               	movlb	0	; select bank0
  9139  0DB8  1E8E               	btfss	14,5	;volatile
  9140  0DB9  1403               	setc
  9141  0DBA  1C03               	btfss	3,0
  9142  0DBB  2DBF               	goto	u320_20
  9143  0DBC  0022               	movlb	2	; select bank2
  9144  0DBD  158C               	bsf	12,3	;volatile
  9145  0DBE  2DC1               	goto	i1l3444
  9146  0DBF                     u320_20:	
  9147  0DBF  0022               	movlb	2	; select bank2
  9148  0DC0  118C               	bcf	12,3	;volatile
  9149  0DC1                     i1l3444:	
  9150                           
  9151                           ;clock_functions.c: 482: LATEbits.LATE0 = 1;
  9152  0DC1  1410               	bsf	16,0	;volatile
  9153  0DC2                     i1l638:	
  9154                           ;clock_functions.c: 484: while (PORTAbits.RA2 == 0);
  9155                           
  9156  0DC2  0020               	movlb	0	; select bank0
  9157  0DC3  1D0C               	btfss	12,2	;volatile
  9158  0DC4  2DC2               	goto	i1l638
  9159                           
  9160                           ;clock_functions.c: 487: INTCONbits.TMR0IE = 1;
  9161  0DC5  168B               	bsf	11,5	;volatile
  9162                           
  9163                           ;clock_functions.c: 488: PIE1bits.TMR2IE = 1;
  9164  0DC6  0021               	movlb	1	; select bank1
  9165  0DC7  1491               	bsf	17,1	;volatile
  9166                           
  9167                           ;clock_functions.c: 490: IOCBNbits.IOCBN0 = 1;
  9168  0DC8  0027               	movlb	7	; select bank7
  9169  0DC9  1415               	bsf	21,0	;volatile
  9170                           
  9171                           ;clock_functions.c: 491: IOCBNbits.IOCBN1 = 1;
  9172  0DCA  1495               	bsf	21,1	;volatile
  9173                           
  9174                           ;clock_functions.c: 492: IOCBNbits.IOCBN2 = 1;
  9175  0DCB  1515               	bsf	21,2	;volatile
  9176                           
  9177                           ;clock_functions.c: 496: }
  9178  0DCC  0008               	return
  9179  0DCD                     i1l637:	
  9180                           
  9181                           ;clock_functions.c: 499: else {
  9182                           ;clock_functions.c: 501: LATAbits.LATA3 = 0;
  9183  0DCD  118C               	bcf	12,3	;volatile
  9184                           
  9185                           ;clock_functions.c: 502: LATEbits.LATE0 = 0;
  9186  0DCE  1010               	bcf	16,0	;volatile
  9187                           
  9188                           ;clock_functions.c: 505: INTCONbits.TMR0IE = 0;
  9189  0DCF  128B               	bcf	11,5	;volatile
  9190                           
  9191                           ;clock_functions.c: 506: PIE1bits.TMR2IE = 0;
  9192  0DD0  0021               	movlb	1	; select bank1
  9193  0DD1  1091               	bcf	17,1	;volatile
  9194                           
  9195                           ;clock_functions.c: 508: IOCBNbits.IOCBN0 = 0;
  9196  0DD2  0027               	movlb	7	; select bank7
  9197  0DD3  1015               	bcf	21,0	;volatile
  9198                           
  9199                           ;clock_functions.c: 509: IOCBNbits.IOCBN1 = 0;
  9200  0DD4  1095               	bcf	21,1	;volatile
  9201                           
  9202                           ;clock_functions.c: 510: IOCBNbits.IOCBN2 = 0;
  9203  0DD5  1115               	bcf	21,2	;volatile
  9204  0DD6  0008               	return
  9205  0DD7                     __end_of_displayToggleISR:	
  9206                           
  9207                           	psect	text73
  9208  0B72                     __ptext73:	
  9209 ;; *************** function _IOCBF2_ISR *****************
  9210 ;; Defined at:
  9211 ;;		line 242 in file "mcc_generated_files/pin_manager.c"
  9212 ;; Parameters:    Size  Location     Type
  9213 ;;		None
  9214 ;; Auto vars:     Size  Location     Type
  9215 ;;		None
  9216 ;; Return value:  Size  Location     Type
  9217 ;;                  1    wreg      void 
  9218 ;; Registers used:
  9219 ;;		wreg, status,2, status,0, pclath, cstack
  9220 ;; Tracked objects:
  9221 ;;		On entry : 0/0
  9222 ;;		On exit  : 0/0
  9223 ;;		Unchanged: 0/0
  9224 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9225 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9226 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9227 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9228 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9229 ;;Total ram usage:        0 bytes
  9230 ;; Hardware stack levels used:    1
  9231 ;; Hardware stack levels required when called:    3
  9232 ;; This function calls:
  9233 ;;		Absolute function
  9234 ;;		_IOCBF2_DefaultInterruptHandler
  9235 ;;		_setHoursISR
  9236 ;; This function is called by:
  9237 ;;		_PIN_MANAGER_IOC
  9238 ;; This function uses a non-reentrant model
  9239 ;;
  9240                           
  9241                           
  9242                           ;psect for function _IOCBF2_ISR
  9243  0B72                     _IOCBF2_ISR:	
  9244                           
  9245                           ;pin_manager.c: 247: if(IOCBF2_InterruptHandler)
  9246                           
  9247                           ;incstack = 0
  9248                           ; Regs used in _IOCBF2_ISR: [wreg+status,2+status,0+pclath+cstack]
  9249  0B72  0021               	movlb	1	; select bank1
  9250  0B73  0838               	movf	_IOCBF2_InterruptHandler^(0+128),w
  9251  0B74  0439               	iorwf	(_IOCBF2_InterruptHandler+1)^(0+128),w
  9252  0B75  1903               	btfsc	3,2
  9253  0B76  2B7C               	goto	i1l3466
  9254                           
  9255                           ;pin_manager.c: 248: {
  9256                           ;pin_manager.c: 249: IOCBF2_InterruptHandler();
  9257  0B77  0839               	movf	(_IOCBF2_InterruptHandler+1)^(0+128),w
  9258  0B78  008A               	movwf	10
  9259  0B79  0838               	movf	_IOCBF2_InterruptHandler^(0+128),w
  9260  0B7A  000A               	callw
  9261  0B7B  318B               	pagesel	$
  9262  0B7C                     i1l3466:	
  9263                           
  9264                           ;pin_manager.c: 250: }
  9265                           ;pin_manager.c: 251: IOCBFbits.IOCBF2 = 0;
  9266  0B7C  0027               	movlb	7	; select bank7
  9267  0B7D  1116               	bcf	22,2	;volatile
  9268  0B7E  0008               	return
  9269  0B7F                     __end_of_IOCBF2_ISR:	
  9270                           
  9271                           	psect	text74
  9272  0AAD                     __ptext74:	
  9273 ;; *************** function _IOCBF2_DefaultInterruptHandler *****************
  9274 ;; Defined at:
  9275 ;;		line 264 in file "mcc_generated_files/pin_manager.c"
  9276 ;; Parameters:    Size  Location     Type
  9277 ;;		None
  9278 ;; Auto vars:     Size  Location     Type
  9279 ;;		None
  9280 ;; Return value:  Size  Location     Type
  9281 ;;                  1    wreg      void 
  9282 ;; Registers used:
  9283 ;;		None
  9284 ;; Tracked objects:
  9285 ;;		On entry : 0/0
  9286 ;;		On exit  : 0/0
  9287 ;;		Unchanged: 0/0
  9288 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9289 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9290 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9291 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9292 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9293 ;;Total ram usage:        0 bytes
  9294 ;; Hardware stack levels used:    1
  9295 ;; This function calls:
  9296 ;;		Nothing
  9297 ;; This function is called by:
  9298 ;;		_PIN_MANAGER_Initialize
  9299 ;;		_IOCBF2_ISR
  9300 ;; This function uses a non-reentrant model
  9301 ;;
  9302                           
  9303                           
  9304                           ;psect for function _IOCBF2_DefaultInterruptHandler
  9305  0AAD                     _IOCBF2_DefaultInterruptHandler:	
  9306                           
  9307                           ;incstack = 0
  9308                           ; Regs used in _IOCBF2_DefaultInterruptHandler: []
  9309  0AAD  0008               	return
  9310  0AAE                     __end_of_IOCBF2_DefaultInterruptHandler:	
  9311                           
  9312                           	psect	text75
  9313  0D1E                     __ptext75:	
  9314 ;; *************** function _setHoursISR *****************
  9315 ;; Defined at:
  9316 ;;		line 386 in file "clock_functions.c"
  9317 ;; Parameters:    Size  Location     Type
  9318 ;;		None
  9319 ;; Auto vars:     Size  Location     Type
  9320 ;;		None
  9321 ;; Return value:  Size  Location     Type
  9322 ;;                  1    wreg      void 
  9323 ;; Registers used:
  9324 ;;		wreg, status,2, status,0, pclath, cstack
  9325 ;; Tracked objects:
  9326 ;;		On entry : 0/0
  9327 ;;		On exit  : 0/0
  9328 ;;		Unchanged: 0/0
  9329 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9330 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9331 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9332 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9333 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9334 ;;Total ram usage:        0 bytes
  9335 ;; Hardware stack levels used:    1
  9336 ;; Hardware stack levels required when called:    2
  9337 ;; This function calls:
  9338 ;;		_TMR1_StopTimer
  9339 ;;		_isolateDigits
  9340 ;;		_twentyFourParse
  9341 ;;		_updateDisplay
  9342 ;; This function is called by:
  9343 ;;		_startup
  9344 ;;		_wakeup
  9345 ;;		_IOCBF2_ISR
  9346 ;; This function uses a non-reentrant model
  9347 ;;
  9348                           
  9349                           
  9350                           ;psect for function _setHoursISR
  9351  0D1E                     _setHoursISR:	
  9352                           
  9353                           ;clock_functions.c: 393: if (PORTBbits.RB2 == 0) {
  9354                           
  9355                           ;incstack = 0
  9356                           ; Regs used in _setHoursISR: [wreg+status,2+status,0+pclath+cstack]
  9357  0D1E  0020               	movlb	0	; select bank0
  9358  0D1F  190D               	btfsc	13,2	;volatile
  9359  0D20  0008               	return
  9360                           
  9361                           ;clock_functions.c: 396: PIE1bits.TMR1IE = 0;
  9362  0D21  0021               	movlb	1	; select bank1
  9363  0D22  1011               	bcf	17,0	;volatile
  9364                           
  9365                           ;clock_functions.c: 399: LATCbits.LATC3 = 1;
  9366  0D23  0022               	movlb	2	; select bank2
  9367  0D24  158E               	bsf	14,3	;volatile
  9368                           
  9369                           ;clock_functions.c: 400: LATCbits.LATC4 = 1;
  9370  0D25  160E               	bsf	14,4	;volatile
  9371                           
  9372                           ;clock_functions.c: 403: IOCBNbits.IOCBN2 = 0;
  9373  0D26  0027               	movlb	7	; select bank7
  9374  0D27  1115               	bcf	21,2	;volatile
  9375                           
  9376                           ;clock_functions.c: 406: hours++;
  9377  0D28  3001               	movlw	1
  9378  0D29  0020               	movlb	0	; select bank0
  9379  0D2A  07E2               	addwf	_hours,f	;volatile
  9380  0D2B  3000               	movlw	0
  9381  0D2C  3DE3               	addwfc	_hours+1,f	;volatile
  9382                           
  9383                           ;clock_functions.c: 411: if (hours == 24) {
  9384  0D2D  3018               	movlw	24
  9385  0D2E  0662               	xorwf	_hours,w	;volatile
  9386  0D2F  0463               	iorwf	_hours+1,w	;volatile
  9387  0D30  1D03               	btfss	3,2
  9388  0D31  2D34               	goto	i1l3422
  9389                           
  9390                           ;clock_functions.c: 413: hours = 0;
  9391  0D32  01E2               	clrf	_hours	;volatile
  9392  0D33  01E3               	clrf	_hours+1	;volatile
  9393  0D34                     i1l3422:	
  9394                           
  9395                           ;clock_functions.c: 415: }
  9396                           ;clock_functions.c: 417: twentyFourParse();
  9397  0D34  318C  24FA  318D   	fcall	_twentyFourParse
  9398                           
  9399                           ;clock_functions.c: 418: isolateDigits();
  9400  0D37  3185  2543  318D   	fcall	_isolateDigits
  9401                           
  9402                           ;clock_functions.c: 419: updateDisplay();
  9403  0D3A  318D  2566  318D   	fcall	_updateDisplay
  9404                           
  9405                           ;clock_functions.c: 422: IOCBNbits.IOCBN2 = 1;
  9406  0D3D  0027               	movlb	7	; select bank7
  9407  0D3E  1515               	bsf	21,2	;volatile
  9408                           
  9409                           ;clock_functions.c: 426: TMR1_StopTimer();
  9410  0D3F  318A  22B1         	fcall	_TMR1_StopTimer
  9411  0D41  0008               	return
  9412  0D42                     __end_of_setHoursISR:	
  9413                           
  9414                           	psect	text76
  9415  0CFA                     __ptext76:	
  9416 ;; *************** function _twentyFourParse *****************
  9417 ;; Defined at:
  9418 ;;		line 593 in file "clock_functions.c"
  9419 ;; Parameters:    Size  Location     Type
  9420 ;;		None
  9421 ;; Auto vars:     Size  Location     Type
  9422 ;;		None
  9423 ;; Return value:  Size  Location     Type
  9424 ;;                  1    wreg      void 
  9425 ;; Registers used:
  9426 ;;		wreg, status,2, status,0
  9427 ;; Tracked objects:
  9428 ;;		On entry : 0/0
  9429 ;;		On exit  : 0/0
  9430 ;;		Unchanged: 0/0
  9431 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9432 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9433 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9434 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9435 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9436 ;;Total ram usage:        0 bytes
  9437 ;; Hardware stack levels used:    1
  9438 ;; This function calls:
  9439 ;;		Nothing
  9440 ;; This function is called by:
  9441 ;;		_tickISR
  9442 ;;		_setHoursISR
  9443 ;;		_wakeup
  9444 ;; This function uses a non-reentrant model
  9445 ;;
  9446                           
  9447                           
  9448                           ;psect for function _twentyFourParse
  9449  0CFA                     _twentyFourParse:	
  9450                           
  9451                           ;clock_functions.c: 600: if (PORTCbits.RC6 == 1) {
  9452                           
  9453                           ;incstack = 0
  9454                           ; Regs used in _twentyFourParse: [wreg+status,2+status,0]
  9455  0CFA  0020               	movlb	0	; select bank0
  9456  0CFB  1F0E               	btfss	14,6	;volatile
  9457  0CFC  2D19               	goto	i1l2986
  9458                           
  9459                           ;clock_functions.c: 603: if (hours == 0) {
  9460  0CFD  0862               	movf	_hours,w	;volatile
  9461  0CFE  0463               	iorwf	_hours+1,w	;volatile
  9462  0CFF  1D03               	btfss	3,2
  9463  0D00  2D06               	goto	i1l2980
  9464                           
  9465                           ;clock_functions.c: 605: display_hours = 12;
  9466  0D01  300C               	movlw	12
  9467  0D02  00E0               	movwf	_display_hours	;volatile
  9468  0D03  3000               	movlw	0
  9469  0D04  00E1               	movwf	_display_hours+1	;volatile
  9470                           
  9471                           ;clock_functions.c: 607: }
  9472  0D05  0008               	return
  9473  0D06                     i1l2980:	
  9474                           
  9475                           ;clock_functions.c: 610: else if (hours > 12) {
  9476  0D06  3000               	movlw	0
  9477  0D07  0263               	subwf	_hours+1,w	;volatile
  9478  0D08  300D               	movlw	13
  9479  0D09  1903               	skipnz
  9480  0D0A  0262               	subwf	_hours,w	;volatile
  9481  0D0B  1C03               	skipc
  9482  0D0C  2D14               	goto	i1l2984
  9483                           
  9484                           ;clock_functions.c: 612: display_hours = hours - 12;
  9485  0D0D  0862               	movf	_hours,w	;volatile
  9486  0D0E  3EF4               	addlw	244
  9487  0D0F  00E0               	movwf	_display_hours	;volatile
  9488  0D10  30FF               	movlw	255
  9489  0D11  3D63               	addwfc	_hours+1,w	;volatile
  9490  0D12  00E1               	movwf	_display_hours+1	;volatile
  9491                           
  9492                           ;clock_functions.c: 614: }
  9493  0D13  0008               	return
  9494  0D14                     i1l2984:	
  9495                           
  9496                           ;clock_functions.c: 617: else {
  9497                           ;clock_functions.c: 619: display_hours = hours;
  9498  0D14  0863               	movf	_hours+1,w	;volatile
  9499  0D15  00E1               	movwf	_display_hours+1	;volatile
  9500  0D16  0862               	movf	_hours,w	;volatile
  9501  0D17  00E0               	movwf	_display_hours	;volatile
  9502                           
  9503                           ;clock_functions.c: 621: }
  9504                           ;clock_functions.c: 623: }
  9505  0D18  0008               	return
  9506  0D19                     i1l2986:	
  9507                           
  9508                           ;clock_functions.c: 626: else {
  9509                           ;clock_functions.c: 628: display_hours = hours;
  9510  0D19  0863               	movf	_hours+1,w	;volatile
  9511  0D1A  00E1               	movwf	_display_hours+1	;volatile
  9512  0D1B  0862               	movf	_hours,w	;volatile
  9513  0D1C  00E0               	movwf	_display_hours	;volatile
  9514  0D1D  0008               	return
  9515  0D1E                     __end_of_twentyFourParse:	
  9516                           
  9517                           	psect	text77
  9518  0B65                     __ptext77:	
  9519 ;; *************** function _IOCBF1_ISR *****************
  9520 ;; Defined at:
  9521 ;;		line 212 in file "mcc_generated_files/pin_manager.c"
  9522 ;; Parameters:    Size  Location     Type
  9523 ;;		None
  9524 ;; Auto vars:     Size  Location     Type
  9525 ;;		None
  9526 ;; Return value:  Size  Location     Type
  9527 ;;                  1    wreg      void 
  9528 ;; Registers used:
  9529 ;;		wreg, status,2, status,0, pclath, cstack
  9530 ;; Tracked objects:
  9531 ;;		On entry : 0/0
  9532 ;;		On exit  : 0/0
  9533 ;;		Unchanged: 0/0
  9534 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9535 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9536 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9537 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9538 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9539 ;;Total ram usage:        0 bytes
  9540 ;; Hardware stack levels used:    1
  9541 ;; Hardware stack levels required when called:    3
  9542 ;; This function calls:
  9543 ;;		Absolute function
  9544 ;;		_IOCBF1_DefaultInterruptHandler
  9545 ;;		_setMinutesISR
  9546 ;; This function is called by:
  9547 ;;		_PIN_MANAGER_IOC
  9548 ;; This function uses a non-reentrant model
  9549 ;;
  9550                           
  9551                           
  9552                           ;psect for function _IOCBF1_ISR
  9553  0B65                     _IOCBF1_ISR:	
  9554                           
  9555                           ;pin_manager.c: 217: if(IOCBF1_InterruptHandler)
  9556                           
  9557                           ;incstack = 0
  9558                           ; Regs used in _IOCBF1_ISR: [wreg+status,2+status,0+pclath+cstack]
  9559  0B65  0021               	movlb	1	; select bank1
  9560  0B66  083A               	movf	_IOCBF1_InterruptHandler^(0+128),w
  9561  0B67  043B               	iorwf	(_IOCBF1_InterruptHandler+1)^(0+128),w
  9562  0B68  1903               	btfsc	3,2
  9563  0B69  2B6F               	goto	i1l3460
  9564                           
  9565                           ;pin_manager.c: 218: {
  9566                           ;pin_manager.c: 219: IOCBF1_InterruptHandler();
  9567  0B6A  083B               	movf	(_IOCBF1_InterruptHandler+1)^(0+128),w
  9568  0B6B  008A               	movwf	10
  9569  0B6C  083A               	movf	_IOCBF1_InterruptHandler^(0+128),w
  9570  0B6D  000A               	callw
  9571  0B6E  318B               	pagesel	$
  9572  0B6F                     i1l3460:	
  9573                           
  9574                           ;pin_manager.c: 220: }
  9575                           ;pin_manager.c: 221: IOCBFbits.IOCBF1 = 0;
  9576  0B6F  0027               	movlb	7	; select bank7
  9577  0B70  1096               	bcf	22,1	;volatile
  9578  0B71  0008               	return
  9579  0B72                     __end_of_IOCBF1_ISR:	
  9580                           
  9581                           	psect	text78
  9582  0AAC                     __ptext78:	
  9583 ;; *************** function _IOCBF1_DefaultInterruptHandler *****************
  9584 ;; Defined at:
  9585 ;;		line 234 in file "mcc_generated_files/pin_manager.c"
  9586 ;; Parameters:    Size  Location     Type
  9587 ;;		None
  9588 ;; Auto vars:     Size  Location     Type
  9589 ;;		None
  9590 ;; Return value:  Size  Location     Type
  9591 ;;                  1    wreg      void 
  9592 ;; Registers used:
  9593 ;;		None
  9594 ;; Tracked objects:
  9595 ;;		On entry : 0/0
  9596 ;;		On exit  : 0/0
  9597 ;;		Unchanged: 0/0
  9598 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9599 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9600 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9601 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9602 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9603 ;;Total ram usage:        0 bytes
  9604 ;; Hardware stack levels used:    1
  9605 ;; This function calls:
  9606 ;;		Nothing
  9607 ;; This function is called by:
  9608 ;;		_PIN_MANAGER_Initialize
  9609 ;;		_IOCBF1_ISR
  9610 ;; This function uses a non-reentrant model
  9611 ;;
  9612                           
  9613                           
  9614                           ;psect for function _IOCBF1_DefaultInterruptHandler
  9615  0AAC                     _IOCBF1_DefaultInterruptHandler:	
  9616                           
  9617                           ;incstack = 0
  9618                           ; Regs used in _IOCBF1_DefaultInterruptHandler: []
  9619  0AAC  0008               	return
  9620  0AAD                     __end_of_IOCBF1_DefaultInterruptHandler:	
  9621                           
  9622                           	psect	text79
  9623  0CD9                     __ptext79:	
  9624 ;; *************** function _setMinutesISR *****************
  9625 ;; Defined at:
  9626 ;;		line 333 in file "clock_functions.c"
  9627 ;; Parameters:    Size  Location     Type
  9628 ;;		None
  9629 ;; Auto vars:     Size  Location     Type
  9630 ;;		None
  9631 ;; Return value:  Size  Location     Type
  9632 ;;                  1    wreg      void 
  9633 ;; Registers used:
  9634 ;;		wreg, status,2, status,0, pclath, cstack
  9635 ;; Tracked objects:
  9636 ;;		On entry : 0/0
  9637 ;;		On exit  : 0/0
  9638 ;;		Unchanged: 0/0
  9639 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9640 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9641 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9642 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9643 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9644 ;;Total ram usage:        0 bytes
  9645 ;; Hardware stack levels used:    1
  9646 ;; Hardware stack levels required when called:    2
  9647 ;; This function calls:
  9648 ;;		_TMR1_StopTimer
  9649 ;;		_isolateDigits
  9650 ;;		_updateDisplay
  9651 ;; This function is called by:
  9652 ;;		_startup
  9653 ;;		_wakeup
  9654 ;;		_IOCBF1_ISR
  9655 ;; This function uses a non-reentrant model
  9656 ;;
  9657                           
  9658                           
  9659                           ;psect for function _setMinutesISR
  9660  0CD9                     _setMinutesISR:	
  9661                           
  9662                           ;clock_functions.c: 340: if (PORTBbits.RB1 == 0) {
  9663                           
  9664                           ;incstack = 0
  9665                           ; Regs used in _setMinutesISR: [wreg+status,2+status,0+pclath+cstack]
  9666  0CD9  0020               	movlb	0	; select bank0
  9667  0CDA  188D               	btfsc	13,1	;volatile
  9668  0CDB  0008               	return
  9669                           
  9670                           ;clock_functions.c: 343: PIE1bits.TMR1IE = 0;
  9671  0CDC  0021               	movlb	1	; select bank1
  9672  0CDD  1011               	bcf	17,0	;volatile
  9673                           
  9674                           ;clock_functions.c: 346: LATCbits.LATC3 = 1;
  9675  0CDE  0022               	movlb	2	; select bank2
  9676  0CDF  158E               	bsf	14,3	;volatile
  9677                           
  9678                           ;clock_functions.c: 347: LATCbits.LATC4 = 1;
  9679  0CE0  160E               	bsf	14,4	;volatile
  9680                           
  9681                           ;clock_functions.c: 350: IOCBNbits.IOCBN1 = 0;
  9682  0CE1  0027               	movlb	7	; select bank7
  9683  0CE2  1095               	bcf	21,1	;volatile
  9684                           
  9685                           ;clock_functions.c: 353: minutes++;
  9686  0CE3  3001               	movlw	1
  9687  0CE4  0020               	movlb	0	; select bank0
  9688  0CE5  07E4               	addwf	_minutes,f	;volatile
  9689  0CE6  3000               	movlw	0
  9690  0CE7  3DE5               	addwfc	_minutes+1,f	;volatile
  9691                           
  9692                           ;clock_functions.c: 358: if (minutes == 60) {
  9693  0CE8  303C               	movlw	60
  9694  0CE9  0664               	xorwf	_minutes,w	;volatile
  9695  0CEA  0465               	iorwf	_minutes+1,w	;volatile
  9696  0CEB  1D03               	btfss	3,2
  9697  0CEC  2CEF               	goto	i1l3404
  9698                           
  9699                           ;clock_functions.c: 360: minutes = 0;
  9700  0CED  01E4               	clrf	_minutes	;volatile
  9701  0CEE  01E5               	clrf	_minutes+1	;volatile
  9702  0CEF                     i1l3404:	
  9703                           
  9704                           ;clock_functions.c: 362: }
  9705                           ;clock_functions.c: 364: isolateDigits();
  9706  0CEF  3185  2543  318C   	fcall	_isolateDigits
  9707                           
  9708                           ;clock_functions.c: 365: updateDisplay();
  9709  0CF2  318D  2566  318C   	fcall	_updateDisplay
  9710                           
  9711                           ;clock_functions.c: 368: IOCBNbits.IOCBN1 = 1;
  9712  0CF5  0027               	movlb	7	; select bank7
  9713  0CF6  1495               	bsf	21,1	;volatile
  9714                           
  9715                           ;clock_functions.c: 372: TMR1_StopTimer();
  9716  0CF7  318A  22B1         	fcall	_TMR1_StopTimer
  9717  0CF9  0008               	return
  9718  0CFA                     __end_of_setMinutesISR:	
  9719                           
  9720                           	psect	text80
  9721  0B58                     __ptext80:	
  9722 ;; *************** function _IOCBF0_ISR *****************
  9723 ;; Defined at:
  9724 ;;		line 182 in file "mcc_generated_files/pin_manager.c"
  9725 ;; Parameters:    Size  Location     Type
  9726 ;;		None
  9727 ;; Auto vars:     Size  Location     Type
  9728 ;;		None
  9729 ;; Return value:  Size  Location     Type
  9730 ;;                  1    wreg      void 
  9731 ;; Registers used:
  9732 ;;		wreg, status,2, status,0, pclath, cstack
  9733 ;; Tracked objects:
  9734 ;;		On entry : 0/0
  9735 ;;		On exit  : 0/0
  9736 ;;		Unchanged: 0/0
  9737 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9738 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9739 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9740 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9741 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9742 ;;Total ram usage:        0 bytes
  9743 ;; Hardware stack levels used:    1
  9744 ;; Hardware stack levels required when called:    3
  9745 ;; This function calls:
  9746 ;;		Absolute function
  9747 ;;		_IOCBF0_DefaultInterruptHandler
  9748 ;;		_setSecondsISR
  9749 ;; This function is called by:
  9750 ;;		_PIN_MANAGER_IOC
  9751 ;; This function uses a non-reentrant model
  9752 ;;
  9753                           
  9754                           
  9755                           ;psect for function _IOCBF0_ISR
  9756  0B58                     _IOCBF0_ISR:	
  9757                           
  9758                           ;pin_manager.c: 187: if(IOCBF0_InterruptHandler)
  9759                           
  9760                           ;incstack = 0
  9761                           ; Regs used in _IOCBF0_ISR: [wreg+status,2+status,0+pclath+cstack]
  9762  0B58  0021               	movlb	1	; select bank1
  9763  0B59  083C               	movf	_IOCBF0_InterruptHandler^(0+128),w
  9764  0B5A  043D               	iorwf	(_IOCBF0_InterruptHandler+1)^(0+128),w
  9765  0B5B  1903               	btfsc	3,2
  9766  0B5C  2B62               	goto	i1l3454
  9767                           
  9768                           ;pin_manager.c: 188: {
  9769                           ;pin_manager.c: 189: IOCBF0_InterruptHandler();
  9770  0B5D  083D               	movf	(_IOCBF0_InterruptHandler+1)^(0+128),w
  9771  0B5E  008A               	movwf	10
  9772  0B5F  083C               	movf	_IOCBF0_InterruptHandler^(0+128),w
  9773  0B60  000A               	callw
  9774  0B61  318B               	pagesel	$
  9775  0B62                     i1l3454:	
  9776                           
  9777                           ;pin_manager.c: 190: }
  9778                           ;pin_manager.c: 191: IOCBFbits.IOCBF0 = 0;
  9779  0B62  0027               	movlb	7	; select bank7
  9780  0B63  1016               	bcf	22,0	;volatile
  9781  0B64  0008               	return
  9782  0B65                     __end_of_IOCBF0_ISR:	
  9783                           
  9784                           	psect	text81
  9785  0AAB                     __ptext81:	
  9786 ;; *************** function _IOCBF0_DefaultInterruptHandler *****************
  9787 ;; Defined at:
  9788 ;;		line 204 in file "mcc_generated_files/pin_manager.c"
  9789 ;; Parameters:    Size  Location     Type
  9790 ;;		None
  9791 ;; Auto vars:     Size  Location     Type
  9792 ;;		None
  9793 ;; Return value:  Size  Location     Type
  9794 ;;                  1    wreg      void 
  9795 ;; Registers used:
  9796 ;;		None
  9797 ;; Tracked objects:
  9798 ;;		On entry : 0/0
  9799 ;;		On exit  : 0/0
  9800 ;;		Unchanged: 0/0
  9801 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9802 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9803 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9804 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9805 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9806 ;;Total ram usage:        0 bytes
  9807 ;; Hardware stack levels used:    1
  9808 ;; This function calls:
  9809 ;;		Nothing
  9810 ;; This function is called by:
  9811 ;;		_PIN_MANAGER_Initialize
  9812 ;;		_IOCBF0_ISR
  9813 ;; This function uses a non-reentrant model
  9814 ;;
  9815                           
  9816                           
  9817                           ;psect for function _IOCBF0_DefaultInterruptHandler
  9818  0AAB                     _IOCBF0_DefaultInterruptHandler:	
  9819                           
  9820                           ;incstack = 0
  9821                           ; Regs used in _IOCBF0_DefaultInterruptHandler: []
  9822  0AAB  0008               	return
  9823  0AAC                     __end_of_IOCBF0_DefaultInterruptHandler:	
  9824                           
  9825                           	psect	text82
  9826  0CB8                     __ptext82:	
  9827 ;; *************** function _setSecondsISR *****************
  9828 ;; Defined at:
  9829 ;;		line 282 in file "clock_functions.c"
  9830 ;; Parameters:    Size  Location     Type
  9831 ;;		None
  9832 ;; Auto vars:     Size  Location     Type
  9833 ;;		None
  9834 ;; Return value:  Size  Location     Type
  9835 ;;                  1    wreg      void 
  9836 ;; Registers used:
  9837 ;;		wreg, status,2, status,0, pclath, cstack
  9838 ;; Tracked objects:
  9839 ;;		On entry : 0/0
  9840 ;;		On exit  : 0/0
  9841 ;;		Unchanged: 0/0
  9842 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9843 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9844 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9845 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9846 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9847 ;;Total ram usage:        0 bytes
  9848 ;; Hardware stack levels used:    1
  9849 ;; Hardware stack levels required when called:    2
  9850 ;; This function calls:
  9851 ;;		_TMR1_StopTimer
  9852 ;;		_isolateDigits
  9853 ;;		_updateDisplay
  9854 ;; This function is called by:
  9855 ;;		_startup
  9856 ;;		_wakeup
  9857 ;;		_IOCBF0_ISR
  9858 ;; This function uses a non-reentrant model
  9859 ;;
  9860                           
  9861                           
  9862                           ;psect for function _setSecondsISR
  9863  0CB8                     _setSecondsISR:	
  9864                           
  9865                           ;clock_functions.c: 289: if (PORTBbits.RB0 == 0) {
  9866                           
  9867                           ;incstack = 0
  9868                           ; Regs used in _setSecondsISR: [wreg+status,2+status,0+pclath+cstack]
  9869  0CB8  0020               	movlb	0	; select bank0
  9870  0CB9  180D               	btfsc	13,0	;volatile
  9871  0CBA  0008               	return
  9872                           
  9873                           ;clock_functions.c: 292: PIE1bits.TMR1IE = 0;
  9874  0CBB  0021               	movlb	1	; select bank1
  9875  0CBC  1011               	bcf	17,0	;volatile
  9876                           
  9877                           ;clock_functions.c: 295: LATCbits.LATC3 = 1;
  9878  0CBD  0022               	movlb	2	; select bank2
  9879  0CBE  158E               	bsf	14,3	;volatile
  9880                           
  9881                           ;clock_functions.c: 296: LATCbits.LATC4 = 1;
  9882  0CBF  160E               	bsf	14,4	;volatile
  9883                           
  9884                           ;clock_functions.c: 299: IOCBNbits.IOCBN0 = 0;
  9885  0CC0  0027               	movlb	7	; select bank7
  9886  0CC1  1015               	bcf	21,0	;volatile
  9887                           
  9888                           ;clock_functions.c: 302: seconds++;
  9889  0CC2  3001               	movlw	1
  9890  0CC3  0020               	movlb	0	; select bank0
  9891  0CC4  07E6               	addwf	_seconds,f	;volatile
  9892  0CC5  3000               	movlw	0
  9893  0CC6  3DE7               	addwfc	_seconds+1,f	;volatile
  9894                           
  9895                           ;clock_functions.c: 307: if (seconds == 60) {
  9896  0CC7  303C               	movlw	60
  9897  0CC8  0666               	xorwf	_seconds,w	;volatile
  9898  0CC9  0467               	iorwf	_seconds+1,w	;volatile
  9899  0CCA  1D03               	btfss	3,2
  9900  0CCB  2CCE               	goto	i1l3386
  9901                           
  9902                           ;clock_functions.c: 309: seconds = 0;
  9903  0CCC  01E6               	clrf	_seconds	;volatile
  9904  0CCD  01E7               	clrf	_seconds+1	;volatile
  9905  0CCE                     i1l3386:	
  9906                           
  9907                           ;clock_functions.c: 311: }
  9908                           ;clock_functions.c: 313: isolateDigits();
  9909  0CCE  3185  2543  318C   	fcall	_isolateDigits
  9910                           
  9911                           ;clock_functions.c: 314: updateDisplay();
  9912  0CD1  318D  2566  318C   	fcall	_updateDisplay
  9913                           
  9914                           ;clock_functions.c: 317: IOCBNbits.IOCBN0 = 1;
  9915  0CD4  0027               	movlb	7	; select bank7
  9916  0CD5  1415               	bsf	21,0	;volatile
  9917                           
  9918                           ;clock_functions.c: 321: TMR1_StopTimer();
  9919  0CD6  318A  22B1         	fcall	_TMR1_StopTimer
  9920  0CD8  0008               	return
  9921  0CD9                     __end_of_setSecondsISR:	
  9922                           
  9923                           	psect	text83
  9924  0D66                     __ptext83:	
  9925 ;; *************** function _updateDisplay *****************
  9926 ;; Defined at:
  9927 ;;		line 704 in file "clock_functions.c"
  9928 ;; Parameters:    Size  Location     Type
  9929 ;;		None
  9930 ;; Auto vars:     Size  Location     Type
  9931 ;;		None
  9932 ;; Return value:  Size  Location     Type
  9933 ;;                  1    wreg      void 
  9934 ;; Registers used:
  9935 ;;		wreg
  9936 ;; Tracked objects:
  9937 ;;		On entry : 0/0
  9938 ;;		On exit  : 0/0
  9939 ;;		Unchanged: 0/0
  9940 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9941 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9942 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9943 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9944 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9945 ;;Total ram usage:        0 bytes
  9946 ;; Hardware stack levels used:    1
  9947 ;; This function calls:
  9948 ;;		Nothing
  9949 ;; This function is called by:
  9950 ;;		_tickISR
  9951 ;;		_setSecondsISR
  9952 ;;		_setMinutesISR
  9953 ;;		_setHoursISR
  9954 ;;		_wakeup
  9955 ;; This function uses a non-reentrant model
  9956 ;;
  9957                           
  9958                           
  9959                           ;psect for function _updateDisplay
  9960  0D66                     _updateDisplay:	
  9961                           
  9962                           ;clock_functions.c: 710: mux_numeral[0] = seconds_LSD;
  9963                           
  9964                           ;incstack = 0
  9965                           ; Regs used in _updateDisplay: [wreg]
  9966  0D66  0020               	movlb	0	; select bank0
  9967  0D67  085F               	movf	_seconds_LSD+1,w	;volatile
  9968  0D68  0021               	movlb	1	; select bank1
  9969  0D69  00A1               	movwf	(_mux_numeral+1)^(0+128)	;volatile
  9970  0D6A  0020               	movlb	0	; select bank0
  9971  0D6B  085E               	movf	_seconds_LSD,w	;volatile
  9972  0D6C  0021               	movlb	1	; select bank1
  9973  0D6D  00A0               	movwf	_mux_numeral^(0+128)	;volatile
  9974                           
  9975                           ;clock_functions.c: 711: mux_numeral[1] = seconds_MSD;
  9976  0D6E  0020               	movlb	0	; select bank0
  9977  0D6F  085D               	movf	_seconds_MSD+1,w	;volatile
  9978  0D70  0021               	movlb	1	; select bank1
  9979  0D71  00A3               	movwf	((_mux_numeral+1)^(0+128)+2)	;volatile
  9980  0D72  0020               	movlb	0	; select bank0
  9981  0D73  085C               	movf	_seconds_MSD,w	;volatile
  9982  0D74  0021               	movlb	1	; select bank1
  9983  0D75  00A2               	movwf	(_mux_numeral^(0+128)+2)	;volatile
  9984                           
  9985                           ;clock_functions.c: 712: mux_numeral[2] = minutes_LSD;
  9986  0D76  0020               	movlb	0	; select bank0
  9987  0D77  085B               	movf	_minutes_LSD+1,w	;volatile
  9988  0D78  0021               	movlb	1	; select bank1
  9989  0D79  00A5               	movwf	((_mux_numeral+1)^(0+128)+4)	;volatile
  9990  0D7A  0020               	movlb	0	; select bank0
  9991  0D7B  085A               	movf	_minutes_LSD,w	;volatile
  9992  0D7C  0021               	movlb	1	; select bank1
  9993  0D7D  00A4               	movwf	(_mux_numeral^(0+128)+4)	;volatile
  9994                           
  9995                           ;clock_functions.c: 713: mux_numeral[3] = minutes_MSD;
  9996  0D7E  0833               	movf	(_minutes_MSD+1)^(0+128),w	;volatile
  9997  0D7F  00A7               	movwf	((_mux_numeral+1)^(0+128)+6)	;volatile
  9998  0D80  0832               	movf	_minutes_MSD^(0+128),w	;volatile
  9999  0D81  00A6               	movwf	(_mux_numeral^(0+128)+6)	;volatile
 10000                           
 10001                           ;clock_functions.c: 714: mux_numeral[4] = hours_LSD;
 10002  0D82  0831               	movf	(_hours_LSD+1)^(0+128),w	;volatile
 10003  0D83  00A9               	movwf	((_mux_numeral+1)^(0+128)+8)	;volatile
 10004  0D84  0830               	movf	_hours_LSD^(0+128),w	;volatile
 10005  0D85  00A8               	movwf	(_mux_numeral^(0+128)+8)	;volatile
 10006                           
 10007                           ;clock_functions.c: 715: mux_numeral[5] = hours_MSD;
 10008  0D86  082F               	movf	(_hours_MSD+1)^(0+128),w	;volatile
 10009  0D87  00AB               	movwf	((_mux_numeral+1)^(0+128)+10)	;volatile
 10010  0D88  082E               	movf	_hours_MSD^(0+128),w	;volatile
 10011  0D89  00AA               	movwf	(_mux_numeral^(0+128)+10)	;volatile
 10012  0D8A  0008               	return
 10013  0D8B                     __end_of_updateDisplay:	
 10014                           
 10015                           	psect	text84
 10016  0543                     __ptext84:	
 10017 ;; *************** function _isolateDigits *****************
 10018 ;; Defined at:
 10019 ;;		line 679 in file "clock_functions.c"
 10020 ;; Parameters:    Size  Location     Type
 10021 ;;		None
 10022 ;; Auto vars:     Size  Location     Type
 10023 ;;		None
 10024 ;; Return value:  Size  Location     Type
 10025 ;;                  1    wreg      void 
 10026 ;; Registers used:
 10027 ;;		wreg, status,2, status,0, pclath, cstack
 10028 ;; Tracked objects:
 10029 ;;		On entry : 0/0
 10030 ;;		On exit  : 0/0
 10031 ;;		Unchanged: 0/0
 10032 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10033 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10034 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10035 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10036 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10037 ;;Total ram usage:        0 bytes
 10038 ;; Hardware stack levels used:    1
 10039 ;; Hardware stack levels required when called:    1
 10040 ;; This function calls:
 10041 ;;		___lwdiv
 10042 ;;		___lwmod
 10043 ;; This function is called by:
 10044 ;;		_tickISR
 10045 ;;		_setSecondsISR
 10046 ;;		_setMinutesISR
 10047 ;;		_setHoursISR
 10048 ;;		_wakeup
 10049 ;; This function uses a non-reentrant model
 10050 ;;
 10051                           
 10052                           
 10053                           ;psect for function _isolateDigits
 10054  0543                     _isolateDigits:	
 10055                           
 10056                           ;clock_functions.c: 685: seconds_LSD = seconds%10;
 10057                           
 10058                           ;incstack = 0
 10059                           ; Regs used in _isolateDigits: [wreg+status,2+status,0+pclath+cstack]
 10060  0543  300A               	movlw	10
 10061  0544  00F8               	movwf	___lwmod@divisor
 10062  0545  3000               	movlw	0
 10063  0546  00F9               	movwf	___lwmod@divisor+1
 10064  0547  0020               	movlb	0	; select bank0
 10065  0548  0867               	movf	_seconds+1,w	;volatile
 10066  0549  00FB               	movwf	___lwmod@dividend+1
 10067  054A  0866               	movf	_seconds,w	;volatile
 10068  054B  00FA               	movwf	___lwmod@dividend
 10069  054C  3187  27D3  3185   	fcall	___lwmod
 10070  054F  0879               	movf	?___lwmod+1,w
 10071  0550  0020               	movlb	0	; select bank0
 10072  0551  00DF               	movwf	_seconds_LSD+1	;volatile
 10073  0552  0878               	movf	?___lwmod,w
 10074  0553  00DE               	movwf	_seconds_LSD	;volatile
 10075                           
 10076                           ;clock_functions.c: 686: seconds_MSD = (seconds/10)%10;
 10077  0554  300A               	movlw	10
 10078  0555  00F8               	movwf	___lwmod@divisor
 10079  0556  3000               	movlw	0
 10080  0557  00F9               	movwf	___lwmod@divisor+1
 10081  0558  300A               	movlw	10
 10082  0559  00F0               	movwf	___lwdiv@divisor
 10083  055A  3000               	movlw	0
 10084  055B  00F1               	movwf	___lwdiv@divisor+1
 10085  055C  0867               	movf	_seconds+1,w	;volatile
 10086  055D  00F3               	movwf	___lwdiv@dividend+1
 10087  055E  0866               	movf	_seconds,w	;volatile
 10088  055F  00F2               	movwf	___lwdiv@dividend
 10089  0560  318D  25D7  3185   	fcall	___lwdiv
 10090  0563  0871               	movf	?___lwdiv+1,w
 10091  0564  00FB               	movwf	___lwmod@dividend+1
 10092  0565  0870               	movf	?___lwdiv,w
 10093  0566  00FA               	movwf	___lwmod@dividend
 10094  0567  3187  27D3  3185   	fcall	___lwmod
 10095  056A  0879               	movf	?___lwmod+1,w
 10096  056B  0020               	movlb	0	; select bank0
 10097  056C  00DD               	movwf	_seconds_MSD+1	;volatile
 10098  056D  0878               	movf	?___lwmod,w
 10099  056E  00DC               	movwf	_seconds_MSD	;volatile
 10100                           
 10101                           ;clock_functions.c: 688: minutes_LSD = minutes%10;
 10102  056F  300A               	movlw	10
 10103  0570  00F8               	movwf	___lwmod@divisor
 10104  0571  3000               	movlw	0
 10105  0572  00F9               	movwf	___lwmod@divisor+1
 10106  0573  0865               	movf	_minutes+1,w	;volatile
 10107  0574  00FB               	movwf	___lwmod@dividend+1
 10108  0575  0864               	movf	_minutes,w	;volatile
 10109  0576  00FA               	movwf	___lwmod@dividend
 10110  0577  3187  27D3  3185   	fcall	___lwmod
 10111  057A  0879               	movf	?___lwmod+1,w
 10112  057B  0020               	movlb	0	; select bank0
 10113  057C  00DB               	movwf	_minutes_LSD+1	;volatile
 10114  057D  0878               	movf	?___lwmod,w
 10115  057E  00DA               	movwf	_minutes_LSD	;volatile
 10116                           
 10117                           ;clock_functions.c: 689: minutes_MSD = (minutes/10)%10;
 10118  057F  300A               	movlw	10
 10119  0580  00F8               	movwf	___lwmod@divisor
 10120  0581  3000               	movlw	0
 10121  0582  00F9               	movwf	___lwmod@divisor+1
 10122  0583  300A               	movlw	10
 10123  0584  00F0               	movwf	___lwdiv@divisor
 10124  0585  3000               	movlw	0
 10125  0586  00F1               	movwf	___lwdiv@divisor+1
 10126  0587  0865               	movf	_minutes+1,w	;volatile
 10127  0588  00F3               	movwf	___lwdiv@dividend+1
 10128  0589  0864               	movf	_minutes,w	;volatile
 10129  058A  00F2               	movwf	___lwdiv@dividend
 10130  058B  318D  25D7  3185   	fcall	___lwdiv
 10131  058E  0871               	movf	?___lwdiv+1,w
 10132  058F  00FB               	movwf	___lwmod@dividend+1
 10133  0590  0870               	movf	?___lwdiv,w
 10134  0591  00FA               	movwf	___lwmod@dividend
 10135  0592  3187  27D3  3185   	fcall	___lwmod
 10136  0595  0879               	movf	?___lwmod+1,w
 10137  0596  0021               	movlb	1	; select bank1
 10138  0597  00B3               	movwf	(_minutes_MSD+1)^(0+128)	;volatile
 10139  0598  0878               	movf	?___lwmod,w
 10140  0599  00B2               	movwf	_minutes_MSD^(0+128)	;volatile
 10141                           
 10142                           ;clock_functions.c: 691: hours_LSD = display_hours%10;
 10143  059A  300A               	movlw	10
 10144  059B  00F8               	movwf	___lwmod@divisor
 10145  059C  3000               	movlw	0
 10146  059D  00F9               	movwf	___lwmod@divisor+1
 10147  059E  0020               	movlb	0	; select bank0
 10148  059F  0861               	movf	_display_hours+1,w	;volatile
 10149  05A0  00FB               	movwf	___lwmod@dividend+1
 10150  05A1  0860               	movf	_display_hours,w	;volatile
 10151  05A2  00FA               	movwf	___lwmod@dividend
 10152  05A3  3187  27D3  3185   	fcall	___lwmod
 10153  05A6  0879               	movf	?___lwmod+1,w
 10154  05A7  0021               	movlb	1	; select bank1
 10155  05A8  00B1               	movwf	(_hours_LSD+1)^(0+128)	;volatile
 10156  05A9  0878               	movf	?___lwmod,w
 10157  05AA  00B0               	movwf	_hours_LSD^(0+128)	;volatile
 10158                           
 10159                           ;clock_functions.c: 692: hours_MSD = (display_hours/10)%10;
 10160  05AB  300A               	movlw	10
 10161  05AC  00F8               	movwf	___lwmod@divisor
 10162  05AD  3000               	movlw	0
 10163  05AE  00F9               	movwf	___lwmod@divisor+1
 10164  05AF  300A               	movlw	10
 10165  05B0  00F0               	movwf	___lwdiv@divisor
 10166  05B1  3000               	movlw	0
 10167  05B2  00F1               	movwf	___lwdiv@divisor+1
 10168  05B3  0020               	movlb	0	; select bank0
 10169  05B4  0861               	movf	_display_hours+1,w	;volatile
 10170  05B5  00F3               	movwf	___lwdiv@dividend+1
 10171  05B6  0860               	movf	_display_hours,w	;volatile
 10172  05B7  00F2               	movwf	___lwdiv@dividend
 10173  05B8  318D  25D7  3185   	fcall	___lwdiv
 10174  05BB  0871               	movf	?___lwdiv+1,w
 10175  05BC  00FB               	movwf	___lwmod@dividend+1
 10176  05BD  0870               	movf	?___lwdiv,w
 10177  05BE  00FA               	movwf	___lwmod@dividend
 10178  05BF  3187  27D3         	fcall	___lwmod
 10179  05C1  0879               	movf	?___lwmod+1,w
 10180  05C2  0021               	movlb	1	; select bank1
 10181  05C3  00AF               	movwf	(_hours_MSD+1)^(0+128)	;volatile
 10182  05C4  0878               	movf	?___lwmod,w
 10183  05C5  00AE               	movwf	_hours_MSD^(0+128)	;volatile
 10184  05C6  0008               	return
 10185  05C7                     __end_of_isolateDigits:	
 10186                           
 10187                           	psect	text85
 10188  07D3                     __ptext85:	
 10189 ;; *************** function ___lwmod *****************
 10190 ;; Defined at:
 10191 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lwmod.c"
 10192 ;; Parameters:    Size  Location     Type
 10193 ;;  divisor         2    8[COMMON] unsigned int 
 10194 ;;  dividend        2   10[COMMON] unsigned int 
 10195 ;; Auto vars:     Size  Location     Type
 10196 ;;  counter         1   13[COMMON] unsigned char 
 10197 ;; Return value:  Size  Location     Type
 10198 ;;                  2    8[COMMON] unsigned int 
 10199 ;; Registers used:
 10200 ;;		wreg, status,2, status,0
 10201 ;; Tracked objects:
 10202 ;;		On entry : 0/0
 10203 ;;		On exit  : 0/0
 10204 ;;		Unchanged: 0/0
 10205 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10206 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10207 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10208 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10209 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10210 ;;Total ram usage:        6 bytes
 10211 ;; Hardware stack levels used:    1
 10212 ;; This function calls:
 10213 ;;		Nothing
 10214 ;; This function is called by:
 10215 ;;		_isolateDigits
 10216 ;; This function uses a non-reentrant model
 10217 ;;
 10218                           
 10219                           
 10220                           ;psect for function ___lwmod
 10221  07D3                     ___lwmod:	
 10222                           
 10223                           ;incstack = 0
 10224                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
 10225  07D3  0878               	movf	___lwmod@divisor,w
 10226  07D4  0479               	iorwf	___lwmod@divisor+1,w
 10227  07D5  1903               	btfsc	3,2
 10228  07D6  2FFA               	goto	i1l2970
 10229  07D7  01FD               	clrf	___lwmod@counter
 10230  07D8  0AFD               	incf	___lwmod@counter,f
 10231  07D9                     i1l2960:	
 10232  07D9  1BF9               	btfsc	___lwmod@divisor+1,7
 10233  07DA  2FE5               	goto	i1l2962
 10234  07DB  3001               	movlw	1
 10235  07DC                     u292_25:	
 10236  07DC  35F8               	lslf	___lwmod@divisor,f
 10237  07DD  0DF9               	rlf	___lwmod@divisor+1,f
 10238  07DE  0B89               	decfsz	9,f
 10239  07DF  2FDC               	goto	u292_25
 10240  07E0  3001               	movlw	1
 10241  07E1  00FC               	movwf	??___lwmod
 10242  07E2  087C               	movf	??___lwmod,w
 10243  07E3  07FD               	addwf	___lwmod@counter,f
 10244  07E4  2FD9               	goto	i1l2960
 10245  07E5                     i1l2962:	
 10246  07E5  0879               	movf	___lwmod@divisor+1,w
 10247  07E6  027B               	subwf	___lwmod@dividend+1,w
 10248  07E7  1D03               	skipz
 10249  07E8  2FEB               	goto	u294_25
 10250  07E9  0878               	movf	___lwmod@divisor,w
 10251  07EA  027A               	subwf	___lwmod@dividend,w
 10252  07EB                     u294_25:	
 10253  07EB  1C03               	skipc
 10254  07EC  2FF1               	goto	i1l2966
 10255  07ED  0878               	movf	___lwmod@divisor,w
 10256  07EE  02FA               	subwf	___lwmod@dividend,f
 10257  07EF  0879               	movf	___lwmod@divisor+1,w
 10258  07F0  3BFB               	subwfb	___lwmod@dividend+1,f
 10259  07F1                     i1l2966:	
 10260  07F1  3001               	movlw	1
 10261  07F2                     u295_25:	
 10262  07F2  36F9               	lsrf	___lwmod@divisor+1,f
 10263  07F3  0CF8               	rrf	___lwmod@divisor,f
 10264  07F4  0B89               	decfsz	9,f
 10265  07F5  2FF2               	goto	u295_25
 10266  07F6  3001               	movlw	1
 10267  07F7  02FD               	subwf	___lwmod@counter,f
 10268  07F8  1D03               	btfss	3,2
 10269  07F9  2FE5               	goto	i1l2962
 10270  07FA                     i1l2970:	
 10271  07FA  087B               	movf	___lwmod@dividend+1,w
 10272  07FB  00F9               	movwf	?___lwmod+1
 10273  07FC  087A               	movf	___lwmod@dividend,w
 10274  07FD  00F8               	movwf	?___lwmod
 10275  07FE  0008               	return
 10276  07FF                     __end_of___lwmod:	
 10277                           
 10278                           	psect	text86
 10279  0DD7                     __ptext86:	
 10280 ;; *************** function ___lwdiv *****************
 10281 ;; Defined at:
 10282 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lwdiv.c"
 10283 ;; Parameters:    Size  Location     Type
 10284 ;;  divisor         2    0[COMMON] unsigned int 
 10285 ;;  dividend        2    2[COMMON] unsigned int 
 10286 ;; Auto vars:     Size  Location     Type
 10287 ;;  quotient        2    5[COMMON] unsigned int 
 10288 ;;  counter         1    7[COMMON] unsigned char 
 10289 ;; Return value:  Size  Location     Type
 10290 ;;                  2    0[COMMON] unsigned int 
 10291 ;; Registers used:
 10292 ;;		wreg, status,2, status,0
 10293 ;; Tracked objects:
 10294 ;;		On entry : 0/0
 10295 ;;		On exit  : 0/0
 10296 ;;		Unchanged: 0/0
 10297 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10298 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10299 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10300 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10301 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10302 ;;Total ram usage:        8 bytes
 10303 ;; Hardware stack levels used:    1
 10304 ;; This function calls:
 10305 ;;		Nothing
 10306 ;; This function is called by:
 10307 ;;		_isolateDigits
 10308 ;; This function uses a non-reentrant model
 10309 ;;
 10310                           
 10311                           
 10312                           ;psect for function ___lwdiv
 10313  0DD7                     ___lwdiv:	
 10314                           
 10315                           ;incstack = 0
 10316                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
 10317  0DD7  01F5               	clrf	___lwdiv@quotient
 10318  0DD8  01F6               	clrf	___lwdiv@quotient+1
 10319  0DD9  0870               	movf	___lwdiv@divisor,w
 10320  0DDA  0471               	iorwf	___lwdiv@divisor+1,w
 10321  0DDB  1903               	btfsc	3,2
 10322  0DDC  2E06               	goto	i1l2948
 10323  0DDD  01F7               	clrf	___lwdiv@counter
 10324  0DDE  0AF7               	incf	___lwdiv@counter,f
 10325  0DDF                     i1l2936:	
 10326  0DDF  1BF1               	btfsc	___lwdiv@divisor+1,7
 10327  0DE0  2DEB               	goto	i1l2938
 10328  0DE1  3001               	movlw	1
 10329  0DE2                     u285_25:	
 10330  0DE2  35F0               	lslf	___lwdiv@divisor,f
 10331  0DE3  0DF1               	rlf	___lwdiv@divisor+1,f
 10332  0DE4  0B89               	decfsz	9,f
 10333  0DE5  2DE2               	goto	u285_25
 10334  0DE6  3001               	movlw	1
 10335  0DE7  00F4               	movwf	??___lwdiv
 10336  0DE8  0874               	movf	??___lwdiv,w
 10337  0DE9  07F7               	addwf	___lwdiv@counter,f
 10338  0DEA  2DDF               	goto	i1l2936
 10339  0DEB                     i1l2938:	
 10340  0DEB  3001               	movlw	1
 10341  0DEC                     u287_25:	
 10342  0DEC  35F5               	lslf	___lwdiv@quotient,f
 10343  0DED  0DF6               	rlf	___lwdiv@quotient+1,f
 10344  0DEE  0B89               	decfsz	9,f
 10345  0DEF  2DEC               	goto	u287_25
 10346  0DF0  0871               	movf	___lwdiv@divisor+1,w
 10347  0DF1  0273               	subwf	___lwdiv@dividend+1,w
 10348  0DF2  1D03               	skipz
 10349  0DF3  2DF6               	goto	u288_25
 10350  0DF4  0870               	movf	___lwdiv@divisor,w
 10351  0DF5  0272               	subwf	___lwdiv@dividend,w
 10352  0DF6                     u288_25:	
 10353  0DF6  1C03               	skipc
 10354  0DF7  2DFD               	goto	i1l2944
 10355  0DF8  0870               	movf	___lwdiv@divisor,w
 10356  0DF9  02F2               	subwf	___lwdiv@dividend,f
 10357  0DFA  0871               	movf	___lwdiv@divisor+1,w
 10358  0DFB  3BF3               	subwfb	___lwdiv@dividend+1,f
 10359  0DFC  1475               	bsf	___lwdiv@quotient,0
 10360  0DFD                     i1l2944:	
 10361  0DFD  3001               	movlw	1
 10362  0DFE                     u289_25:	
 10363  0DFE  36F1               	lsrf	___lwdiv@divisor+1,f
 10364  0DFF  0CF0               	rrf	___lwdiv@divisor,f
 10365  0E00  0B89               	decfsz	9,f
 10366  0E01  2DFE               	goto	u289_25
 10367  0E02  3001               	movlw	1
 10368  0E03  02F7               	subwf	___lwdiv@counter,f
 10369  0E04  1D03               	btfss	3,2
 10370  0E05  2DEB               	goto	i1l2938
 10371  0E06                     i1l2948:	
 10372  0E06  0876               	movf	___lwdiv@quotient+1,w
 10373  0E07  00F1               	movwf	?___lwdiv+1
 10374  0E08  0875               	movf	___lwdiv@quotient,w
 10375  0E09  00F0               	movwf	?___lwdiv
 10376  0E0A  0008               	return
 10377  0E0B                     __end_of___lwdiv:	
 10378                           
 10379                           	psect	text87
 10380  0AB1                     __ptext87:	
 10381 ;; *************** function _TMR1_StopTimer *****************
 10382 ;; Defined at:
 10383 ;;		line 101 in file "mcc_generated_files/tmr1.c"
 10384 ;; Parameters:    Size  Location     Type
 10385 ;;		None
 10386 ;; Auto vars:     Size  Location     Type
 10387 ;;		None
 10388 ;; Return value:  Size  Location     Type
 10389 ;;                  1    wreg      void 
 10390 ;; Registers used:
 10391 ;;		None
 10392 ;; Tracked objects:
 10393 ;;		On entry : 0/0
 10394 ;;		On exit  : 0/0
 10395 ;;		Unchanged: 0/0
 10396 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10397 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10398 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10399 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10400 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10401 ;;Total ram usage:        0 bytes
 10402 ;; Hardware stack levels used:    1
 10403 ;; This function calls:
 10404 ;;		Nothing
 10405 ;; This function is called by:
 10406 ;;		_setSecondsISR
 10407 ;;		_setMinutesISR
 10408 ;;		_setHoursISR
 10409 ;; This function uses a non-reentrant model
 10410 ;;
 10411                           
 10412                           
 10413                           ;psect for function _TMR1_StopTimer
 10414  0AB1                     _TMR1_StopTimer:	
 10415                           
 10416                           ;tmr1.c: 104: T1CONbits.TMR1ON = 0;
 10417                           
 10418                           ;incstack = 0
 10419                           ; Regs used in _TMR1_StopTimer: []
 10420  0AB1  0020               	movlb	0	; select bank0
 10421  0AB2  1018               	bcf	24,0	;volatile
 10422  0AB3  0008               	return
 10423  0AB4                     __end_of_TMR1_StopTimer:	
 10424  007E                     btemp	set	126	;btemp
 10425  007E                     int$flags	set	126
 10426  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    13
    Data        0
    BSS         62
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     55      79
    BANK1            80     14      53
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    frexp@eptr	PTR int  size(1) Largest target is 2
		 -> trunc@expon(BANK0[2]), 

    IOCBF5_SetInterruptHandler@InterruptHandler	PTR void  size(2) Largest target is 1
		 -> IOCBF5_DefaultInterruptHandler(), 

    IOCBF5_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> IOCBF5_DefaultInterruptHandler(), Absolute function(), 

    IOCBF4_SetInterruptHandler@InterruptHandler	PTR void  size(2) Largest target is 1
		 -> powerFailISR(), IOCBF4_DefaultInterruptHandler(), 

    IOCBF4_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> powerFailISR(), IOCBF4_DefaultInterruptHandler(), Absolute function(), 

    IOCBF3_SetInterruptHandler@InterruptHandler	PTR void  size(2) Largest target is 1
		 -> displayToggleISR(), IOCBF3_DefaultInterruptHandler(), 

    IOCBF3_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> displayToggleISR(), IOCBF3_DefaultInterruptHandler(), Absolute function(), 

    IOCBF2_SetInterruptHandler@InterruptHandler	PTR void  size(2) Largest target is 1
		 -> setHoursISR(), IOCBF2_DefaultInterruptHandler(), 

    IOCBF2_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> setHoursISR(), IOCBF2_DefaultInterruptHandler(), Absolute function(), 

    IOCBF1_SetInterruptHandler@InterruptHandler	PTR void  size(2) Largest target is 1
		 -> setMinutesISR(), IOCBF1_DefaultInterruptHandler(), 

    IOCBF1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> setMinutesISR(), IOCBF1_DefaultInterruptHandler(), Absolute function(), 

    IOCBF0_SetInterruptHandler@InterruptHandler	PTR void  size(2) Largest target is 1
		 -> setSecondsISR(), IOCBF0_DefaultInterruptHandler(), 

    IOCBF0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> setSecondsISR(), IOCBF0_DefaultInterruptHandler(), Absolute function(), 

    TMR2_SetInterruptHandler@InterruptHandler	PTR void  size(2) Largest target is 1
		 -> blankISR(), TMR2_DefaultInterruptHandler(), 

    TMR2_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> blankISR(), TMR2_DefaultInterruptHandler(), Absolute function(), 

    TMR1_SetInterruptHandler@InterruptHandler	PTR void  size(2) Largest target is 1
		 -> sleepyTickISR(), tickISR(), TMR1_DefaultInterruptHandler(), 

    TMR1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> sleepyTickISR(), tickISR(), TMR1_DefaultInterruptHandler(), Absolute function(), 

    TMR0_SetInterruptHandler@InterruptHandler	PTR void  size(2) Largest target is 1
		 -> muxISR(), TMR0_DefaultInterruptHandler(), 

    TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> muxISR(), Absolute function(), TMR0_DefaultInterruptHandler(), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _muxISR->_updateParallelPort
    _restoreTime->___fttol
    _restoreTime->___ltdiv
    _trunc->___fttol
    ___altoft->___fttol
    ___lttoft->___ftpack
    ___ltdiv->___ltmod
    ___ftmul->___lttoft
    ___aldiv->___almod
    _shutdown->i1_TMR1_SetInterruptHandler
    _isolateDigits->___lwmod
    ___lwmod->___lwdiv

Critical Paths under _main in BANK0

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    _wakeup->_restoreTime
    _restoreTime->_round
    _round->___ftadd
    _trunc->___altoft
    ___ftneg->_trunc
    ___ftadd->___ftneg

Critical Paths under _main in BANK1

    _startup->_checkIDs
    _SYSTEM_Initialize->_TMR0_Initialize
    _TMR2_Initialize->_TMR2_SetInterruptHandler
    _TMR1_Initialize->_TMR1_SetInterruptHandler
    _TMR0_Initialize->_TMR0_SetInterruptHandler
    _PIN_MANAGER_Initialize->_IOCBF0_SetInterruptHandler
    _PIN_MANAGER_Initialize->_IOCBF1_SetInterruptHandler
    _PIN_MANAGER_Initialize->_IOCBF2_SetInterruptHandler
    _PIN_MANAGER_Initialize->_IOCBF3_SetInterruptHandler
    _PIN_MANAGER_Initialize->_IOCBF4_SetInterruptHandler
    _PIN_MANAGER_Initialize->_IOCBF5_SetInterruptHandler

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    3308
                                             12 BANK1      2     2      0
                    _TMR1_StartTimer
                            _startup
 ---------------------------------------------------------------------------------
 (1) _startup                                              0     0      0    3308
         _IOCBF0_SetInterruptHandler
         _IOCBF1_SetInterruptHandler
         _IOCBF2_SetInterruptHandler
         _IOCBF3_SetInterruptHandler
         _IOCBF4_SetInterruptHandler
                  _SYSTEM_Initialize
           _TMR0_SetInterruptHandler
           _TMR1_SetInterruptHandler
           _TMR2_SetInterruptHandler
                     _TMR2_StopTimer
                           _checkIDs
 ---------------------------------------------------------------------------------
 (2) _checkIDs                                            12    12      0     138
                                              0 BANK1     12    12      0
 ---------------------------------------------------------------------------------
 (2) _TMR2_StopTimer                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SYSTEM_Initialize                                    0     0      0    1628
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR0_Initialize
                    _TMR1_Initialize
                    _TMR2_Initialize
                     _WDT_Initialize
 ---------------------------------------------------------------------------------
 (3) _WDT_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _TMR2_Initialize                                      0     0      0     188
           _TMR2_SetInterruptHandler
                    _TMR2_StartTimer
 ---------------------------------------------------------------------------------
 (4) _TMR2_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR2_SetInterruptHandler                             2     0      2     188
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (3) _TMR1_Initialize                                      0     0      0     226
           _TMR1_SetInterruptHandler
                    _TMR1_StartTimer
 ---------------------------------------------------------------------------------
 (4) _TMR1_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR1_SetInterruptHandler                             2     0      2     226
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (3) _TMR0_Initialize                                      1     1      0     188
                                              2 BANK1      1     1      0
           _TMR0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _TMR0_SetInterruptHandler                             2     0      2     188
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (3) _PIN_MANAGER_Initialize                               0     0      0    1026
         _IOCBF0_SetInterruptHandler
         _IOCBF1_SetInterruptHandler
         _IOCBF2_SetInterruptHandler
         _IOCBF3_SetInterruptHandler
         _IOCBF4_SetInterruptHandler
         _IOCBF5_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (4) _IOCBF5_SetInterruptHandler                           2     0      2      86
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (4) _IOCBF4_SetInterruptHandler                           2     0      2     188
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (4) _IOCBF3_SetInterruptHandler                           2     0      2     188
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (4) _IOCBF2_SetInterruptHandler                           2     0      2     188
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (4) _IOCBF1_SetInterruptHandler                           2     0      2     188
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (4) _IOCBF0_SetInterruptHandler                           2     0      2     188
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (3) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _INTERRUPT_InterruptManager                           1     1      0   21413
                                             54 BANK0      1     1      0
                    _PIN_MANAGER_IOC
                           _TMR0_ISR
                           _TMR1_ISR
                           _TMR2_ISR
 ---------------------------------------------------------------------------------
 (6) _TMR2_ISR                                             0     0      0       0
                   Absolute function *
       _TMR2_DefaultInterruptHandler *
                           _blankISR *
 ---------------------------------------------------------------------------------
 (7) _blankISR                                             0     0      0       0
                      _groundCathode
                   i1_TMR2_StopTimer
 ---------------------------------------------------------------------------------
 (8) _groundCathode                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _TMR2_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _TMR1_ISR                                             0     0      0    1473
                   Absolute function *
       _TMR1_DefaultInterruptHandler *
                      _sleepyTickISR *
                            _tickISR *
 ---------------------------------------------------------------------------------
 (7) _tickISR                                              0     0      0    1473
                      _isolateDigits
                          _timeParse
                    _twentyFourParse
                      _updateDisplay
 ---------------------------------------------------------------------------------
 (8) _timeParse                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _sleepyTickISR                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _TMR1_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _TMR0_ISR                                             0     0      0       0
                   Absolute function *
       _TMR0_DefaultInterruptHandler *
                             _muxISR *
 ---------------------------------------------------------------------------------
 (7) _muxISR                                               0     0      0       0
                 _updateParallelPort
                  i1_TMR2_StartTimer
 ---------------------------------------------------------------------------------
 (8) _updateParallelPort                                   1     1      0       0
                                              0 COMMON     1     1      0
               _muxDigitCompensation
 ---------------------------------------------------------------------------------
 (9) _muxDigitCompensation                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _TMR0_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _PIN_MANAGER_IOC                                      0     0      0   19940
                         _IOCBF0_ISR
                         _IOCBF1_ISR
                         _IOCBF2_ISR
                         _IOCBF3_ISR
                         _IOCBF4_ISR
                         _IOCBF5_ISR
 ---------------------------------------------------------------------------------
 (7) _IOCBF5_ISR                                           0     0      0       0
                   Absolute function *
     _IOCBF5_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (8) _IOCBF5_DefaultInterruptHandler                       0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _IOCBF4_ISR                                           0     0      0   15521
                   Absolute function *
     _IOCBF4_DefaultInterruptHandler *
                       _powerFailISR *
 ---------------------------------------------------------------------------------
 (8) _powerFailISR                                         0     0      0   15521
                           _shutdown
                             _wakeup
 ---------------------------------------------------------------------------------
 (9) _wakeup                                               0     0      0   15447
                      _isolateDigits
                        _restoreTime
                    _twentyFourParse
                      _updateDisplay
       i1_IOCBF0_SetInterruptHandler
       i1_IOCBF1_SetInterruptHandler
       i1_IOCBF2_SetInterruptHandler
       i1_IOCBF3_SetInterruptHandler
       i1_IOCBF4_SetInterruptHandler
         i1_TMR0_SetInterruptHandler
         i1_TMR1_SetInterruptHandler
         i1_TMR2_SetInterruptHandler
                  i1_TMR2_StartTimer
 ---------------------------------------------------------------------------------
 (8) i1_TMR2_StartTimer                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (10) i1_TMR2_SetInterruptHandler                          2     0      2      48
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (10) i1_TMR0_SetInterruptHandler                          2     0      2      48
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (10) i1_IOCBF4_SetInterruptHandler                        2     0      2      48
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (10) i1_IOCBF3_SetInterruptHandler                        2     0      2      48
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (10) i1_IOCBF2_SetInterruptHandler                        2     0      2      48
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (10) i1_IOCBF1_SetInterruptHandler                        2     0      2      48
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (10) i1_IOCBF0_SetInterruptHandler                        2     0      2      48
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (10) _restoreTime                                        15    15      0   13564
                                             39 BANK0     15    15      0
                            ___aldiv
                            ___almod
                            ___ftmul
                            ___fttol
                            ___ltdiv
                            ___ltmod
                           ___lttoft
                              _round
 ---------------------------------------------------------------------------------
 (11) _round                                               6     3      3    6832
                                             33 BANK0      6     3      3
                            ___ftadd
                            ___ftneg
                              _trunc
 ---------------------------------------------------------------------------------
 (12) _trunc                                               9     6      3    3279
                                              8 BANK0      9     6      3
                           ___altoft
                            ___fttol
                              _frexp
 ---------------------------------------------------------------------------------
 (13) _frexp                                               6     2      4     336
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (13) ___fttol                                            14    10      4     380
                                              0 COMMON    14    10      4
 ---------------------------------------------------------------------------------
 (13) ___altoft                                            8     4      4    2272
                                              0 BANK0      8     4      4
                           ___ftpack
                            ___fttol (ARG)
 ---------------------------------------------------------------------------------
 (12) ___ftneg                                             3     0      3     109
                                             17 BANK0      3     0      3
                              _trunc (ARG)
 ---------------------------------------------------------------------------------
 (12) ___ftadd                                            13     7      6    3268
                                             20 BANK0     13     7      6
                            ___ftneg (ARG)
                           ___ftpack
                              _trunc (ARG)
 ---------------------------------------------------------------------------------
 (11) ___lttoft                                            4     1      3    2156
                                              8 COMMON     4     1      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (11) ___ltmod                                             8     2      6     415
                                              0 COMMON     8     2      6
 ---------------------------------------------------------------------------------
 (11) ___ltdiv                                            11     5      6     290
                                              8 COMMON     6     0      6
                                              0 BANK0      5     5      0
                            ___ltmod (ARG)
 ---------------------------------------------------------------------------------
 (11) ___ftmul                                            16    10      6    2524
                                              0 BANK0     16    10      6
                           ___ftpack
                           ___lttoft (ARG)
 ---------------------------------------------------------------------------------
 (14) ___ftpack                                            8     3      5    2070
                                              0 COMMON     8     3      5
 ---------------------------------------------------------------------------------
 (11) ___almod                                            11     3      8     424
                                              0 COMMON    11     3      8
 ---------------------------------------------------------------------------------
 (11) ___aldiv                                            15     7      8     428
                                             11 COMMON     1     1      0
                                              0 BANK0     14     6      8
                            ___almod (ARG)
 ---------------------------------------------------------------------------------
 (9) _shutdown                                             0     0      0      74
         i1_TMR1_SetInterruptHandler
                   i1_TMR2_StopTimer
 ---------------------------------------------------------------------------------
 (8) i1_TMR2_StopTimer                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (10) i1_TMR1_SetInterruptHandler                          2     0      2      74
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (8) _IOCBF4_DefaultInterruptHandler                       0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _IOCBF3_ISR                                           0     0      0       0
                   Absolute function *
     _IOCBF3_DefaultInterruptHandler *
                   _displayToggleISR *
 ---------------------------------------------------------------------------------
 (8) _displayToggleISR                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _IOCBF3_DefaultInterruptHandler                       0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _IOCBF2_ISR                                           0     0      0    1473
                   Absolute function *
     _IOCBF2_DefaultInterruptHandler *
                        _setHoursISR *
 ---------------------------------------------------------------------------------
 (8) _setHoursISR                                          0     0      0    1473
                     _TMR1_StopTimer
                      _isolateDigits
                    _twentyFourParse
                      _updateDisplay
 ---------------------------------------------------------------------------------
 (8) _twentyFourParse                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _IOCBF2_DefaultInterruptHandler                       0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _IOCBF1_ISR                                           0     0      0    1473
                   Absolute function *
     _IOCBF1_DefaultInterruptHandler *
                      _setMinutesISR *
 ---------------------------------------------------------------------------------
 (8) _setMinutesISR                                        0     0      0    1473
                     _TMR1_StopTimer
                      _isolateDigits
                      _updateDisplay
 ---------------------------------------------------------------------------------
 (8) _IOCBF1_DefaultInterruptHandler                       0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _IOCBF0_ISR                                           0     0      0    1473
                   Absolute function *
     _IOCBF0_DefaultInterruptHandler *
                      _setSecondsISR *
 ---------------------------------------------------------------------------------
 (8) _setSecondsISR                                        0     0      0    1473
                     _TMR1_StopTimer
                      _isolateDigits
                      _updateDisplay
 ---------------------------------------------------------------------------------
 (8) _updateDisplay                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _isolateDigits                                        0     0      0    1473
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (9) ___lwmod                                              6     2      4     927
                                              8 COMMON     6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (9) ___lwdiv                                              8     4      4     546
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (9) _TMR1_StopTimer                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _IOCBF0_DefaultInterruptHandler                       0     0      0       0
 ---------------------------------------------------------------------------------
 (7) Absolute function(Fake)                               0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 14
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _TMR1_StartTimer
   _startup
     _IOCBF0_SetInterruptHandler
     _IOCBF1_SetInterruptHandler
     _IOCBF2_SetInterruptHandler
     _IOCBF3_SetInterruptHandler
     _IOCBF4_SetInterruptHandler
     _SYSTEM_Initialize
       _OSCILLATOR_Initialize
       _PIN_MANAGER_Initialize
         _IOCBF0_SetInterruptHandler
         _IOCBF1_SetInterruptHandler
         _IOCBF2_SetInterruptHandler
         _IOCBF3_SetInterruptHandler
         _IOCBF4_SetInterruptHandler
         _IOCBF5_SetInterruptHandler
       _TMR0_Initialize
         _TMR0_SetInterruptHandler
       _TMR1_Initialize
         _TMR1_SetInterruptHandler
         _TMR1_StartTimer
       _TMR2_Initialize
         _TMR2_SetInterruptHandler
         _TMR2_StartTimer
       _WDT_Initialize
     _TMR0_SetInterruptHandler
     _TMR1_SetInterruptHandler
     _TMR2_SetInterruptHandler
     _TMR2_StopTimer
     _checkIDs

 _INTERRUPT_InterruptManager (ROOT)
   _PIN_MANAGER_IOC
     _IOCBF0_ISR
       Absolute function(Fake) *
       _IOCBF0_DefaultInterruptHandler *
       _setSecondsISR *
         _TMR1_StopTimer
         _isolateDigits
           ___lwdiv
           ___lwmod
             ___lwdiv (ARG)
         _updateDisplay
     _IOCBF1_ISR
       Absolute function(Fake) *
       _IOCBF1_DefaultInterruptHandler *
       _setMinutesISR *
         _TMR1_StopTimer
         _isolateDigits
           ___lwdiv
           ___lwmod
             ___lwdiv (ARG)
         _updateDisplay
     _IOCBF2_ISR
       Absolute function(Fake) *
       _IOCBF2_DefaultInterruptHandler *
       _setHoursISR *
         _TMR1_StopTimer
         _isolateDigits
           ___lwdiv
           ___lwmod
             ___lwdiv (ARG)
         _twentyFourParse
         _updateDisplay
     _IOCBF3_ISR
       Absolute function(Fake) *
       _IOCBF3_DefaultInterruptHandler *
       _displayToggleISR *
     _IOCBF4_ISR
       Absolute function(Fake) *
       _IOCBF4_DefaultInterruptHandler *
       _powerFailISR *
         _shutdown
           i1_TMR1_SetInterruptHandler
           i1_TMR2_StopTimer
         _wakeup
           _isolateDigits
             ___lwdiv
             ___lwmod
               ___lwdiv (ARG)
           _restoreTime
             ___aldiv
               ___almod (ARG)
             ___almod
             ___ftmul
               ___ftpack
               ___lttoft (ARG)
                 ___ftpack
             ___fttol
             ___ltdiv
               ___ltmod (ARG)
             ___ltmod
             ___lttoft
               ___ftpack
             _round
               ___ftadd
                 ___ftneg (ARG)
                   _trunc (ARG)
                     ___altoft
                       ___ftpack
                       ___fttol (ARG)
                     ___fttol
                     _frexp
                 ___ftpack (ARG)
                 _trunc (ARG)
                   ___altoft
                     ___ftpack
                     ___fttol (ARG)
                   ___fttol
                   _frexp
               ___ftneg
                 _trunc (ARG)
                   ___altoft
                     ___ftpack
                     ___fttol (ARG)
                   ___fttol
                   _frexp
               _trunc
                 ___altoft
                   ___ftpack
                   ___fttol (ARG)
                 ___fttol
                 _frexp
           _twentyFourParse
           _updateDisplay
           i1_IOCBF0_SetInterruptHandler
           i1_IOCBF1_SetInterruptHandler
           i1_IOCBF2_SetInterruptHandler
           i1_IOCBF3_SetInterruptHandler
           i1_IOCBF4_SetInterruptHandler
           i1_TMR0_SetInterruptHandler
           i1_TMR1_SetInterruptHandler
           i1_TMR2_SetInterruptHandler
           i1_TMR2_StartTimer
     _IOCBF5_ISR
       Absolute function(Fake) *
       _IOCBF5_DefaultInterruptHandler *
   _TMR0_ISR
     Absolute function(Fake) *
     _TMR0_DefaultInterruptHandler *
     _muxISR *
       _updateParallelPort
         _muxDigitCompensation
       i1_TMR2_StartTimer
   _TMR1_ISR
     Absolute function(Fake) *
     _TMR1_DefaultInterruptHandler *
     _sleepyTickISR *
     _tickISR *
       _isolateDigits
         ___lwdiv
         ___lwmod
           ___lwdiv (ARG)
       _timeParse
       _twentyFourParse
       _updateDisplay
   _TMR2_ISR
     Absolute function(Fake) *
     _TMR2_DefaultInterruptHandler *
     _blankISR *
       _groundCathode
       i1_TMR2_StopTimer

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       1       4        1.3%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     37      4F       5       98.8%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      E      35       7       66.3%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      92      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      92      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Sun Feb 21 19:26:54 2021

           restoreTime@sleepy_seconds_rounded 004D                                  ___altoft@exp 0026  
            __end_of_TMR2_SetInterruptHandler 0B2B                  ??i1_TMR2_SetInterruptHandler 0072  
                                           pc 0002              ??_IOCBF3_DefaultInterruptHandler 0070  
             ?_IOCBF3_DefaultInterruptHandler 0070                                   __CFG_CP$OFF 0000  
                               ___altoft@sign 0027                                            _RD 0CA8  
                             _timer0ReloadVal 00C6                                  ___ftadd@exp1 0040  
                                ___ftadd@exp2 003F                                  ___ftadd@sign 003E  
                                         l430 07C4                                           l432 07CF  
                                         l433 07CD                                           _PR2 001B  
                             _timer1ReloadVal 00C2                                  __CFG_IDLOC0$ 0004  
                                __CFG_IDLOC1$ 0058                                  __CFG_IDLOC2$ 0049  
                                __CFG_IDLOC3$ 004E                               _TMR2_Initialize 0BF3  
                                __CFG_BORV$HI 0000                                           wreg 0009  
                                __CFG_IESO$ON 0000                                  __CFG_FOSC$HS 0000  
          __end_of_IOCBF1_SetInterruptHandler 0B07                    _IOCBF1_SetInterruptHandler 0B01  
          __end_of_IOCBF4_SetInterruptHandler 0B4C                    _IOCBF4_SetInterruptHandler 0B43  
                                __CFG_LVP$OFF 0000                                          l3500 0305  
                                        l3512 0326                                          l3524 0347  
                                        l3550 0396                                          l3536 0368  
                                        l3804 0793                                          l3806 07A6  
                                        l3816 07BD                                          l3790 0785  
                                        _CFGS 0CAE                         __end_of_isolateDigits 05C7  
                                        _LATA 010C                                          _LATB 010D  
                                        _LATC 010E                                          _LATD 010F  
                                        _LATE 0110                                          u3305 0334  
                                        u3315 0355                                          u3325 0376  
                                        u3335 038E                                          u3345 03A4  
                                        u3710 07CA                                          u3295 0313  
                                        u3747 07AF                      __end_of_displayToggleISR 0DD7  
                                        _TMR0 0015                                          _TMR2 001A  
                                        _OSTS 04D5                                ?_updateDisplay 0070  
                                        _WPUB 020D                                          _WPUE 0210  
                                __CFG_WRT$OFF 0000                                 __CFG_FCMEN$ON 0000  
                                        _main 077F                                  ___ftpack@arg 0070  
         __size_ofi1_TMR2_SetInterruptHandler 0006                                  ___ftpack@exp 0073  
                                        fsr0h 0005                                          fsr1h 0007  
                                        indf0 0000                                          fsr0l 0004  
                                        indf1 0001                                          fsr1l 0006  
                                        btemp 007E                                 __CFG_BOREN$ON 0000  
                                        start 0032                             ??_twentyFourParse 0070  
                  ??_TMR1_SetInterruptHandler 00C9                                 __CFG_MCLRE$ON 0000  
                                ___ftmul@cntr 002E                                  ___ftmul@sign 002F  
                 __size_of_updateParallelPort 0018                                 __CFG_LPBOR$ON 0000  
                                ___fttol@exp1 007D                                  ___fttol@lval 0079  
                     __end_of_TMR0_Initialize 0C45                ??_TMR0_DefaultInterruptHandler 0070  
              __size_of_OSCILLATOR_Initialize 0004                           __size_of_IOCBF0_ISR 000D  
                         __size_of_IOCBF1_ISR 000D                           __size_of_IOCBF2_ISR 000D  
                         __size_of_IOCBF3_ISR 000D                 __end_of_OSCILLATOR_Initialize 0AC7  
                         __size_of_IOCBF4_ISR 000D                           __size_of_IOCBF5_ISR 000D  
                             __end_of___aldiv 0649                               __end_of___almod 06B6  
                                       ?_main 0070                               __end_of___ftadd 0241  
                               __CFG_WDTE$OFF 0000                               _TMR1_StartTimer 0ABA  
                             __end_of___ftneg 0B3A                               __end_of___ftmul 02F5  
                                       _T1CON 0018                               __end_of___fttol 04BE  
                                       _T2CON 001C                               __end_of___ltdiv 0FAF  
                             __end_of___lwdiv 0E0B                               __end_of___ltmod 0E77  
                                       i1l173 002D                                         i1l165 0010  
                                       i1l167 001C                               __end_of___lwmod 07FF  
                                       i1l169 0028                                         i1l604 0DA6  
                                       i1l710 0139                                         i1l711 0144  
                                       i1l706 008E                                         i1l637 0DCD  
                                       i1l709 012A                                         i1l638 0DC2  
                                       i1l682 0EE3                                         i1l691 03AD  
                                       i1l852 0659                                         i1l685 0EE7  
                                       i1l694 03B1                                         i1l839 05D8  
                                       i1l952 0760                                         i1l953 0768  
                                       i1l945 074D                                         i1l976 01EA  
                                       _TMR1H 0017                                         _TMR1L 0016  
                                       _TRISA 008C                                         _TRISB 008D  
                                       _TRISC 008E                                         _TRISD 008F  
                                       _TRISE 0090             __size_of_TMR0_SetInterruptHandler 0006  
                   ?_TMR0_SetInterruptHandler 00C7                      __end_ofi1_TMR2_StopTimer 0AB7  
                            __end_of_TMR0_ISR 0BD0                              __end_of_TMR1_ISR 0C2F  
                            __end_of_TMR2_ISR 0BC0                       __end_of_PIN_MANAGER_IOC 0D66  
                              _WDT_Initialize 0AC7                                         _frexp 0E0B  
                                       _errno 00AC                                         _hours 0062  
                               ___ftpack@sign 0074                                         _round 0FAF  
                             __end_of_tickISR 0CB8                                         _trunc 0F29  
                     __end_of_TMR1_Initialize 0C79                                         pclath 000A  
              ??i1_IOCBF0_SetInterruptHandler 0072                ??i1_IOCBF3_SetInterruptHandler 0072  
                                       status 0003                               __end_of_startup 0543  
                                       wtemp0 007E                               _TMR2_StartTimer 0ABD  
                      ??_muxDigitCompensation 0070                         __end_of_setMinutesISR 0CFA  
                       __end_of_setSecondsISR 0CD9                               __initialization 0034  
                 ?i1_TMR1_SetInterruptHandler 0070                                  __end_of_main 07D3  
                     __end_of_TMR2_Initialize 0C06                   ?_INTERRUPT_InterruptManager 0070  
                    _TMR2_SetInterruptHandler 0B25                                        ??_main 00D3  
                               ___fttol@sign1 0078                       _IOCBF0_InterruptHandler 00BC  
                                ?_setHoursISR 0070                        __end_of_WDT_Initialize 0ACB  
                            _expected_user_ID 1000                  ??_IOCBF2_SetInterruptHandler 00C9  
                             ??_updateDisplay 0070                                        ?_frexp 0070  
                            __end_of___altoft 0F29                  ??_IOCBF5_SetInterruptHandler 00C9  
                                      i1S3862 0800                                        _APFCON 011D  
                                      _ANSELA 018C                                        _ANSELB 018D  
                                      _ANSELC 018E                                        _ANSELD 018F  
                                      _ANSELE 0190                              __end_of___ftpack 077F  
                                      ?_round 0041                                        _T1GCON 0019  
                                      _HFIOFR 04D4                                        ?_trunc 0028  
                                      _LFIOFR 04D1                                        i1l1036 04A4  
                                      i1l3000 00A7                                        i1l3200 0E78  
                                      i1l3210 0E90                                        i1l3202 0E7C  
                                      i1l3212 0E95                                        i1l3204 0E81  
                                      i1l3214 0E9A                                        i1l3206 0E86  
                                      i1l2600 0450                                        i1l3208 0E8B  
                                      i1l3216 0E9F                                        i1l3404 0CEF  
                                      i1l2700 01E6                                        i1l2620 048E  
                                      u201_25 0F06                                        i1l3422 0D34  
                                      i1l2550 0723                                        i1l2704 01FC  
                                      i1l2632 04B5                                        i1l2810 066E  
                                      i1l2554 072A                                        i1l2626 049B  
                                      i1l2618 0480                                        i1l2642 0E17  
                                      i1l3460 0B6F                                        i1l3444 0DC1  
                                      i1l2812 067C                                        i1l2820 069F  
                                      i1l2804 0666                                        i1l2564 0752  
                                      i1l2556 0734                                        i1l2708 020E  
                                      i1l2628 04A7                                        i1l3436 0B40  
                                      i1l3364 0C90                                        u210_25 049C  
                                      i1l3454 0B62                                        i1l2566 075A  
                                      i1l2558 0739                                        i1l2910 0E54  
                                      i1l2718 0229                                        i1l2662 017A  
                                      i1l2590 0F11                                        i1l3358 0C85  
                                      i1l3472 0B89                                        i1l2824 06AD  
                                      i1l2816 0694                                        i1l2840 026E  
                                      i1l2680 01A3                                        i1l3640 0D5A  
                                      i1l3632 0D4E                                        i1l3386 0CCE  
                                      i1l3466 0B7C                                        i1l2834 0258  
                                      i1l2914 0E66                                        i1l2690 01C5  
                                      i1l2658 0173                                        i1l2738 0F41  
                                      i1l2852 02A9                                        i1l2908 0E47  
                                      i1l2692 01C9                                        i1l2668 0189  
                                      i1l2588 0F01                                        i1l3484 0BA3  
                                      i1l3644 0D60                                        i1l3636 0D54  
                                      i1l3628 0D48                                        i1l2774 05F9  
                                      i1l2766 05E9                                        i1l2918 0E70  
                                      i1l2686 01B6                                        i1l3478 0B96  
                                      i1l3566 0DA8                                        i1l3558 0D95  
                                      i1l3582 0CAC                                        i1l3574 0CA3  
                                      i1l2944 0DFD                                        i1l2936 0DDF  
                                      i1l2960 07D9                                        i1l2792 0640  
                                      i1l2784 0627                                        i1l2776 0607  
                                      i1l2864 02C5                                        i1l2856 02B1  
                                      i1l2688 01C0                                        i1l2938 0DEB  
                                      i1l2962 07E5                                        i1l2970 07FA  
                                      i1l2698 01DC                                        i1l2948 0E06  
                                      i1l2980 0D06                                        i1l2788 0632  
                                      i1l2868 02CD                                        i1l2884 0F78  
                                      i1l3860 0EA5                                        u204_25 0457  
                                      u300_25 0098                                        i1l2966 07F1  
                                      i1l2894 0F9E                                        i1l2886 0F85  
                                      i1l2984 0D14                                        i1l2986 0D19  
                                      i1l2898 0FA8                                        u223_25 01A4  
                                      u207_25 0481                                        u320_20 0DBF  
                                      u232_25 01DD                                        u226_25 01B7  
                                      u243_25 05FC                              __end_of___lttoft 0C1A  
                                      u245_25 0608                                        u253_25 0671  
                                      u261_25 027A                                        u229_25 01CA  
                                      u246_25 061C                                        u190_25 072F  
                                      u262_25 028A                                        u247_25 0628  
                                      u255_25 068A                                        _PMADRH 0192  
                                      u256_25 0695                                        u192_25 0748  
                                      u264_25 02B2                                        u272_25 0F7B  
                                      _PMADRL 0191                                        u265_25 02B8  
                                      u281_25 0E5E                                        _PMDATH 0194  
                                      u194_25 0755                                        u274_25 0F86  
                                      u282_25 0E67                                        u339_20 0CA1  
                                      _PMDATL 0193                                        u275_25 0F95  
                                      u292_25 07DC                                        u268_25 02CE  
                                      u276_25 0F9F                                        u285_25 0DE2  
                                      u269_25 02D4                                        u294_25 07EB  
                                      u198_25 076F                                        u287_25 0DEC  
                                      u295_25 07F2                                        u279_25 0E4A  
                                      u288_25 0DF6                                        u289_25 0DFE  
                                      _OSCCON 0099                                        _TMR0CS 04AD  
                                      _WDTCON 0097                              __end_of_checkIDs 03A7  
                            __end_of_blankISR 0BB3                                __CFG_PWRTE$OFF 0000  
        __end_of_TMR1_DefaultInterruptHandler 0004         __size_of_TMR1_DefaultInterruptHandler 0001  
                _TMR1_DefaultInterruptHandler 0003            __end_ofi1_TMR2_SetInterruptHandler 0AFB  
                  i1_TMR2_SetInterruptHandler 0AF5                       __end_of_TMR1_StartTimer 0ABD  
                                   ??___aldiv 007B                                     ??___almod 0078  
                                   ??___ftadd 003A                                __CFG_STVREN$ON 0000  
                                   ??___ftneg 007E                                     ??___ftmul 0026  
                                   ??___fttol 0074                                     ??___ltdiv 0020  
                                   ??___lwdiv 0074                                     ??___ltmod 0076  
                                   ??___lwmod 007C                              ?_TMR0_Initialize 0070  
                                      _muxISR 0D8B                                        _wakeup 03A7  
         __size_of_IOCBF2_SetInterruptHandler 0006           __size_of_IOCBF5_SetInterruptHandler 0006  
                       ___ftmul@f3_as_product 002B          __end_ofi1_IOCBF1_SetInterruptHandler 0ADD  
       __size_ofi1_IOCBF1_SetInterruptHandler 0006                  i1_IOCBF1_SetInterruptHandler 0AD7  
                                ?_restoreTime 0070          __end_ofi1_IOCBF4_SetInterruptHandler 0AEF  
       __size_ofi1_IOCBF4_SetInterruptHandler 0006                  i1_IOCBF4_SetInterruptHandler 0AE9  
                                   ??_tickISR 007E                               ?_WDT_Initialize 0070  
                            __end_of_shutdown 0EEC                                        round@f 0044  
                                      round@x 0041                       __end_of_TMR2_StartTimer 0AC0  
i1IOCBF4_SetInterruptHandler@InterruptHandler 0070  i1IOCBF3_SetInterruptHandler@InterruptHandler 0070  
i1IOCBF2_SetInterruptHandler@InterruptHandler 0070  i1IOCBF1_SetInterruptHandler@InterruptHandler 0070  
i1IOCBF0_SetInterruptHandler@InterruptHandler 0070    i1TMR2_SetInterruptHandler@InterruptHandler 0070  
  i1TMR1_SetInterruptHandler@InterruptHandler 0070    i1TMR0_SetInterruptHandler@InterruptHandler 0070  
  IOCBF5_SetInterruptHandler@InterruptHandler 00C7    IOCBF4_SetInterruptHandler@InterruptHandler 00C7  
  IOCBF3_SetInterruptHandler@InterruptHandler 00C7    IOCBF2_SetInterruptHandler@InterruptHandler 00C7  
  IOCBF1_SetInterruptHandler@InterruptHandler 00C7    IOCBF0_SetInterruptHandler@InterruptHandler 00C7  
    TMR2_SetInterruptHandler@InterruptHandler 00C7      TMR1_SetInterruptHandler@InterruptHandler 00C7  
    TMR0_SetInterruptHandler@InterruptHandler 00C7                                     ??_startup 00D3  
                            ?_PIN_MANAGER_IOC 0070                                        trunc@i 002C  
                                      trunc@x 0028                                  ??_IOCBF0_ISR 007E  
                                ??_IOCBF1_ISR 007E                                  ??_IOCBF2_ISR 007E  
                                ??_IOCBF3_ISR 0070                                  ??_IOCBF4_ISR 007E  
                                ??_IOCBF5_ISR 0070                              ?_TMR1_Initialize 0070  
                           _SYSTEM_Initialize 0BE1                       __end_of__initialization 0045  
                                  ___altoft@c 0020                                    ___ftadd@f1 0034  
                                  ___ftadd@f2 0037                            ?_SYSTEM_Initialize 0070  
                                  ___ftneg@f1 0031                                    ___ftmul@f1 0020  
                                  ___ftmul@f2 0023                                    ___fttol@f1 0070  
                              __pcstackCOMMON 0070                           ??_SYSTEM_Initialize 00CA  
                                   ?_TMR0_ISR 0070                                     ?_TMR1_ISR 0070  
                                   ?_TMR2_ISR 0070                 ?_TMR1_DefaultInterruptHandler 0070  
                               __end_of_frexp 0E40        __end_of_IOCBF0_DefaultInterruptHandler 0AAC  
     __size_of_IOCBF0_DefaultInterruptHandler 0001                _IOCBF0_DefaultInterruptHandler 0AAB  
                               __end_of_round 1000                                 __end_of_trunc 0F6A  
                            ?_TMR2_Initialize 0070                                    ___lttoft@c 0078  
                          __end_of_IOCBF0_ISR 0B65                            __end_of_IOCBF1_ISR 0B72  
                          __end_of_IOCBF2_ISR 0B7F                            __end_of_IOCBF3_ISR 0B8C  
                          __end_of_IOCBF4_ISR 0B99                            __end_of_IOCBF5_ISR 0BA6  
                              _OPTION_REGbits 0095                    __end_of_expected_device_ID 100D  
               ?i1_IOCBF1_SetInterruptHandler 0070                   ?_IOCBF1_SetInterruptHandler 00C7  
      __end_of_IOCBF3_DefaultInterruptHandler 0AAF       __size_of_IOCBF3_DefaultInterruptHandler 0001  
              _IOCBF3_DefaultInterruptHandler 0AAE                 ?i1_IOCBF4_SetInterruptHandler 0070  
                 ?_IOCBF4_SetInterruptHandler 00C7                                       ??_frexp 0074  
                             _twentyFourParse 0CFA                     __end_of_SYSTEM_Initialize 0BF3  
                                     ??_round 007E                                       ??_trunc 002B  
                                  __pbssBANK0 0057                                    __pbssBANK1 00A0  
                           ?_displayToggleISR 0070                            ??_displayToggleISR 0070  
            ??_IOCBF1_DefaultInterruptHandler 0070               ?_IOCBF1_DefaultInterruptHandler 0070  
                      __size_of_groundCathode 0011                         __end_of_sleepyTickISR 0B58  
                     _IOCBF1_InterruptHandler 00BA                                    __pmaintext 077F  
            __end_of_TMR0_SetInterruptHandler 0B1F                  ??i1_TMR0_SetInterruptHandler 0072  
                            ?_TMR1_StartTimer 0070                                    ??_TMR0_ISR 0071  
                                  ??_TMR1_ISR 007E                                    ??_TMR2_ISR 0070  
                                  __pintentry 0004                                     ?___altoft 0020  
            ??_IOCBF4_DefaultInterruptHandler 0070               ?_IOCBF4_DefaultInterruptHandler 0070  
                                     ?_muxISR 0070                                     ?___ftpack 0070  
                                     ?_wakeup 0070                            __size_of_timeParse 001F  
                                   ?___lttoft 0078                       __size_of_TMR1_StopTimer 0003  
                                   ?_checkIDs 0070                                     ?_blankISR 0070  
          __end_of_IOCBF2_SetInterruptHandler 0B0D                    _IOCBF2_SetInterruptHandler 0B07  
          __end_of_IOCBF5_SetInterruptHandler 0B19                    _IOCBF5_SetInterruptHandler 0B13  
                           ?i1_TMR2_StopTimer 0070                          __size_of_setHoursISR 0024  
                     __size_of_TMR2_StopTimer 0003                              ?_TMR2_StartTimer 0070  
                          ??i1_TMR2_StopTimer 0070           __size_ofi1_TMR0_SetInterruptHandler 0006  
                  __end_of_updateParallelPort 0C5D                                       _nT1SYNC 00C2  
                  ??_TMR2_SetInterruptHandler 00C9                      __end_of_expected_user_ID 1008  
                                     ___aldiv 05C7                                       ___almod 0649  
                                     ___ftadd 014B                  __end_of_extended_calibration 100B  
                                     ___ftneg 0B31                                       ___ftmul 0241  
                                     ___fttol 0438                                     ?_shutdown 0070  
                                     ___ltdiv 0F6A                                       ___lwdiv 0DD7  
                                     ___ltmod 0E40                                       ___lwmod 07D3  
                                  ??___altoft 0024                                    ??___ftpack 0075  
                      __size_of_isolateDigits 0084                               __size_of_muxISR 0025  
                                     __ptext1 04BE                                       __ptext2 02F5  
                                     __ptext3 0AC0                                       __ptext4 0BE1  
                                     __ptext5 0AC7                                       __ptext6 0BF3  
                                     __ptext7 0ABD                                       __ptext8 0B25  
                                     __ptext9 0C5D                               __size_of_wakeup 0091  
                                  ??___lttoft 007B                ??_TMR1_DefaultInterruptHandler 0070  
                                   _T1CONbits 0018                       __end_of_twentyFourParse 0D1E  
                               _groundCathode 0BD0                         _OSCILLATOR_Initialize 0AC3  
                                  ??_checkIDs 00C7                                     _T2CONbits 001C  
                                  ??_blankISR 0070             __size_of_TMR1_SetInterruptHandler 0006  
                            ___aldiv@dividend 0024                                       _tickISR 0C98  
                                     _minutes 0064                      ??_PIN_MANAGER_Initialize 00C9  
                                     _seconds 0066                     ?_TMR1_SetInterruptHandler 00C7  
                                   _IOCBFbits 0396                                     _IOCBNbits 0395  
                                   _IOCBPbits 0394                          __size_of_restoreTime 0102  
                                     _startup 04BE                    __size_of_SYSTEM_Initialize 0012  
                                     clrloop0 0B2C                          end_of_initialization 0045  
              ??i1_IOCBF1_SetInterruptHandler 0072                ??i1_IOCBF4_SetInterruptHandler 0072  
                           __end_of_timeParse 0C98                              ___ltdiv@dividend 007B  
                 ?i1_TMR2_SetInterruptHandler 0070                 __size_of_muxDigitCompensation 0039  
                            ___aldiv@quotient 002A                         restoreTime@calc_hours 0054  
                                  ??_shutdown 0072                              ??_WDT_Initialize 00C7  
                    _TMR0_SetInterruptHandler 0B19                                     _PORTAbits 000C  
                                   _PORTBbits 000D                                     _PORTCbits 000E  
                              ?_groundCathode 0070                                 ?_powerFailISR 0070  
                     _IOCBF2_InterruptHandler 00B8                                     _TRISAbits 008C  
                                   _TRISBbits 008D                                     _TRISCbits 008E  
                                   _TRISDbits 008F                                     _TRISEbits 0090  
                            ___ltdiv@quotient 0021                        __size_of_setMinutesISR 0021  
                      __size_of_setSecondsISR 0021                  ??_IOCBF0_SetInterruptHandler 00C9  
                ??_IOCBF3_SetInterruptHandler 00C9                         __end_of_updateDisplay 0D8B  
                               _isolateDigits 0543            __end_ofi1_TMR0_SetInterruptHandler 0AF5  
                  i1_TMR0_SetInterruptHandler 0AEF                                   ___ftmul@exp 002A  
        __end_of_TMR2_DefaultInterruptHandler 0800         __size_of_TMR2_DefaultInterruptHandler 0001  
                _TMR2_DefaultInterruptHandler 07FF            restoreTime@sleepy_seconds_adjusted 004A  
                           __size_of_TMR0_ISR 0010                             __size_of_TMR1_ISR 0015  
                           __size_of_TMR2_ISR 000D           __size_of_IOCBF0_SetInterruptHandler 0006  
                              ??_powerFailISR 007E                                _TMR1_StopTimer 0AB1  
         __size_of_IOCBF3_SetInterruptHandler 0006                        ?_OSCILLATOR_Initialize 0070  
                               __pbitbssBANK0 0370                                __end_of_muxISR 0DB0  
                              __end_of_wakeup 0438                              ?_twentyFourParse 0070  
        __end_ofi1_IOCBF2_SetInterruptHandler 0AE3         __size_ofi1_IOCBF2_SetInterruptHandler 0006  
                i1_IOCBF2_SetInterruptHandler 0ADD                           start_initialization 0034  
                    __size_of_TMR0_Initialize 0016               __size_of_PIN_MANAGER_Initialize 0065  
                              _TMR2_StopTimer 0AC0                                ?_isolateDigits 0070  
                        _extended_calibration 1008                                    frexp@value 0070  
                          _expected_device_ID 100B                      __size_of_PIN_MANAGER_IOC 0024  
                    __size_of_TMR1_Initialize 001C                                 _setMinutesISR 0CD9  
                               _setSecondsISR 0CB8                                  _ParallelPort 010F  
                      __end_of_TMR1_StopTimer 0AB4                     __size_of_displayToggleISR 0027  
                             ??_groundCathode 0070                                      ??_muxISR 0071  
               ?_TMR2_DefaultInterruptHandler 0070                                      ??_wakeup 007E  
      __end_of_IOCBF1_DefaultInterruptHandler 0AAD       __size_of_IOCBF1_DefaultInterruptHandler 0001  
              _IOCBF1_DefaultInterruptHandler 0AAC                             __size_of___altoft 003D  
                           __size_of___ftpack 0064                        __end_of_TMR2_StopTimer 0AC3  
                           __size_of___lttoft 0014                                     ___latbits 0003  
                               __pcstackBANK0 0020                                 __pcstackBANK1 00C7  
                    __size_of_TMR2_Initialize 0013                 ?i1_IOCBF2_SetInterruptHandler 0070  
                 ?_IOCBF2_SetInterruptHandler 00C7                             __size_of_checkIDs 00B2  
                              _sleepy_seconds 0057                   ?_IOCBF5_SetInterruptHandler 00C7  
                           __size_of_blankISR 000D                         _mux_digit_compensated 0068  
      __end_of_IOCBF4_DefaultInterruptHandler 0AB0       __size_of_IOCBF4_DefaultInterruptHandler 0001  
              _IOCBF4_DefaultInterruptHandler 0AAF                         _TMR0_InterruptHandler 00C4  
                     _IOCBF3_InterruptHandler 00B6                                ?_setMinutesISR 0070  
                            ___lwdiv@dividend 0072                        _PIN_MANAGER_Initialize 06B6  
                              ?_setSecondsISR 0070                     __size_ofi1_TMR2_StopTimer 0003  
            ??_IOCBF2_DefaultInterruptHandler 0070               ?_IOCBF2_DefaultInterruptHandler 0070  
            __end_of_TMR1_SetInterruptHandler 0B25                                      ?___aldiv 0020  
                                    ?___almod 0070                  ??i1_TMR1_SetInterruptHandler 0072  
                                    ?___ftadd 0034                                      ?___ftneg 0031  
                                    ?___ftmul 0020                                      ?___fttol 0070  
                                    ?___ltdiv 0078                                      ?___lwdiv 0070  
                                    ?___ltmod 0070                                      ?___lwmod 0078  
                             ?_TMR1_StopTimer 0070                  ??_INTERRUPT_InterruptManager 0056  
                            ___almod@dividend 0074                             __size_of_shutdown 003C  
                                   __pswtext1 0800                            _updateParallelPort 0C45  
            ??_IOCBF5_DefaultInterruptHandler 0070               ?_IOCBF5_DefaultInterruptHandler 0070  
                    __size_of_TMR1_StartTimer 0003                                 ??_setHoursISR 007E  
                             ?_TMR2_StopTimer 0070                                      ?_tickISR 0070  
          __end_of_IOCBF0_SetInterruptHandler 0B01                    _IOCBF0_SetInterruptHandler 0AFB  
                      __size_of_sleepyTickISR 000C            __end_of_IOCBF3_SetInterruptHandler 0B13  
                  _IOCBF3_SetInterruptHandler 0B0D                           ?_updateParallelPort 0070  
                             ??_isolateDigits 007E                              ___lwdiv@quotient 0075  
                                    ?_startup 0070                                __size_of_frexp 0035  
                              __size_of_round 0051                                __size_of_trunc 0041  
                           i1_TMR2_StartTimer 0AB7                              ___ltmod@dividend 0073  
                             ___aldiv@divisor 0020                                     _hours_LSD 00B0  
                                   _hours_MSD 00AE                             ??_TMR0_Initialize 00C9  
                             ___aldiv@counter 0028           __size_ofi1_TMR1_SetInterruptHandler 0006  
                                    _LATAbits 010C                                   _asleep_flag 0370  
                                    _LATCbits 010E                                      _LATDbits 010F  
                          ?i1_TMR2_StartTimer 0070                                      _LATEbits 0110  
                        __end_of_powerFailISR 0B43                                     clear_ram0 0B2B  
                                    _PIE1bits 0091                      __size_of_TMR2_StartTimer 0003  
         __size_of_INTERRUPT_InterruptManager 002E                    ??_TMR0_SetInterruptHandler 00C9  
                             ___ltdiv@divisor 0078                                      _PIR1bits 0011  
                        ??_updateParallelPort 0070                               ___ltdiv@counter 0024  
                                   _timeParse 0C79                           ??i1_TMR2_StartTimer 0070  
                                    _TMR0_ISR 0BC0                                      _TMR1_ISR 0C1A  
                                    _TMR2_ISR 0BB3                             ??_PIN_MANAGER_IOC 007E  
                                   _mux_digit 006A                             ??_TMR1_Initialize 00C9  
                               ??_restoreTime 0047                ??_TMR2_DefaultInterruptHandler 0070  
           __size_of_TMR2_SetInterruptHandler 0006                     ?_TMR2_SetInterruptHandler 00C7  
                __end_of_muxDigitCompensation 0EB0                     __end_ofi1_TMR2_StartTimer 0ABA  
                         __end_of_setHoursISR 0D42                ??i1_IOCBF2_SetInterruptHandler 0072  
                           ??_TMR2_Initialize 00C9                               ??_setMinutesISR 007E  
                                   frexp@eptr 0073                               ??_setSecondsISR 007E  
                           checkIDs@device_ID 00D1                                 _sleepyTickISR 0B4C  
                                  ?_timeParse 0070                   ?i1_TMR0_SetInterruptHandler 0070  
                     ??_OSCILLATOR_Initialize 00C7                              __size_of___aldiv 0082  
                            __size_of___almod 006D                              __size_of___ftadd 00F6  
                            _displayToggleISR 0DB0                              __size_of___ftneg 0009  
                                    ___altoft 0EEC                              __size_of___ftmul 00B4  
                            __size_of___fttol 0086                              __size_of___ltdiv 0045  
                            __size_of___lwdiv 0034                              __size_of___ltmod 0037  
                            __size_of___lwmod 002C                                      ___ftpack 071B  
                    _TMR1_SetInterruptHandler 0B1F                                      ___lttoft 0C06  
                       _TMR1_InterruptHandler 00C0                                      _checkIDs 02F5  
                     _IOCBF4_InterruptHandler 006C                                      _blankISR 0BA6  
                             ___lwdiv@divisor 0070                              __size_of_tickISR 0020  
                             ___lwdiv@counter 0077                                      __ptext10 0ABA  
                                    __ptext11 0B1F                                      __ptext20 0AFB  
                                    __ptext12 0C2F                                      __ptext21 0AC3  
                                    __ptext13 0B19                                    _T1GCONbits 0019  
                                    __ptext30 0C98                                      __ptext14 06B6  
                                    __ptext31 0C79                                      __ptext23 0BB3  
                                    __ptext15 0B13                                      __ptext40 0B8C  
                                    __ptext32 0BC0                                      __ptext24 07FF  
                                    __ptext16 0B43                                      __ptext41 0AAF  
                                    __ptext33 0002                                      __ptext25 0BA6  
                                    __ptext17 0B0D                                      __ptext50 0AD7  
                                    __ptext42 0B3A                                      __ptext34 0D8B  
                                    __ptext26 0BD0                                      __ptext18 0B07  
                                    __ptext51 0AD1                                      __ptext43 03A7  
                                    __ptext35 0C45                                      __ptext27 0C1A  
                                    __ptext19 0B01                                      __ptext60 0C06  
                                    __ptext52 0049                                      __ptext44 0AB7  
                                    __ptext36 0E77                                      __ptext28 0B4C  
                                    __ptext61 0E40                                      __ptext53 0FAF  
                                    __ptext45 0AF5                                      __ptext37 0D42  
                                    __ptext29 0003                                      __ptext70 0B7F  
                                    __ptext62 0F6A                                      __ptext54 0F29  
                                    __ptext46 0AEF                                      __ptext38 0B99  
                                    __ptext71 0AAE                                      __ptext63 0241  
                                    __ptext55 0E0B                                      __ptext47 0AE9  
                                    __ptext39 0AB0                                      __ptext80 0B58  
                                    __ptext72 0DB0                                      __ptext64 071B  
                                    __ptext56 0438                                      __ptext48 0AE3  
                                    __ptext81 0AAB                                      __ptext73 0B72  
                                    __ptext65 0649                                      __ptext57 0EEC  
                                    __ptext49 0ADD                                      __ptext82 0CB8  
                                    __ptext74 0AAD                                      __ptext66 05C7  
                                    __ptext58 0B31                                      __ptext83 0D66  
                                    __ptext75 0D1E                                      __ptext67 0EB0  
                                    __ptext59 014B                                      __ptext84 0543  
                                    __ptext76 0CFA                                      __ptext68 0AB4  
                                    __ptext85 07D3                                      __ptext77 0B65  
                                    __ptext69 0ACB                                      __ptext86 0DD7  
                                    __ptext78 0AAC                                      __ptext87 0AB1  
                                    __ptext79 0CD9                  ??_IOCBF1_SetInterruptHandler 00C9  
                ??_IOCBF4_SetInterruptHandler 00C9                               ___almod@divisor 0070  
                           ??_TMR1_StartTimer 00C7                              __size_of_startup 0085  
                         __end_of_restoreTime 014B                                    _IOCBF0_ISR 0B58  
                                  _IOCBF1_ISR 0B65                                    _IOCBF2_ISR 0B72  
                                  _IOCBF3_ISR 0B7F                               ___almod@counter 0079  
                                  _IOCBF4_ISR 0B8C                                    _IOCBF5_ISR 0B99  
                                  trunc@expon 002F                                 __size_of_main 0054  
        __end_of_TMR0_DefaultInterruptHandler 0003         __size_of_TMR0_DefaultInterruptHandler 0001  
                             ___ltmod@divisor 0070                  _TMR0_DefaultInterruptHandler 0002  
                              ?_sleepyTickISR 0070                               ___ltmod@counter 0077  
                            i1_TMR2_StopTimer 0AB4            __end_ofi1_TMR1_SetInterruptHandler 0AD1  
                  i1_TMR1_SetInterruptHandler 0ACB                             checkIDs@user_ID_0 00C9  
                           checkIDs@user_ID_1 00CB                             checkIDs@user_ID_2 00CD  
                           checkIDs@user_ID_3 00CF                                      int$flags 007E  
                                    _shutdown 0EB0                             ??_TMR2_StartTimer 00C7  
          __end_of_INTERRUPT_InterruptManager 0032                    _INTERRUPT_InterruptManager 0004  
         __size_of_IOCBF1_SetInterruptHandler 0006                        __size_of_updateDisplay 0025  
         __size_of_IOCBF4_SetInterruptHandler 0009                                   _minutes_LSD 005A  
                                 _minutes_MSD 00B2          __end_ofi1_IOCBF0_SetInterruptHandler 0AD7  
       __size_ofi1_IOCBF0_SetInterruptHandler 0006                  i1_IOCBF0_SetInterruptHandler 0AD1  
                                 _seconds_LSD 005E                                    _INTCONbits 000B  
                                 _seconds_MSD 005C                       restoreTime@calc_minutes 0052  
                     restoreTime@calc_seconds 0050          __end_ofi1_IOCBF3_SetInterruptHandler 0AE9  
       __size_ofi1_IOCBF3_SetInterruptHandler 0006                  i1_IOCBF3_SetInterruptHandler 0AE3  
                                 _setHoursISR 0D1E                    __size_ofi1_TMR2_StartTimer 0003  
                       __size_of_powerFailISR 0009                       __size_of_WDT_Initialize 0004  
                                    intlevel1 0000                      __size_of_twentyFourParse 0024  
                            ___lwmod@dividend 007A                       ?_PIN_MANAGER_Initialize 0070  
                           __CFG_CLKOUTEN$OFF 0000                              ??_TMR1_StopTimer 0070  
                                  _OSCCONbits 0099                 ?_TMR0_DefaultInterruptHandler 0070  
                                 ??_timeParse 0070                          _muxDigitCompensation 0E77  
                            ??_TMR2_StopTimer 00C7                                 __pstringtext1 1000  
                               __pstringtext2 1008                                 __pstringtext3 100B  
                       __end_of_groundCathode 0BE1                                    _OPTION_REG 0095  
                                _powerFailISR 0B3A                               ___lwmod@divisor 0078  
      __end_of_IOCBF2_DefaultInterruptHandler 0AAE       __size_of_IOCBF2_DefaultInterruptHandler 0001  
              _IOCBF2_DefaultInterruptHandler 0AAD                               _TMR0_Initialize 0C2F  
                                 _restoreTime 0049                               ___lwmod@counter 007D  
                                ___aldiv@sign 0029                 ?i1_IOCBF0_SetInterruptHandler 0070  
                 ?_IOCBF0_SetInterruptHandler 00C7                 ?i1_IOCBF3_SetInterruptHandler 0070  
                 ?_IOCBF3_SetInterruptHandler 00C7                                   ?_IOCBF0_ISR 0070  
                                 ?_IOCBF1_ISR 0070                                   ?_IOCBF2_ISR 0070  
                                 ?_IOCBF3_ISR 0070                                   ?_IOCBF4_ISR 0070  
                                 ?_IOCBF5_ISR 0070                __end_of_PIN_MANAGER_Initialize 071B  
                                ___almod@sign 007A              ??_IOCBF0_DefaultInterruptHandler 0070  
             ?_IOCBF0_DefaultInterruptHandler 0070                                 _display_hours 0060  
                               _updateDisplay 0D66        __end_of_IOCBF5_DefaultInterruptHandler 0AB1  
     __size_of_IOCBF5_DefaultInterruptHandler 0001                _IOCBF5_DefaultInterruptHandler 0AB0  
                             ??_sleepyTickISR 0070                               _PIN_MANAGER_IOC 0D42  
                       _TMR2_InterruptHandler 00BE                       _IOCBF5_InterruptHandler 00B4  
                                 _mux_numeral 00A0                               _TMR1_Initialize 0C5D  
                       ?_muxDigitCompensation 0070  
